%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: BTot_histogram_bymorph_Lmatched_Simard_restg.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: Brooke Simmons
%%CreationDate: 7/27/16
%%BoundingBox: 0 0 576 288
%%HiResBoundingBox: 0 0 576 288
%%CropBox: 0 0 576 288
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 8240 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFD0BFFFD0EA87DFD23A87DFD04A8FD07FFFD39A8FD08FFA8%A8A8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A87DFFA8FFA8FFA8%FFA8A8A8FFA8FFA8FFA8FF7DA8A8FFA8FFA8FFA8A8A8FFA8FF7DFD06FFA8%A8FFA8A87DFFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FF7DA8A8FFA8FFA8FF%A8A87DFFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FF7DA8A8FFA8A8FD09FFA8%FD36FFA8FD06FFA8FD37FFA8FD08FFA8A8FFFFC3CACACAC3CACAFFFFFF7D%FFA8FFA8FF7DFFA8A8A8FFA8A8FFA8A8FD07FFA8A8A8FD0FFF7DFFFFA87D%7D7DA8A8FFA9A985A9A9A97FFFFFFF7DA8A8FFA8FFFD05A8FFFFA8A8FF7D%FD05FFA8FD13FFA8A8FD09FFA8FFCACAFD04FFCACAFFFF52FF7D5252527D%A87D52527DA87D7DFF527D7D527DA87DA87D7D5252A8FD0EFFA8FFFFA852%527D7DA8FFA9A9FFA9FFFFA9A9FFA87DFF527D7D527D7D7D527DA8FF27FF%A852FD047D527D7DA8527D7D7D52FD0CFFA8A8FD06FFFD04A8FFCACAFFCA%FFCAFFC3FFFF7D7D7D525227527D7D527D527D7D52A8A8277D7D7DFD0552%7D52A8FD0EFFA8FFFFFD06A8FF7EA9A9FFA9FFA9A9FFA852A827527D5252%7D527D7D7DA8527DA87DA8275227527D52527D5252527DA8FD0BFFA8A8FD%05FF527D52A8A8FFFFFD06CAFD04FFA8FFFFA8FFFFFFA8FFA8FFA8FFA8FF%A8FD05FFA8FFA8FFA8FD10FFA8FD06FFA8FFFFFFFD06A9FFFFFFA8A8FD05%FFA8FFA8FFA8A8A8FD05FFA8FFA8FFA8FFFFFFA8FFA8FD0DFFA8FD05FF7D%527DA87DFD36FF7DFD06FFA8A8FD35FFA8A8FD09FFA8FFFFFFCAFFCAFFFF%CAFFFF7DA87DA8A87DA87DA8FF52FFA8FD05FFA8A87DFD16FFA8FD06FFA8%FFFFFFA9FFFFA9FFA9A9FFA87DA87D7DA87DA87DFF7D7DFD04FF7DFFFFFF%A8FFFFA8A8FD13FFA8FD08FFA8A8FFFFCAFD05FFCAFFA87D527D7D52527D%52A8A8525252277D527DFD0552FD15FF7DFD06FFA8A8FFA9FD05FFA9FFFF%A8527D7D7D527D7D7DFFFD055227527D7D5252277D527DFD12FFA8A8FD09%FFA8FFCACAFFFFCAFFCACAFFFFFD047DA87D7D7DA8FF527DA8A8FD057DA8%A8A8FD15FFA8FD06FFA8FFFFA97FFFA9FFFFA9FFFFA8FD047DA852A852FF%7DFF7DA8527D7DA852A8A87D7D7DA8FD13FFA8FD08FFA8A8FFFFCAFD05FF%CAFD07FFA8FFA8FD07FFA8FFFFFFA8FD17FF7DFD06FFA8A8FD05FFA9FFA9%FFFFFFA8FFFFFFA8FFA8FD05FFA8FFFFFFA8FFFFFFA8FD15FFA8A8FD09FF%A8FD36FFA8FD06FFA8FD37FFA8FD08FFA8A8FD12FFA8FD07FFA8FFA8FD19%FFA8FD06FFA8A8FD09FFA9A985A97FA9FD0DFFA8FFFFA8FFA8FD13FFA8A8%FD09FFA8FD0BFF7DFD08A8FF52A8A8FFFFA85252FD19FFA8FD06FFA8FD0B%FFA9FFA9FFA9FD05FFFD05A8FF7DA852FF7D527D7DA8FD13FFA8FD08FFA8%A8FD0BFFFD0452A87DA8A87DA87D52A8A8FFA87D52FD19FFA8FFFFA87D7D%7DA8A8FD09FFA9A9FFFFFFA9A9FD04FF7D5252527DA8A8A87DA8A8527D7D%FD13FFA8A8FD09FFA8FD0BFFA8FF7DA8FD27FFA8FFFFA87D7D7DA8A8FD0A%FFA9FFFFFFA9FD05FFA8FFA8A8A8FD1CFFA87DFD05FF7D527DA8A8FD36FF%7DFFFFFFA8A8FFA8A8FD09FFA9A9FFFFFFA9A9FD25FFA8A8FD05FF7D7D52%A87DFD35FFA8A8FD06FFA8FD0BFFA9FFFFFFA9FD27FFA8FD08FFA8A8FD2C%FFCAFFCAFD07FFA8FD06FFA8A8FD09FFA9A9FFFFFFA9A9FD25FFA8A8FD09%FFA8FD2BFFCAFFFFCACAFD06FFA8FD06FFA8FD0BFFA9FFFFFFA9FD27FFA8%FD08FFA8A8FD2AFFCAFD04FFCACAFD05FFA8FD06FFA8A8FD05FFA9FFA9FF%A9A9FFFFFFA9A9FD25FFA8A8FD09FFA8FD2BFFCAFFFFFFCAFD06FFA8FD06%FFA8FD06FFA985FD04A9FFFFFFA9FD27FFA8FD08FFA8A8FD36FFA8FD06FF%A8A8FD05FF85FD08FFA9A9FD25FFA8A8FD09FFA8FD2BFFCAFFFFFFCAFD06%FFA8FD06FFA8FD06FFA9A9FD07FFA9FD27FFA8FD08FFA8A8FD2AFFCAFD0B%FF7DFD06FFA8A8FD05FFA9FD08FFA9A9FD25FFA8A8FD09FFA8FD36FFA8FD%06FFA8FD06FFA9A9FD07FFA9FD27FFA8FD08FFA8A8FD2AFFCACAFFFFFFCA%CAFD05FF7DFFFFA87D7D7DA8A8FD05FFA9FD08FFA9A9FD25FFA8A8FD05FF%7D7D7DFF7DFD36FFA8FFFFA87D7D7DA8A8FD05FFA9FD08FFA9FD26FFA8A8%FD05FF7D527DA87DA8FD29FFCAFD04FFCACAFD05FF7DFFFFFFA8FFFFA8A8%FD05FF85FD08FFA9A9FD25FFA8A8FD05FF7DFFA8FFA8FD2BFFCAFFFFFFCA%FD06FFA8FD06FFA8FFFFFFA9FFFFA9FD08FFA9FD27FFA8FD08FFA8A8FD22%FFCAFFCAFD11FFA8FD06FFA8A8A9A9FFA9FF7FA9FFFFA9FD04FFA9A9FD25%FFA8A8FD09FFA8FD11FFCAFD06FFFD06CAFFFFFFFD04CAC3CAFFCAFFCACA%FFFFFFCAFD06FFA8FD06FFA8FD06FFA97FFFFFA9FD04FFA9FD27FFA8FD08%FFA8A8FD0EFFFD04CAC3CACAFFFFFFC3FFCAFFCACAFFFFFFCACAFFFFFFC3%FFCAFFCAFD0BFF7DFD06FFA8A8FFA9FFFFFFA9FD04FFA9FFFFFFA9A9FD25%FFA8A8FD09FFA8FD0FFFCAFFFFFFCAFD04FFCAFD04FFC3CACACAC3FFFFFF%CACAFD0FFFA8FD06FFA8FFA9FD04FFA9A9FFFFFFA9FFFFFFA9A9FFFFA9FD%23FFA8FD08FFA8A8FD0EFFCACAFD04FFC3CAC4CAC3FD04FFCACAFFCACACA%FFFFFFC3FD08FFCACAFD05FF7DFD06FFA8A8FD05FFA9FD05FFA9FFFF7FA9%FFA9FFA9FD21FFA8A8FD09FFA8FD07FFCAFD07FFCAFD07FFCAFFCAFFFFCA%FD04FFCAFFFFFFCACAFD0FFFA8FD06FFA8FFA9FD04FFA9FD04FFA9A9FFA9%7FFD27FFA8FD08FFA8A8FD06FFC3CAC3CAC3CACAFFCACAFD08FFCAFFCAFF%CAFD09FFC3FFCAFFCAFD04FFCACAFFC3FFFFFFA8FD06FFA8A8A9A9FFFFFF%7FFD08FFA97FA97FA9A9FD21FFA8A8FD09FFA8FD06FFCAFD04FFFD05CAFD%11FFCAFD04FFC3FD05CAFD07FFCACAFFA8FD04FFA8FFA8FD06FFA9FD0AFF%A9FFA97FFD22FFA8FD05FF7DA87DA8A8FD06FFCAFD09FFCAFFCAFFC3FFFF%CACAFD09FFCAFFCAFFCAFFFFFFCACAFD08FFCAFFA8FD04FF7D7DA8A8A9A9%FFFFFF7FFD0DFF7FFD21FFA8A8FD05FF7D7D52A87DFD05FFCACAFD08FFCA%CAFFFFCAFD17FFCAFD09FFA8A8FD04FF7DA87DA8FD05FFA9A9FD0CFFA9FD%21FFA87DFD05FF7D7DA8A8A8FD06FFC3FD07FFCACAFD1AFFCACAFD08FFCA%FF7DFD06FFA8A8FFA9FFFFFFA9FD0DFF7EFFA9FFA9FD1DFFA8A8FD09FFA8%FD06FFCAFD08FFCAFD1BFFCAFD0AFFA8FD06FFA8FFA9FD04FFA9A9FD0CFF%A9FD04FFA9FD1DFFA8FD08FFA8A8FFFFC4FFCACAC3FD23FFCAFD09FFCAFF%7DFD06FFA8A8FD05FFA9FD0DFF7FFD21FFA8A8FD09FFA8FFCACACAFFCACA%FD08FFCAFD1AFFCBCAFD07FFCAFFFFA8FD06FFA8FFA9FD04FFA9FD0DFFA9%FD04FF7FA97FA97FFD19FFA8FD08FFA8A8FFC3C3CAC3CAC3FD23FFCACAC3%CACAC3CAFD05FFA8FD06FFA8A8A9A9FFFFFF7FFD0DFFA9FFFFFFA985A9A9%A97FA9FD17FFA8A8FD09FFA8FFCAFD0DFFCAFD1FFFCAFFFFFFCACAFFA8FD%06FFA8FD06FFA9FD0DFFA9A9FFFFFFA9FFFFFFA9FD19FFA8FD08FFA8A8FF%C3FD04FFCAFFFFFFCAFFCAFFCACAFD1FFFCACAFFFFFFCAFFA8FD06FFA8CF%A97FFD04A9FD0DFFA9A985A9A9FD04FFA9A9FD05FFA9FFA9FD05FFA9FFA9%FD07FFA8A8FD09FFA8FFC3FFFFFFCACAFFFFFFCACAFFCAFD21FFCAFD06FF%A8FD06FFA8FFA9A9FD1AFF7FFFA9FFFF7FA97F7FA9A9FFFFFFA9A9FFA9A9%FFFFFFA9FFFFFFA8FD08FFA8A8FFCACAFFFFFFCACAFFCACAFD24FFCAC3CA%C3CAC3FF7DFD06FFA8A8A9A9FD1AFFA9A9FFA9FF7FFFA9FFA97F7EA97F7F%FD04FF7EFFA9A9A9FFA8A8FD07FFA8FFA8FFC3FD32FFCAFFA8FD04FFA8FF%A8FFA9A9FD1AFFA9FD04FFA9FD06FFA9FF7FFD0BFFA8FD06FFA8527D7DA1%A1A87D7DA87DA8A8A884A87D7DFD04A87DA8A8A87DA8A8A87DA8A8A87D7D%A8A87DA8A8A87DA87DFD05A87DA8A87D7DA8A1A87DFD04FF7D7DA8537E7E%A87DA8A8A87DFD04A87DA8A87DA8A8A87DA87DFD05A8A77E7E7E537E7EA8%7DA8A8A8A7A7A87E7DA87E7E7EA8537E7EA87DA8FD07FF7DFFA8FFFFA8A8%FFA8FFA8FFFFFFA8FFA8A8A8FFFFFFA8A8A8FFA8FFFFFFA8FFA8A8FFFFA8%FFA8FFFFFFA8FFA8A8A8FFFFFFA8A8FFFFA8FFA8FD05FF7DA8FFFFA8FFA8%FFA8FFFFFFA8FFFD05A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8A8A8FFA8FFFF%FFA8FFFD05A8FFA8FFA9A8A8FFA8FFA8FD0DFFA852A87D7DFD04FFA8527D%FF52FD05FF527DFF27A8FD04FF7D52FF27A8FD04FFA852A85252FD05FF7D%FF7D52A8FD0BFF7D7DA8527DFD04FFA852FF7D7DFD04FFA852A87D52FD05%FF52A87D52FD05FF7D7DA827A8FD04FFA87DFF527DFD0EFFA87DA8A87DFD%05FF52A8A87DFD05FF7D7DA852FD05FFA87DA87D7DFD05FF52A8527DFD05%FFA8A8A87DFD0CFFA87DA852A8FD04FFA87DA87DA8FD05FF52A87D7DFD05%FF7D7DA852FD05FF7D7D7D52A8FD05FF7DFF52A8FD0FFFA8FFA8FD07FFA8%FD07FFA8FD0BFFA8FD0FFFA8FD1BFFA8FD07FFA8FD11FFA8FFA8FD07FFA8%FD26FFA8A8A87DA8FFA8FD38FFA8A8A87DFFFFA8FD3AFF7D277D527D5252%7DFD37FF27527D7D525252FD3AFFA87D7DFFA87D7DFD38FF7D7DFFA8A87D%A8FDFCFFFD9EFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2016-07-27T14:21:58+01:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qhdU1FNPszcvFJP8A&#xA;vIokhi482eaVYkA5si/acdWGKoC58w3ltbS3M2hX4ihRpJCGsiQqCp2FzU7DFVT9M6j/ANWG+/4O&#xA;x/7KcVd+mdR/6sN9/wAHY/8AZTiqnF5hvJZJo00K/LW7iOUFrIUYosm1bnf4XHTFVT9M6j/1Yb7/&#xA;AIOx/wCynFVNvMN4tzHbHQr/ANWRHkQcrKnGMqG3+s06yLiqp+mdR/6sN9/wdj/2U4qp3HmG8t4x&#xA;JLoV+FZ0jBDWR+KVxGvS5/mYYqqfpnUf+rDff8HY/wDZTirv0zqP/Vhvv+Dsf+ynFVO38w3lxGZI&#xA;tCvyqu8ZJayHxROY263P8ynFVT9M6j/1Yb7/AIOx/wCynFVNfMN41zJbDQr/ANWNEkccrKnGQsF3&#xA;+s06xtiqtb63JJexWlzp1zZPOHMLzG3ZWKAFh+5mlIND3GKpniqW3esvDfNZW9hcXs0cSTS+gYFV&#xA;VlZ1SpmlhqSYm6VxVQbzDeLcx2x0K/8AVkR5EHKypxjKht/rNOsi4qqfpnUf+rDff8HY/wDZTiqn&#xA;c+Yby2tpbmbQr8RQo0khDWRIVBU7C5qdhiqp+mdR/wCrDff8HY/9lOKu/TOo/wDVhvv+Dsf+ynFV&#xA;O38w3lxGZItCvyqu8ZJayHxROY263P8AMpxVU/TOo/8AVhvv+Dsf+ynFVNvMN4tzHbHQr/1ZEeRB&#xA;ysqcYyobf6zTrIuKqn6Z1H/qw33/AAdj/wBlOKqdx5hvLeMSS6FfhWdIwQ1kfilcRr0uf5mGKqn6&#xA;Z1H/AKsN9/wdj/2U4q79M6j/ANWG+/4Ox/7KcVU7fzDeXEZki0K/Kq7xklrIfFE5jbrc/wAynFUb&#xA;pupLfLP+4ktpraT0Z4JuBdXKLIN42kQ1SRTs2Kot3SNGkkYIiAs7saAAbkknFUm8wXVtNp8awypI&#xA;yX2mlwjBiA97Ay1p0qNxiqLup9QbUFtbWSKICIyu8sbS1+LiAAskVMgSboOTjhAQ4pAnetjX6C70&#xA;dd/5bLX/AKRZP+yjGpd4+X7V4sP82X+mH/EJZrnme40nybca80Mcs9ugLKSY4QTIIzI7fGUjSvNz&#xA;vRQcMTYYajGITIHJhWv/AJ0T6HdpZSLZaoY7K6uLzUbEytaJcBJnsouYEiJ6jWzRurScuTJSu9JN&#xA;Kgn53alJplzeNY2lncaal6b2yu5XjaS40+2sZZLWB6bvJJfOIm4tyVVIHxYqmGkfm3e3GsRQ6jb2&#xA;tlps2u3ujCeSWJWjSzTUCsj/AL93VnbTkFJI0HxHjy2OKozSvzF1i90vzPN9Xs31PRaNbWKzIsZS&#xA;VpFgLXZlaB/U9Oo+JN9mC9cVS+L86pY9Nium0eTUY1ila7vLV4oI1lgS6lljEU0jP8Meny7hmUtQ&#xA;AkHkFVfUfz00Gxl1COSwnb9HzSxufUgXlHA12shId14y106X04W+N6rTq3FVdoP5ranfeYo9Nu9L&#xA;iS1bjDNPbXCytBO97cWiiUHid2twCoFV6nbFXpOKuxV2KpVqP/He0j/o4/5NjFWP+d9T87W+rQwe&#xA;XIJ5IjZTyzuYY5LfmoIRY2I5m4r8SqzBKCm5YcVUT5SuNfm1L1NWgWO7fSbFrwk8JBJ613xrEqlA&#xA;WXdgH+E7CuKpnZzeYL1JZorq0hiW4uIY42tpJGCwTvEKsLhASQlfsjMzJHFAgESJqJ+odQD/ADT3&#xA;sRZbmn1yzmtTcXFrPDNOkLpHbyRN8YO4YzyDan8uCMcUwaEgQL+oH/ehd0t8xebp9O8y2OkLNY2M&#xA;MsBu5rvUpDEsqLKsRhtqFQZBy5MT9mq7HltiMnn83/OQl2NIutTi0flHaPdTSxv6ySDT/RV7G7CO&#xA;isVkkkCykfCoV2UkLuqj5Pzn1ZVuQlrYzTCaaGGCOb97AIdQgsQ90kjxoqSC45KxkQVFDtVgqm1z&#xA;+ZuoLoOoS28dk+tWdxbQraNcQAmKa2t55ZhH9Y4yemZ3AVJvi47MTiqvd/mLqAuNAksLMXulajo8&#xA;muX91FGTItvEIWrHFJJC/wAQm2FGatBx64qkF7/zkRpCaYs1rpk5vp4bh7e1m5L8ccLSwlvh+xJx&#xA;pXY+AI3xVPD+b1m08ljb2AutVR0jW0huomVjJNp0KOslB+6Y6shD03CmnbFUqn/Pqxl095dP0qdb&#xA;n1Wji+ukQRFEdI2arlC783/u136+GKvVsVdirsVSby81y15rpuY0jl+vrVI3Mi0+pW1PiKxnp/k4&#xA;qqeavL1v5j0C80W4nlt4L1VSSWDhz4q4cqRIsiMj8eLqykMpI74qw+2/LweW7GZ49Ulne5m0i2Sb&#xA;0oklX0b2ItIxoyOzO5IqtFGwGKs11G3tJ2ijls4b+dRULMI+Sodiw5A9x2yEgD0tysE5xBIlKA8r&#xA;5/BS/Qul+vIn6GtfSVapL6cXxNt8PHjUYOAdwZ/msnCD4kr7rKzU9Yj0by1NqbadMyWsQP6OtkVp&#xA;KVC8VVfhoK1J7Lvk48nGzfUd+Lz72KWn5m+X/T9CPRZG01fQQy2X1W5g9a4RpIIkWKSrljHxBVTR&#xA;qA03oWtU038ztF1C70dBpZik1SZo455JLYJDMpRPSZy/+9FCP3P26Dp0qqq3nn7yva6zqunahpbx&#xA;NYyRq37lZp7mSVlRHhtYw88iM0wAkC8a1rTuqqWX5kfltcWsawS8LW/kCsr2VxDH++EBjknDxKES&#xA;UXkHF3oG5j3oqhZPzZ8lJGsdjZ3d1CnoK4jspUWJJpIIkUxuiyAmK9jkRAnxKwpu1MVZfpVzo2s6&#xA;bDqVmiTWl7xuEd4+DMwoFZ0cBg68afEKimKo1ba3VmdYkDMeTMFAJNa1JxVUxV2KuxVJtSif/Euj&#xA;y+s4QLcL6FE4V4A8q8edf9lT2xVOcVSq2/5SrUf+YGx/5PXeKqA0rRru4uZTotnMvKQi5KQsZZVY&#xA;h1aq1DcwQSe+Zvj5IADxJDltvsOn2MaHcut9M0+1e0uItCt4Lh5CrvCkPKEGoD8lAqD7eOCeachI&#xA;HISPO91odyA81+btL0nV9N02/wBPNx9crJBdS+ikCuh48EeZl5Tb1CL8RHTwzDZJJP8AmvpEUETX&#xA;Wh3FtNMLdJRcm1SCO2uomlhkkufUaJEcKyqHI+IEEDriqLH5haH+gvM+py6W8UGgeo97Zv6IuJRE&#xA;XHJ4OXJOfpVT1KVHTvRVDJ+Z35YSVtb829vfrafXJrCSD1GWFaMoLBDHXiVYLWtN+2KpjZfmh5Ou&#xA;orq6hM62dnGWW9a3dY5Ilsk1BvSNOXwwMCVYBgdqdMVQb/md+Vdnew29xPFY3EklykDTWkkIPoOR&#xA;O6uYwOBlQryrRmU0rTFU/wDK2saNrsF1e2Nk1utvObMmeAwSt6AVhWORUkUAtsGHviqbHTtPLMxt&#xA;oizSesxKLUyAceZ2+1TauKojFXYq7FUq0b/jo69/zHJ/1A22KpriqVeZv+OdD/zHaf8A9R0OKo2a&#xA;wtprmO5fmJohRWSSRARXlRlRlDCo6MDkTEE22xzSjExFUfIH7+XwcLGGsx5S/v8A7f76Xb/U+L4P&#xA;9hTHhXxjty28h9u2/wAVl1pVldac2nTCRrVlCmksqyfCQwImVhKGBFeQauECmE5GRspPb/l35Kt5&#xA;Vlh0qJZFUorVckVVlL7sf3lJG/efa3O++Fi3B5B8oWrwSLZnlDOLlDLPPJzuAysks3qSN60isilG&#xA;k5FaClKYqrr5W8sNrUmpG3WXVAQ5d5ZJDHV1k+BGdliDPErHiBUgE4qpP5F8mq9pK+mQKbN4zbV5&#xA;BQyLDFECK0cL9Vh4q1RyRT9oA4qt07yL5LtlhlsLCNVikEkbpJIwLI8TLyPI8xG1rFwVqheCgUAG&#xA;Kp1YafZafaR2dlCsFtFX04k6DkxY0+kk4qiMVdirsVdiqVaj/wAd7SP+jj/k2MVTXFUqtv8AlKtR&#xA;/wCYGx/5PXeKoiHR7KFLlIvWRLt2klAnn2Z3Z2Mfx/u6s5J4Uy6WokSCa9PkPdvtv8bRS/8ARtty&#xA;t2LTE2v91WeYg7U/eDnST/Z1weKd+Xq8h9m23wWko1+08lXd/C2tz25urQqyQT3JjUFWEkbPDzVH&#xA;KtRkLKaHcYYabJIXGMiPIFTIIOz8m/lzfWMlhYwW9xaKQbmK3uHbmGT0wk5jkrIhReISQlaClMjk&#xA;wzh9QMfeKUEFM4fJnlqKHUIRZCSPVEEV+JpJZjJEpcrHWRmKxqZX4otFHI0G+VpdqXkzy5qVzcXN&#xA;5as0t2qLclJpog5iIMbssbovqRlBwkpzWmxGKoK4/LnyKbRYJtMjS1T0xw9SRF/dxmBAaOK1jbga&#xA;/aGxrtiqNufKXleSSJ5rRFaNJIlUO8avHO5LxyqrKsqM8hPBwRyPSuKonQtE0bRrE2mkwiG1aR5G&#xA;AdpC0jGjszuzsTtvU4qmOKuxV2KuxVKtG/46Ovf8xyf9QNtiqK1bVbLSdOuNRvmZLS1X1J3SOSZl&#xA;UdTwiV3NPYYqx+881aDrVp6OmXX1h4LvS5H+CRFKS3sJVkZ1VX6ENxJ4nZqHbFWV4q7FUr8z6bf6&#xA;nod1YWFybO6uAqJdLJJE0Y5qXZXhKuG4VpQ9fbFWM6R5O862mqwG58wSz6TbTQsitNK87xW8XpBZ&#xA;eSgMZuCvJv8AaLfSqmbeSCLeGJdWu7l4by3vUl1BvrZRrckhY/7rjyrQnFVF/Ic7eZG1xdYuIWnm&#xA;tZ7y1g5Qxzm0i9MK5RwxRqV49OzBhSiqv5j8jwa3py2U1/cALMZQ8pEtOcEtuwUHjxIS4Zkb9lwr&#xA;b0piqO8peXV8u6FBpK3DXSwNIVkYcaB3L8VWrUA5dK/0xVOMVdirsVdirsVSrUf+O9pH/Rx/ybGK&#xA;pL5xn83x6oseiveJa3GmXcZlt4LSeOC+9SE203GbjIzcPWHHlwO1RXFVbytJrj6mp1WER3raNpp1&#xA;AvIhlW453XIFYkERqaklSAOwpirKcVdiqW6T/vfrX/MYn/UHb5k5/ox/1f8AfyYjq63/AOUkv/8A&#xA;mDs/+Tt1jL+5j/Wl90F6qmvWd5e6HqFlYzfV7y6tpYbe4DvGY5JEKq4eP41Kk1qu/hmMyYda+R/O&#xA;1tfrx8yTS2C3Fu4WWad5PQRvUuF+LkSZGPFOTnioAJb4qqphr/5cwaxp2oWU+r37pfkkpcS+vFFy&#xA;5AiOIhQKB/hr0IB7Yqt178vZNX1601qXVGFxaRwokDwq8Ia3vYL1XVeSspL2oVvirQnfpiqa+TfK&#xA;sHljRl0yGdrhVbl6jKFNAqxrsCd+KDke7VO1aYqnmKuxV2KuxVJvLzXLXmum5jSOX6+tUjcyLT6l&#xA;bU+IrGen+TiqP1TTbfU7CaxuTIsE4CyGKRonoCDQOhDb038Rt0xVi175G8r6Np7/AFCz4x3VzpUE&#xA;sEskk0QihvYQqJHKzogNSW4j4ju1TirMwAAABQDYAdKYq7FXYq7FXYq7FXYq7FXYq7FVK5mMUdU4&#xA;GViFiWRiisx6DkAx/DASzxxs73Xlv+pRmubyGJJpYoUiRS925lakaruSv7v49vHjgJIbI44SNAm/&#xA;4dufv9W32ovJNCTalb258y6PcGJPrAW4QTcRz48AePLrSvbFU5xVKrb/AJSrUf8AmBsf+T13iqa4&#xA;q7FUt0n/AHv1r/mMT/qDt8yc/wBGP+r/AL+TEdXW/wDykl//AMwdn/ydusZf3Mf60vugvVMsxmTs&#xA;VdirsVdirsVdirsVdiqVaN/x0de/5jk/6gbbFU1xVKvM3/HOh/5jtP8A+o6HFU1xV2KuxV2KuxV2&#xA;KuxV2KuxV2Koe8IHoVgM375Olfg6/HsD0yMm3F13rb5+TtQ/459z+5+s/un/ANH6ep8J+Dv9rpjL&#xA;kVwfXHfh3G/d5/BEZJqSrUf+O9pH/Rx/ybGKpriqVW3/AClWo/8AMDY/8nrvFU1xVj2jaDodzbTz&#xA;3GnWs0z3t8XlkhjZjS8lG7EEnNhqNTljIASkBww6n+aGAiE6s7GxsojFZ28VtEzcjHCixqWIArRQ&#xA;BWgzCyZZTNyJJ82QFIS3/wCUkv8A/mDs/wDk7dZdL+5j/Wl90EdUyzGZOxV2KuxV2KuxV2KuxV2K&#xA;pVo3/HR17/mOT/qBtsVXeZtaXQ9CvNWZY2W0QOyzS+ghHIA1fjIa77AKSTsBU4qxM+fbfWre5gaw&#xA;ntDY3OlTMjUllIkv41ZWii5srK8ZAG/IbjFWfgggEdDvvsfuOKuxV2KuxV2KuxV2KuxV2KuxVD3g&#xA;P7ik3o/vVr/l9fg+nIybcXXa9vl5u1Gv6PuqTfVz6Mn+kf77+E/Ht/L1xlyK4P7yO3FuNu/yRGSa&#xA;km1KdB5l0eCj8ytw9eD8KcAPt04V9q1xVKfOB87rqiHy/Hcy2smm3cb+mbERR3gkheBx9YZZfUaN&#xA;ZUX7UYJXkAKnFV/lI+YBqRXWUBvf0VYm9d3T1RL613QMsKmEnj9oo1K9KjFWWYqlvl7/AHgl/wCY&#xA;y+/6jJcydV9Y/qw/3EWMUyzGZJbb/wDKSX//ADB2f/J26zJl/cx/rS+6DHqmWYzJ2KuxV2KuxV2K&#xA;uxV2KuxVJvLzXLXmum5jSOX6+tUjcyLT6lbU+IrGen+TiqaXVpa3cDW93DHcW705wyqHRqEEVVgQ&#xA;aEVxVKNdsbK209GtreOBpL3TQ5jRULBL2FUB4gV4jYeGKp5irsVdiqldXUNrCZpiRGCq/CrMSWYK&#xA;oCqCxJYgbDATTPHjMzQ5oRtdsUUsyXIVQSxNpdUAH/PPI+IPP5FvGkmdrj/p4f8AFI9HWRFdDVHA&#xA;ZT4g7jJuMQQaKXxaxNMnqQ6bcyREkK4NuAaEioDTA9u4yAnfQ/Z+typaYRNGcQf87/iURZXouhKD&#xA;E8EkD+nLFJw5BuCuN0Z1+y474Yytpy4uCtwQRe195HUDuUp72++vPa2lvFKYoo5ZHllaL+8Z1AAW&#xA;OWv92cBkboNkMUOASkSLJGwvlXmO9TTU75NQjsrq1jV5oJriL0JjIT6DRqy/HHCAT6wpvg4jdEMj&#xA;p4HGZxkaEgDYr6uLuMv5qs8s0y2xaxeplBZZGiBi41o54u9fYLXJXfRgIiPF6xy6Xv5ch9qpqH/H&#xA;Puf3P1n90/8Ao/T1PhPwd/tdMZciwwfXHfh3G/d5/BEZJqSrUf8AjvaR/wBHH/JsYqmuKpNWQeYt&#xA;WMRCy/o6z4M3QN6t5Qn2rkoVYvkqOt7SQ0nluJGlkiVHRW/dBqCrIKbGo65OcxyAFX8UUlnlddRi&#xA;s54SiSW0dzfejcSTMZnb65Ls6CIKo6/EGPyzJ1pgZA8jww2rb6By3/Qxjab2c80sbCcRJcRtwmih&#xA;kMqoaBgCxWM1KsDQr3zFyRAO115iv0lkEJb/APKSX/8AzB2f/J26y2X9zH+tL7oI6plmMydirsVd&#xA;irsVdirsVdirsVSrRv8Ajo69/wAxyf8AUDbYqmuKpV5m/wCOdD/zHaf/ANR0OKpriqGu9StbSWOK&#xA;X1DJKrMiRRSykqhUMT6avSnMdciZAN2PBKYJFUO8gc/eR3KcWsWUk8cAEySTErH6tvPECQpcjlIi&#xA;rXipPXAJhlLTTAJ9NDulE+XQrda/3jj/AOYq0/6io8Z8viPvTpfrP9Wf+4kjLiL1oJIq8fURk5da&#xA;chSuSIsNEJcMge5AQWmuRQxxC9tSI1Cg/VZN+Ip/y0ZACQ6j5ftcmeTDIk8Mt/6Q/wCIb0hnito7&#xA;YI08aKT9dUIsTtWpCqZGcbnuPpww5UupAlIyuj/N3sfZSjHolvcz3N7J9dtZbsgyQfWnRQVRYwyr&#xA;BIUB4oO+REAd9xfmzlq5QjGA4JCPXhB6k/xRvqq6Zpf1G8uOJlljeKEC5nmkmkZlaUlPjZqBQwpQ&#xA;Dr37GMKLDUajxIC6BBOwAA/h32HX9Dp/U/xHY0A9P6nd8j35erbcf44T9Q9x/QsK/Ly7+OH3TTLJ&#xA;uIhtTYLpt2xnFqFhkJuTsIgEP7z/AGPXIz5Fu04vJEVxbjbv35fFd+kLDnCn1mLncANbrzWsgPQo&#xA;K/EPlh4h3sfBnRPCfTz25e9A6j/x3tI/6OP+TYwtaa4qkknpfp7WPVBaL9G2nqKv2ivqXlQPemTx&#xA;3xCudoKa2XpfU4PSBWL009NW+0F4igPvTHJfEb52oQfl7/eCX/mMvv8AqMly7VfWP6sP9xFEVeOK&#xA;5ivZjFbxC3nPqyzeq/qNKEVBWP0ytOKKK8/oyskGIsmx0raufO/PuSkiXiWvma4utZuodOZrO2SG&#xA;H6yPRk4yXHI1kSEsy8xUdtvHM04+LCI4wZ+qW/DuNo9xLG990Xp+o6e13BaWGrw3wb1Hmja4jmmI&#xA;CgDgFNaA9cqy4p8JlOBjy/hICQR3p3mEydirsVdirsVdirsVdiqVaN/x0de/5jk/6gbbFVPznf6r&#xA;p/lXVb7SEMmqW9u8llEtvLdl5VFUQQQkSNzPw7dOp2GKsYm8w+ZL261SO70+QaZbXmlPpo+rS20j&#xA;c7+Oi+pcMkcpeMK5oF9Mni3xdFXoAJIBIoT2PUfdiqAm/wCO7Z/8wt1/yct8gfqHuP6HJj/cy/rR&#xA;+6aJurKzu0WO6gjuEVuSpKiuA1CKgMDvQnJGIPNqx5ZwNxJifLZBz6RodsgmXT7RZUZDAWiRB6pY&#xA;CL4grFTzpQgbZAwiOgb4anNI1xzre9zy69e5E+pqPpxH0IfULfvl9ZuKrXqrel8Rp2IGS3aax2dz&#xA;XTb7/Vt9rQt776uUN3WYtUTemuy/y8emNGuaeOHFfDt3WiIokijWNFCqvQAUHj0wgU1ykZGyuwsV&#xA;BrSs8s6zSI8sSxUXiQvEsQ6hlb4vjPXb2wVu2DJ6QKBo3923u2Q82i2VzJbyXyi9e3SSNDcJG1fV&#xA;ZGJICBa/uwBQDImAPPdtjqpwBEPQJEHYnpfn5oW+0rS7aWyltrOCCUXMYEkcaI1DUHdQDkZQAqh1&#xA;bsWoyTEhKUiOE8yU5y1wHYqxuKSMah5bitopTafVpGhuHKfZ9FQqsA3LlTc0WmRhVCm7U8Xiy4vq&#xA;4jfvtMfM8GoXHl+/g055or6WFkt5Lb0/WVjtyj9V4k5DtydR75JpSTy8PMEd08eoLCuoJomni7l9&#xA;Rm43KtdDo3q8hX7RMh/2XXJQqxfJWVWxkNvEZSGl4LzZeham5HtXGdWa5KgfL3+8Ev8AzGX3/UZL&#xA;l+q+sf1Yf7iLGKZZjMnYqkWsvbJ5l0FpiVdReFGqAgAhBYtX2zO04kcOSv6P3sDzCaRanps0UcsN&#xA;3DJFM/pRSJIjK8lCeCkGhagOwzFlhmCQQQRvyZWETlaXYq7FXYq7FXYq7FUm8vNctea6bmNI5fr6&#xA;1SNzItPqVtT4isZ6f5OKpziqVeZv+OdD/wAx2n/9R0OKuudaVNRa1jZx9W4G5VbWe4qJBVeLxGim&#xA;n8wOVme9foc3Hpbx8Rr1cvXGPLyPP4KFtevceZIQSxjFrcmINaz25UerBsWl2c/6oGRErl8D09zZ&#xA;kxCOnPfxR/ijLpPu5J5lzrkPff3K/ufX/ew/B4fvV+Pv/d/b+jIybcPPnWx+47fHl8URkmp2KuxV&#xA;2KuxV2KoDWOSxW8oR3WK4jdxGjSMFFanigZj17DITcnS8yNt4nnt97UmvafHG0ki3KRoCzu1rcgA&#xA;AVJJMewGJyDz+RTHRzJocN/14/8AFJhk3FSSX6x+k9B+sBVuPTm9ZU+yH9EcgvtXBG63Z5eHiPD9&#xA;N7e5O8LBJJPS/T2seqC0X6NtPUVftFfUvKge9MnjviFc7QU1svS+pwekCsXpp6at9oLxFAfemOS+&#xA;I3ztQg/L3+8Ev/MZff8AUZLl2q+sf1Yf7iKIplmMydiqW3//AB2tL/57/wDJsZk4v7ufw+9iebfm&#xA;C7W005Z2tWvaXNoi26FQxaS6jRWHIqtUZg25HTBpcfHOr4fTLf3RJ+3ksjQS6585LbWV5e3GjalF&#xA;a2Cs91I8UQoq1LMoMtXUAVJSuZEOz+KUYicDKXLc/q2+KDPyZFmvZuxV2KuxV2KuxVKtG/46Ovf8&#xA;xyf9QNtiqa4qlXmb/jnQ/wDMdp//AFHQ4q3p5l/TmrBmBjH1f01HUfuzWuVx+ouZmrwcff6vvRF3&#xA;dxW15A9w0MNuySKZ5WVGEhZOCKWI+0ORPyGSkaO7XixmcCI2ZWNh3b2fht81016PrcdrbvFJOGBu&#xA;Yi45xw8SefAfF9riPpxMt6DGOL0mUgQOhrYnuv5/J0kV/LzUyJEolieJo+XIokgZ1av8yjjt44kF&#xA;YygK2J2N++tvlzRWSaXYq7FXYq7FXYq7FUDrwJ0PUQoLE2swCgEkn0zsAMhk+k+5ydH/AH0P60fv&#xA;a/Tulf7/AP8AhX/pj4gX8nk7vuS23a1aby01ozNatbubdnpyMZgXgWptXjhhXCK5MdUJDLLi+riN&#xA;++92Q5JoSC8lmi1bXZYGCTx6VbNE5pQOr3hUmtRsctwRBnEHlYQeSppmn6rPptpNNrd2ZpYY3kKp&#xA;Z8SzKCaf6P0rmRmy44zIGONAn+f/AMUgA1zTOwso7K2ECO0nxPI0j05M8rmR2PEKu7MTsAMxsuQz&#xA;lZ/FCkgUiMrS7FUHqGm/W3glW4ltZrcsY5YfTJo44sCJUkX8MuxZuAEUJA99/oIQQoHRJpGj+s6n&#xA;dXMUckcvoutsqs0TiRKmOFG2ZQdmyf5gC+GEQaI/i67dZFHCs83CU+VNaEVPV+oXPp16cvRalfpw&#xA;6GvHx3y44/es+RRxupxcvF9UlMaryW4Bi4MafZUepzr81A98p4BV8Q92/wCqvtTaS2mv+Zryws76&#xA;30JDFehXWN7xFkjjfdWlAjZfsmtEZszJ6XDCconJvH+jsT5b/eAxEiRyVrHzZYy/WI70fVbq1meC&#xA;aIepItUp8SPwTkCD4ZDJoZCjH1RkL6D9KRJFWusx3t8YLAwzxRKr3RaR0mjEhYIREYyGDFDvyHQ+&#xA;GVz05hG5WCeW2x+N+fcoNqsV9cpcJBeW/pvMW9BoPVnTilP71/SRYia7Bjv2OQOOJFxPLndD5Cza&#xA;bVYNQtppGjXmjK/pgSxSQ8moTRDIq89lJ+GuRlikBf3EH51y+K2gtG/46Ovf8xyf9QNtlaU1xVhR&#xA;8u+dLnU9dMmoxw2081pPpMk/O7hV7a59f/eZXtyi+miRtxkHJvi/1lIUrm41jS9aNjc69ZR6zrqq&#xA;sMkWlXBjjMaFI2at3KiVb7PNviO2QjGiT3t+XPxRjEChG/t+SY6LreqazJeR2Gq2btYymGfnp1zH&#xA;UqzJyTndDmhZGAYbGm2TcdX1m/13R9Pe/vNRtPRR4ogsWnXEsjyTyLDEiIl0WZnkkVR88VQFp5h1&#xA;Oa605I9ZtZ4tfjF1o836MuBC0Rg9UIr/AFkblEaT4t96eAxVPPq3mr/q42P/AEgzf9leKsVk89lN&#xA;K1DX31+1i0rR+cV6raVdAszcDE8am49SQMP7vhUNy9sVZV9W81f9XGx/6QZv+yvFUnvdZ1iPXbfy&#xA;/wDpm0h1OdY50pplwyFSZHEZkNyYw0sdrNQVrRSfDFW/K/mO980aYdT0TWtPu7H1GhWdbGajMlCa&#xA;f6XXoR13xVV8waxq+gac2oalqdoturBKRabczSEmp+GOO6ZjRQWNB0BOKoKy8z3snmMeWRrtlcau&#xA;9sdSjX9HTBTaySfAVYXQUhQwUHv864qn/wBW81f9XGx/6QZv+yvFWN3Pm69s9OTWrrWbdNPuJpLN&#xA;IjpVyWjmtGn+ss6rcl1CLbyFy2wCVHXdVONL0DXLa40w3mo2txbaZAYVihs5IXdigj5F2uZlAov2&#xA;eH04IihTZmycc5S/nEn5o7zNbarc6BfQaTJ6WoSREW7h/TNe4WSh4MwqA37J3wtbG7fyv54k06MS&#xA;avZwXF1p0VjqaXNpNeyFo2mPJZ0urUV43HFiUNSK96ZdhyCEhIiyN+f7Cgi0LaeaJrXTZJIdbgaz&#xA;0Upp0sA0m6Z5ZWkW3haJRc85AXRlUp8J3PQVyGSZnIyPU2oDJrN/MN7ZwXlrqlhLbXMaTQSixmo0&#xA;cihlYVu+4OQSlmoa3q0esxeXf0zaQ6vexFrdk0y4dYy6TNGWY3JjDMLWZlDdeB+lVX0PV9a1pLpr&#xA;TULZHsZza3UU+m3EMiSiNJeJV7of7rlRvp8a4q7zBrGr6Bpx1DUdTtFgDrGqxabczSO7miqkcd0z&#xA;MfoxVRs9c1KTWINETX7C61K6tJNVhRdPmp9T9ZURiVuuIH71VSu7UJ7HFUw1HSvNF9p91ZNqdii3&#xA;UMkJcWMxIEila0+t9q5ZiycExL+aQfkgiwxBvP8AejSY9dbzTpsWmmdLFVk0e6j5z3Ecc8B/eXyt&#xA;RoHEimvEq1Tv0bh3H5/sXdl2m6V5psdOtbIanYuLWGOEObGYcvTULWn1vvTHNk45mX84k/NQKCS6&#xA;pfvPra6Bcajp/wCkoFW9BfSZpY1Cn1GUSNcNGJHjRtgeXHfwxhlnHkSFpS8qXmo+Y4ZPNHlvWNNN&#xA;pqKrDI76VOC72ryDlX67HU/vKd+mWePcBCVnhJrfvryPctb2mWq3XnHS4YJrrWNO9O4uYLRGj0i6&#xA;ekt1KsMXLjfnipkdRyOwrldw7j8/2LugrO91y68xnRZ9esLnU9NaW64jSbqIA+mvJFk+u+mxihv4&#xA;qjc0de9aEZAAQL3/AF33eS0ybRNNv7MXkl/cxXV1e3Hru8ELW8YpDHCqhHlnbpECTzypKZYq7FUq&#xA;1TyvomqX9rqF7Az3lkrpbTRzTRFRIKH+6dASOqk7qd1ocVVtK0HSdKe6ewg9Fr2Vp7g8nersSxpz&#xA;LcVqxIVaKKmg3xVU1XSrHVbCSxvkZ7eQoxCO8Th4nEkbpJEySIyOgZWVgQRUYqg7HynoVjeW15aw&#xA;PHPZwG1tP30zJFAaViSNnKKnwLsF7DwGKpvirDfM3lfyDo/lLXb3U9IF3o9vb3Wo6jZEtPzEcXNz&#xA;HHK/AOqRUioV4b8StTiqGtPzY0OSCzFnpN+YHIikCiziS0Ky3EHCXncIBQ2Mp/d8hxA8RiqJ0nVf&#xA;IvmvzK11YJcT6pY2kMv1z07u2VYmlnjjU8vSAkU+rTkvLg7caqzYqyDQfLmi6BayWuk2/wBWgmkE&#xA;sic3kqwjSFd5GchUiiREUbKqhQAAMVX63oWla3YNYanB69qzBigd4zUdw8bIw60NDuNumKoe28pe&#xA;X7bWv03DaldT9NofXMkrDgzcqBGYpt9lTxqFooooAxVN8VSGbyL5YntPqc9tJLa+vJdejJc3Lr6s&#xA;xkMzfFIf7315A46MGIaoNMVT7FXYq7FWPzeQvKs1ve2z2jiHUJDNdKlxcR1k9VZwylJFMZSRAycK&#xA;cTXjTk1VU8t7eC2t4reBBFBCixxRqKKqIKKoHgAMVQF75a0W91SHVLiAnULdPThuEkljZRxdR/ds&#xA;oLKs0gVjuodqU5GqqpouhaXolm1npsTQ27yyTsjSSS1kmbnI3KVnb4mJY79ST1OKu1vQtL1zT30/&#xA;U4TNauysVV5ImDIeSlZImR1+g+2KsW1ybyH5U8z6Jcz6Ny1jUOdnaarEkbvDFJPbwESyyyLJ6Ye5&#xA;jVQvLgtQoC7YqvsvzY8vzUkurO/0+zf0vq95PEkiS+vCLiMhLWS4mRfRbmWkjVVH2iDtiregeUvI&#xA;Ot+UrOSy0+ddF1FFu4beeS7ikpJEIl5K8gcAQAQgV4+l8C/u9sVZpiqUXvlPQb3Vf0rcW7NfmNYT&#xA;Ks00YMavz4lEdUNfstt8S1U1UkYqraD5e0jQNPXT9Jg+r2isz8C7ysWbqWeRndvDc9NumKq2qaTY&#xA;6pbJbXqM8KSxTqqSSRH1IHEkbco2Q/C6hhv1GKoay8saJZ6vLq8EDDUZ4/SlneWWQlSIwx4u7LyZ&#xA;YIwzU5MEUEkKKKppirsVdirsVdirsVdirsVUb6ytL+yuLG9hS4s7uN4Lm3kAZJIpFKujKeoZSQRi&#xA;qAsPKnluwiMVnpsEETTfWDGqDj6vEpzA6AkE1p1JYndiSqv0ry15e0gqdL022sSkZhX6vEsX7suZ&#xA;OHwgbc2LfMnxxVMsVdirsVdirsVdirsVdirsVdirsVdirsVSzWvLOga2Iv0tYQ3pgDCBpV5NHzKk&#xA;lD1U8kVgRuCARuBirp/LHl24CCfTbaYRSRzR+pEj8ZIU9ONxyBoyp8IPhiqMsbGysLWO0soEtrWI&#xA;ERQRKERATWiqNgN+gxVXxV2KuxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>572.000000</stDim:w>
            <stDim:h>280.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -288 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 288 li
576 288 li
576 0 li
cp
clp
313.78 242.64 mo
563.04 242.64 li
563.04 12.96 li
313.78 12.96 li
313.78 242.64 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
32.26 242.64 mo
281.52 242.64 li
281.52 12.96 li
32.26 12.96 li
32.26 242.64 li
cp
f
gsave
32.26 242.64 mo
281.56 242.64 li
281.56 12.9399 li
32.26 12.9399 li
32.26 242.64 li
cp
clp
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
21.8741 242.64 mo
21.8741 242.64 li
42.6458 242.64 li
42.6458 213.107 li
63.4175 213.107 li
63.4175 176.824 li
84.1892 176.824 li
84.1892 181.787 li
104.961 181.787 li
104.961 158.785 li
125.732 158.785 li
125.732 170.241 li
146.504 170.241 li
146.504 156.107 li
167.276 156.107 li
167.276 165.919 li
188.047 165.919 li
188.047 154.95 li
208.819 154.95 li
208.819 181.317 li
229.591 181.317 li
229.591 211.912 li
250.362 211.912 li
250.362 231.765 li
271.134 231.765 li
271.134 242.64 li
0 .993988 1 0 cmyk
@
[6 6 ] 0 dsh
21.8741 242.64 mo
21.8741 242.64 li
42.6458 242.64 li
42.6458 205.664 li
63.4175 205.664 li
63.4175 233.375 li
84.1892 233.375 li
84.1892 225.015 li
104.961 225.015 li
104.961 190.341 li
125.732 190.341 li
125.732 186.69 li
146.504 186.69 li
146.504 173.644 li
167.276 173.644 li
167.276 166.69 li
188.047 166.69 li
188.047 185.407 li
208.819 185.407 li
208.819 156.139 li
229.591 156.139 li
229.591 100.537 li
250.362 100.537 li
250.362 179.215 li
271.134 179.215 li
271.134 242.64 li
@
grestore
gsave
0 288 mo
576 288 li
576 0 li
0 0 li
0 288 li
cp
clp
1 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
281.52 242.64 mo
281.52 12.96 li
32.26 242.64 mo
281.52 242.64 li
32.26 12.96 mo
281.52 12.96 li
32.26 242.64 mo
32.26 12.96 li
0 0 0 1 cmyk
@
grestore
53.0317 242.64 mo
53.0317 238.64 li
0 0 0 1 cmyk
f
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
53.0317 242.64 mo
53.0317 238.64 li
@
53.0317 12.96 mo
53.0317 16.96 li
f
53.0317 12.96 mo
53.0317 16.96 li
@
47.256 246.936 mo
48.228 246.936 48.972 247.332 49.5 248.1 cv
50.016 248.88 50.28 250.008 50.28 251.472 cv
50.28 252.948 50.016 254.076 49.5 254.844 cv
48.972 255.612 48.228 255.996 47.256 255.996 cv
46.272 255.996 45.516 255.612 45 254.844 cv
44.484 254.076 44.232 252.948 44.232 251.472 cv
44.232 250.008 44.484 248.88 45 248.1 cv
45.516 247.332 46.272 246.936 47.256 246.936 cv
47.256 246.936 li
cp
47.256 247.872 mo
46.644 247.872 46.188 248.172 45.876 248.772 cv
45.564 249.372 45.42 250.272 45.42 251.472 cv
45.42 252.672 45.564 253.572 45.876 254.172 cv
46.188 254.772 46.644 255.072 47.256 255.072 cv
47.868 255.072 48.324 254.772 48.636 254.172 cv
48.936 253.572 49.092 252.672 49.092 251.472 cv
49.092 250.272 48.936 249.372 48.636 248.772 cv
48.324 248.172 47.868 247.872 47.256 247.872 cv
ef
52.404 254.352 mo
53.64 254.352 li
53.64 255.84 li
52.404 255.84 li
52.404 254.352 li
52.404 254.352 li
cp
ef
58.776 246.936 mo
59.748 246.936 60.492 247.332 61.02 248.1 cv
61.536 248.88 61.8 250.008 61.8 251.472 cv
61.8 252.948 61.536 254.076 61.02 254.844 cv
60.492 255.612 59.748 255.996 58.776 255.996 cv
57.792 255.996 57.036 255.612 56.52 254.844 cv
56.004 254.076 55.752 252.948 55.752 251.472 cv
55.752 250.008 56.004 248.88 56.52 248.1 cv
57.036 247.332 57.792 246.936 58.776 246.936 cv
58.776 246.936 li
cp
58.776 247.872 mo
58.164 247.872 57.708 248.172 57.396 248.772 cv
57.084 249.372 56.94 250.272 56.94 251.472 cv
56.94 252.672 57.084 253.572 57.396 254.172 cv
57.708 254.772 58.164 255.072 58.776 255.072 cv
59.388 255.072 59.844 254.772 60.156 254.172 cv
60.456 253.572 60.612 252.672 60.612 251.472 cv
60.612 250.272 60.456 249.372 60.156 248.772 cv
59.844 248.172 59.388 247.872 58.776 247.872 cv
ef
94.575 242.64 mo
94.575 238.64 li
f
94.575 242.64 mo
94.575 238.64 li
@
94.575 12.96 mo
94.575 16.96 li
f
94.575 12.96 mo
94.575 16.96 li
@
88.776 246.936 mo
89.748 246.936 90.492 247.332 91.02 248.1 cv
91.536 248.88 91.8 250.008 91.8 251.472 cv
91.8 252.948 91.536 254.076 91.02 254.844 cv
90.492 255.612 89.748 255.996 88.776 255.996 cv
87.792 255.996 87.036 255.612 86.52 254.844 cv
86.004 254.076 85.752 252.948 85.752 251.472 cv
85.752 250.008 86.004 248.88 86.52 248.1 cv
87.036 247.332 87.792 246.936 88.776 246.936 cv
88.776 246.936 li
cp
88.776 247.872 mo
88.164 247.872 87.708 248.172 87.396 248.772 cv
87.084 249.372 86.94 250.272 86.94 251.472 cv
86.94 252.672 87.084 253.572 87.396 254.172 cv
87.708 254.772 88.164 255.072 88.776 255.072 cv
89.388 255.072 89.844 254.772 90.156 254.172 cv
90.456 253.572 90.612 252.672 90.612 251.472 cv
90.612 250.272 90.456 249.372 90.156 248.772 cv
89.844 248.172 89.388 247.872 88.776 247.872 cv
ef
93.924 254.352 mo
95.16 254.352 li
95.16 255.84 li
93.924 255.84 li
93.924 254.352 li
93.924 254.352 li
cp
ef
98.784 254.844 mo
102.912 254.844 li
102.912 255.84 li
97.356 255.84 li
97.356 254.844 li
97.8 254.388 98.412 253.764 99.192 252.972 cv
99.96 252.192 100.452 251.688 100.656 251.46 cv
101.04 251.04 101.304 250.68 101.448 250.38 cv
101.592 250.092 101.676 249.792 101.676 249.504 cv
101.676 249.048 101.508 248.664 101.184 248.376 cv
100.86 248.088 100.44 247.932 99.912 247.932 cv
99.54 247.932 99.144 248.004 98.736 248.124 cv
98.328 248.256 97.884 248.448 97.416 248.712 cv
97.416 247.512 li
97.896 247.32 98.34 247.176 98.748 247.08 cv
99.156 246.984 99.54 246.936 99.888 246.936 cv
100.788 246.936 101.508 247.164 102.048 247.62 cv
102.588 248.076 102.864 248.676 102.864 249.432 cv
102.864 249.792 102.792 250.14 102.66 250.452 cv
102.528 250.776 102.288 251.16 101.928 251.592 cv
101.832 251.712 101.52 252.036 100.992 252.576 cv
100.464 253.116 99.732 253.872 98.784 254.844 cv
98.784 254.844 li
cp
ef
136.118 242.64 mo
136.118 238.64 li
f
136.118 242.64 mo
136.118 238.64 li
@
136.118 12.96 mo
136.118 16.96 li
f
136.118 12.96 mo
136.118 16.96 li
@
130.296 246.936 mo
131.268 246.936 132.012 247.332 132.54 248.1 cv
133.056 248.88 133.32 250.008 133.32 251.472 cv
133.32 252.948 133.056 254.076 132.54 254.844 cv
132.012 255.612 131.268 255.996 130.296 255.996 cv
129.312 255.996 128.556 255.612 128.04 254.844 cv
127.524 254.076 127.272 252.948 127.272 251.472 cv
127.272 250.008 127.524 248.88 128.04 248.1 cv
128.556 247.332 129.312 246.936 130.296 246.936 cv
130.296 246.936 li
cp
130.296 247.872 mo
129.684 247.872 129.228 248.172 128.916 248.772 cv
128.604 249.372 128.46 250.272 128.46 251.472 cv
128.46 252.672 128.604 253.572 128.916 254.172 cv
129.228 254.772 129.684 255.072 130.296 255.072 cv
130.908 255.072 131.364 254.772 131.676 254.172 cv
131.976 253.572 132.132 252.672 132.132 251.472 cv
132.132 250.272 131.976 249.372 131.676 248.772 cv
131.364 248.172 130.908 247.872 130.296 247.872 cv
ef
135.444 254.352 mo
136.68 254.352 li
136.68 255.84 li
135.444 255.84 li
135.444 254.352 li
135.444 254.352 li
cp
ef
142.224 247.092 mo
143.712 247.092 li
143.712 252.792 li
144.96 252.792 li
144.96 253.776 li
143.712 253.776 li
143.712 255.84 li
142.536 255.84 li
142.536 253.776 li
138.588 253.776 li
138.588 252.636 li
142.224 247.092 li
142.224 247.092 li
cp
142.536 248.124 mo
139.548 252.792 li
142.536 252.792 li
142.536 248.124 li
ef
177.662 242.64 mo
177.662 238.64 li
f
177.662 242.64 mo
177.662 238.64 li
@
177.662 12.96 mo
177.662 16.96 li
f
177.662 12.96 mo
177.662 16.96 li
@
171.816 246.936 mo
172.788 246.936 173.532 247.332 174.06 248.1 cv
174.576 248.88 174.84 250.008 174.84 251.472 cv
174.84 252.948 174.576 254.076 174.06 254.844 cv
173.532 255.612 172.788 255.996 171.816 255.996 cv
170.832 255.996 170.076 255.612 169.56 254.844 cv
169.044 254.076 168.792 252.948 168.792 251.472 cv
168.792 250.008 169.044 248.88 169.56 248.1 cv
170.076 247.332 170.832 246.936 171.816 246.936 cv
171.816 246.936 li
cp
171.816 247.872 mo
171.204 247.872 170.748 248.172 170.436 248.772 cv
170.124 249.372 169.98 250.272 169.98 251.472 cv
169.98 252.672 170.124 253.572 170.436 254.172 cv
170.748 254.772 171.204 255.072 171.816 255.072 cv
172.428 255.072 172.884 254.772 173.196 254.172 cv
173.496 253.572 173.652 252.672 173.652 251.472 cv
173.652 250.272 173.496 249.372 173.196 248.772 cv
172.884 248.172 172.428 247.872 171.816 247.872 cv
ef
176.964 254.352 mo
178.2 254.352 li
178.2 255.84 li
176.964 255.84 li
176.964 254.352 li
176.964 254.352 li
cp
ef
185.832 247.284 mo
185.832 248.364 li
185.532 248.22 185.232 248.112 184.932 248.04 cv
184.62 247.968 184.32 247.932 184.032 247.932 cv
183.24 247.932 182.64 248.196 182.232 248.724 cv
181.824 249.252 181.584 250.056 181.536 251.112 cv
181.764 250.776 182.052 250.512 182.4 250.332 cv
182.748 250.152 183.132 250.056 183.552 250.056 cv
184.428 250.056 185.124 250.332 185.628 250.86 cv
186.132 251.388 186.396 252.12 186.396 253.032 cv
186.396 253.932 186.12 254.652 185.592 255.192 cv
185.064 255.732 184.356 255.996 183.48 255.996 cv
182.472 255.996 181.692 255.612 181.164 254.844 cv
180.624 254.076 180.36 252.948 180.36 251.472 cv
180.36 250.092 180.684 248.988 181.344 248.172 cv
181.992 247.356 182.88 246.936 183.984 246.936 cv
184.272 246.936 184.572 246.972 184.884 247.02 cv
185.184 247.08 185.496 247.164 185.832 247.284 cv
185.832 247.284 li
cp
183.48 250.992 mo
182.952 250.992 182.532 251.184 182.22 251.544 cv
181.908 251.904 181.752 252.408 181.752 253.032 cv
181.752 253.668 181.908 254.172 182.22 254.532 cv
182.532 254.892 182.952 255.072 183.48 255.072 cv
184.008 255.072 184.428 254.892 184.74 254.532 cv
185.052 254.172 185.208 253.668 185.208 253.032 cv
185.208 252.408 185.052 251.904 184.74 251.544 cv
184.428 251.184 184.008 250.992 183.48 250.992 cv
ef
219.205 242.64 mo
219.205 238.64 li
f
219.205 242.64 mo
219.205 238.64 li
@
219.205 12.96 mo
219.205 16.96 li
f
219.205 12.96 mo
219.205 16.96 li
@
213.576 246.936 mo
214.548 246.936 215.292 247.332 215.82 248.1 cv
216.336 248.88 216.6 250.008 216.6 251.472 cv
216.6 252.948 216.336 254.076 215.82 254.844 cv
215.292 255.612 214.548 255.996 213.576 255.996 cv
212.592 255.996 211.836 255.612 211.32 254.844 cv
210.804 254.076 210.552 252.948 210.552 251.472 cv
210.552 250.008 210.804 248.88 211.32 248.1 cv
211.836 247.332 212.592 246.936 213.576 246.936 cv
213.576 246.936 li
cp
213.576 247.872 mo
212.964 247.872 212.508 248.172 212.196 248.772 cv
211.884 249.372 211.74 250.272 211.74 251.472 cv
211.74 252.672 211.884 253.572 212.196 254.172 cv
212.508 254.772 212.964 255.072 213.576 255.072 cv
214.188 255.072 214.644 254.772 214.956 254.172 cv
215.256 253.572 215.412 252.672 215.412 251.472 cv
215.412 250.272 215.256 249.372 214.956 248.772 cv
214.644 248.172 214.188 247.872 213.576 247.872 cv
ef
218.484 254.352 mo
219.72 254.352 li
219.72 255.84 li
218.484 255.84 li
218.484 254.352 li
218.484 254.352 li
cp
ef
223.236 249.312 mo
223.236 249.768 223.368 250.128 223.656 250.38 cv
223.944 250.632 224.34 250.752 224.856 250.752 cv
225.36 250.752 225.756 250.632 226.044 250.38 cv
226.332 250.128 226.476 249.768 226.476 249.312 cv
226.476 248.856 226.332 248.508 226.044 248.256 cv
225.756 248.004 225.36 247.872 224.856 247.872 cv
224.34 247.872 223.944 248.004 223.656 248.256 cv
223.368 248.508 223.236 248.856 223.236 249.312 cv
223.236 249.312 li
cp
223.668 251.184 mo
223.164 251.064 222.768 250.824 222.48 250.476 cv
222.192 250.128 222.06 249.708 222.06 249.204 cv
222.06 248.508 222.3 247.956 222.804 247.548 cv
223.296 247.14 223.98 246.936 224.856 246.936 cv
225.72 246.936 226.404 247.14 226.908 247.548 cv
227.4 247.956 227.652 248.508 227.652 249.204 cv
227.652 249.708 227.508 250.128 227.22 250.476 cv
226.932 250.824 226.548 251.064 226.044 251.184 cv
226.608 251.316 227.052 251.58 227.376 251.964 cv
227.688 252.348 227.856 252.828 227.856 253.38 cv
227.856 254.232 227.592 254.88 227.076 255.324 cv
226.548 255.78 225.816 255.996 224.856 255.996 cv
223.884 255.996 223.14 255.78 222.624 255.324 cv
222.108 254.88 221.856 254.232 221.856 253.38 cv
221.856 252.828 222.012 252.348 222.336 251.964 cv
222.648 251.58 223.092 251.316 223.668 251.184 cv
224.856 251.688 mo
224.292 251.688 223.848 251.844 223.524 252.144 cv
223.2 252.444 223.044 252.852 223.044 253.38 cv
223.044 253.908 223.2 254.328 223.524 254.628 cv
223.848 254.928 224.292 255.072 224.856 255.072 cv
225.408 255.072 225.852 254.928 226.176 254.616 cv
226.5 254.316 226.668 253.908 226.668 253.38 cv
226.668 252.852 226.5 252.444 226.188 252.144 cv
225.864 251.844 225.42 251.688 224.856 251.688 cv
ef
260.748 242.64 mo
260.748 238.64 li
f
260.748 242.64 mo
260.748 238.64 li
@
260.748 12.96 mo
260.748 16.96 li
f
260.748 12.96 mo
260.748 16.96 li
@
252.768 254.844 mo
254.7 254.844 li
254.7 248.172 li
252.6 248.592 li
252.6 247.512 li
254.688 247.092 li
255.876 247.092 li
255.876 254.844 li
257.808 254.844 li
257.808 255.84 li
252.768 255.84 li
252.768 254.844 li
252.768 254.844 li
cp
ef
260.004 254.352 mo
261.24 254.352 li
261.24 255.84 li
260.004 255.84 li
260.004 254.352 li
260.004 254.352 li
cp
ef
266.376 246.936 mo
267.348 246.936 268.092 247.332 268.62 248.1 cv
269.136 248.88 269.4 250.008 269.4 251.472 cv
269.4 252.948 269.136 254.076 268.62 254.844 cv
268.092 255.612 267.348 255.996 266.376 255.996 cv
265.392 255.996 264.636 255.612 264.12 254.844 cv
263.604 254.076 263.352 252.948 263.352 251.472 cv
263.352 250.008 263.604 248.88 264.12 248.1 cv
264.636 247.332 265.392 246.936 266.376 246.936 cv
266.376 246.936 li
cp
266.376 247.872 mo
265.764 247.872 265.308 248.172 264.996 248.772 cv
264.684 249.372 264.54 250.272 264.54 251.472 cv
264.54 252.672 264.684 253.572 264.996 254.172 cv
265.308 254.772 265.764 255.072 266.376 255.072 cv
266.988 255.072 267.444 254.772 267.756 254.172 cv
268.056 253.572 268.212 252.672 268.212 251.472 cv
268.212 250.272 268.056 249.372 267.756 248.772 cv
267.444 248.172 266.988 247.872 266.376 247.872 cv
ef
142.296 263.652 mo
145.32 263.652 li
146.22 263.652 146.916 263.844 147.408 264.216 cv
147.888 264.6 148.14 265.128 148.14 265.812 cv
148.14 266.352 148.008 266.784 147.756 267.096 cv
147.504 267.408 147.144 267.612 146.664 267.684 cv
147.24 267.816 147.696 268.08 148.02 268.476 cv
148.332 268.872 148.5 269.364 148.5 269.952 cv
148.5 270.744 148.224 271.344 147.696 271.764 cv
147.168 272.196 146.412 272.4 145.44 272.4 cv
142.296 272.4 li
142.296 263.652 li
142.296 263.652 li
cp
143.484 264.624 mo
143.484 267.264 li
145.236 267.264 li
145.812 267.264 146.232 267.156 146.52 266.94 cv
146.808 266.724 146.952 266.4 146.952 265.944 cv
146.952 265.512 146.808 265.176 146.52 264.96 cv
146.232 264.744 145.812 264.624 145.236 264.624 cv
143.484 264.624 li
143.484 268.224 mo
143.484 271.428 li
145.38 271.428 li
146.016 271.428 146.484 271.296 146.796 271.032 cv
147.096 270.768 147.252 270.372 147.252 269.82 cv
147.252 269.28 147.096 268.884 146.796 268.62 cv
146.484 268.356 146.016 268.224 145.38 268.224 cv
143.484 268.224 li
ef
152.328 263.652 mo
153.324 263.652 li
150.276 273.504 li
149.28 273.504 li
152.328 263.652 li
152.328 263.652 li
cp
ef
153.336 263.652 mo
160.728 263.652 li
160.728 264.648 li
157.62 264.648 li
157.62 272.4 li
156.432 272.4 li
156.432 264.648 li
153.336 264.648 li
153.336 263.652 li
153.336 263.652 li
cp
ef
164.232 265.68 mo
165.168 265.68 165.9 265.992 166.44 266.592 cv
166.968 267.204 167.244 268.044 167.244 269.124 cv
167.244 270.204 166.968 271.044 166.44 271.644 cv
165.9 272.256 165.168 272.556 164.232 272.556 cv
163.284 272.556 162.54 272.256 162.012 271.644 cv
161.484 271.044 161.22 270.204 161.22 269.124 cv
161.22 268.044 161.484 267.204 162.012 266.592 cv
162.54 265.992 163.284 265.68 164.232 265.68 cv
164.232 265.68 li
cp
164.232 266.592 mo
163.656 266.592 163.2 266.82 162.864 267.276 cv
162.528 267.732 162.36 268.344 162.36 269.124 cv
162.36 269.916 162.516 270.528 162.852 270.984 cv
163.188 271.44 163.644 271.656 164.232 271.656 cv
164.808 271.656 165.264 271.44 165.6 270.984 cv
165.936 270.528 166.104 269.916 166.104 269.124 cv
166.104 268.356 165.936 267.732 165.6 267.276 cv
165.264 266.82 164.808 266.592 164.232 266.592 cv
ef
170.196 263.976 mo
170.196 265.836 li
172.416 265.836 li
172.416 266.676 li
170.196 266.676 li
170.196 270.24 li
170.196 270.78 170.268 271.128 170.412 271.272 cv
170.556 271.428 170.856 271.5 171.312 271.5 cv
172.416 271.5 li
172.416 272.4 li
171.312 272.4 li
170.472 272.4 169.896 272.244 169.584 271.932 cv
169.272 271.62 169.116 271.056 169.116 270.24 cv
169.116 266.676 li
168.324 266.676 li
168.324 265.836 li
169.116 265.836 li
169.116 263.976 li
170.196 263.976 li
170.196 263.976 li
cp
ef
32.26 242.64 mo
36.26 242.64 li
f
32.26 242.64 mo
36.26 242.64 li
@
281.52 242.64 mo
277.52 242.64 li
f
281.52 242.64 mo
277.52 242.64 li
@
24.456 237.096 mo
25.428 237.096 26.172 237.492 26.7 238.26 cv
27.216 239.04 27.48 240.168 27.48 241.632 cv
27.48 243.108 27.216 244.236 26.7 245.004 cv
26.172 245.772 25.428 246.156 24.456 246.156 cv
23.472 246.156 22.716 245.772 22.2 245.004 cv
21.684 244.236 21.432 243.108 21.432 241.632 cv
21.432 240.168 21.684 239.04 22.2 238.26 cv
22.716 237.492 23.472 237.096 24.456 237.096 cv
24.456 237.096 li
cp
24.456 238.032 mo
23.844 238.032 23.388 238.332 23.076 238.932 cv
22.764 239.532 22.62 240.432 22.62 241.632 cv
22.62 242.832 22.764 243.732 23.076 244.332 cv
23.388 244.932 23.844 245.232 24.456 245.232 cv
25.068 245.232 25.524 244.932 25.836 244.332 cv
26.136 243.732 26.292 242.832 26.292 241.632 cv
26.292 240.432 26.136 239.532 25.836 238.932 cv
25.524 238.332 25.068 238.032 24.456 238.032 cv
ef
32.26 192.161 mo
36.26 192.161 li
f
32.26 192.161 mo
36.26 192.161 li
@
281.52 192.161 mo
277.52 192.161 li
f
281.52 192.161 mo
277.52 192.161 li
@
14.448 194.364 mo
16.38 194.364 li
16.38 187.692 li
14.28 188.112 li
14.28 187.032 li
16.368 186.612 li
17.556 186.612 li
17.556 194.364 li
19.488 194.364 li
19.488 195.36 li
14.448 195.36 li
14.448 194.364 li
14.448 194.364 li
cp
ef
24.456 186.456 mo
25.428 186.456 26.172 186.852 26.7 187.62 cv
27.216 188.4 27.48 189.528 27.48 190.992 cv
27.48 192.468 27.216 193.596 26.7 194.364 cv
26.172 195.132 25.428 195.516 24.456 195.516 cv
23.472 195.516 22.716 195.132 22.2 194.364 cv
21.684 193.596 21.432 192.468 21.432 190.992 cv
21.432 189.528 21.684 188.4 22.2 187.62 cv
22.716 186.852 23.472 186.456 24.456 186.456 cv
24.456 186.456 li
cp
24.456 187.392 mo
23.844 187.392 23.388 187.692 23.076 188.292 cv
22.764 188.892 22.62 189.792 22.62 190.992 cv
22.62 192.192 22.764 193.092 23.076 193.692 cv
23.388 194.292 23.844 194.592 24.456 194.592 cv
25.068 194.592 25.524 194.292 25.836 193.692 cv
26.136 193.092 26.292 192.192 26.292 190.992 cv
26.292 189.792 26.136 188.892 25.836 188.292 cv
25.524 187.692 25.068 187.392 24.456 187.392 cv
ef
32.26 141.682 mo
36.26 141.682 li
f
32.26 141.682 mo
36.26 141.682 li
@
281.52 141.682 mo
277.52 141.682 li
f
281.52 141.682 mo
277.52 141.682 li
@
15.264 143.964 mo
19.392 143.964 li
19.392 144.96 li
13.836 144.96 li
13.836 143.964 li
14.28 143.508 14.892 142.884 15.672 142.092 cv
16.44 141.312 16.932 140.808 17.136 140.58 cv
17.52 140.16 17.784 139.8 17.928 139.5 cv
18.072 139.212 18.156 138.912 18.156 138.624 cv
18.156 138.168 17.988 137.784 17.664 137.496 cv
17.34 137.208 16.92 137.052 16.392 137.052 cv
16.02 137.052 15.624 137.124 15.216 137.244 cv
14.808 137.376 14.364 137.568 13.896 137.832 cv
13.896 136.632 li
14.376 136.44 14.82 136.296 15.228 136.2 cv
15.636 136.104 16.02 136.056 16.368 136.056 cv
17.268 136.056 17.988 136.284 18.528 136.74 cv
19.068 137.196 19.344 137.796 19.344 138.552 cv
19.344 138.912 19.272 139.26 19.14 139.572 cv
19.008 139.896 18.768 140.28 18.408 140.712 cv
18.312 140.832 18 141.156 17.472 141.696 cv
16.944 142.236 16.212 142.992 15.264 143.964 cv
15.264 143.964 li
cp
ef
24.456 136.056 mo
25.428 136.056 26.172 136.452 26.7 137.22 cv
27.216 138 27.48 139.128 27.48 140.592 cv
27.48 142.068 27.216 143.196 26.7 143.964 cv
26.172 144.732 25.428 145.116 24.456 145.116 cv
23.472 145.116 22.716 144.732 22.2 143.964 cv
21.684 143.196 21.432 142.068 21.432 140.592 cv
21.432 139.128 21.684 138 22.2 137.22 cv
22.716 136.452 23.472 136.056 24.456 136.056 cv
24.456 136.056 li
cp
24.456 136.992 mo
23.844 136.992 23.388 137.292 23.076 137.892 cv
22.764 138.492 22.62 139.392 22.62 140.592 cv
22.62 141.792 22.764 142.692 23.076 143.292 cv
23.388 143.892 23.844 144.192 24.456 144.192 cv
25.068 144.192 25.524 143.892 25.836 143.292 cv
26.136 142.692 26.292 141.792 26.292 140.592 cv
26.292 139.392 26.136 138.492 25.836 137.892 cv
25.524 137.292 25.068 136.992 24.456 136.992 cv
ef
32.26 91.203 mo
36.26 91.203 li
f
32.26 91.203 mo
36.26 91.203 li
@
281.52 91.203 mo
277.52 91.203 li
f
281.52 91.203 mo
277.52 91.203 li
@
17.832 89.844 mo
18.396 89.964 18.84 90.216 19.152 90.6 cv
19.464 90.984 19.632 91.464 19.632 92.016 cv
19.632 92.88 19.332 93.552 18.744 94.02 cv
18.144 94.488 17.304 94.716 16.212 94.716 cv
15.84 94.716 15.456 94.68 15.072 94.608 cv
14.688 94.548 14.28 94.44 13.872 94.296 cv
13.872 93.156 li
14.196 93.348 14.556 93.492 14.952 93.588 cv
15.336 93.684 15.744 93.732 16.176 93.732 cv
16.92 93.732 17.484 93.588 17.868 93.3 cv
18.252 93.012 18.456 92.58 18.456 92.016 cv
18.456 91.512 18.276 91.104 17.916 90.816 cv
17.556 90.528 17.052 90.3719 16.404 90.3719 cv
15.384 90.3719 li
15.384 89.4 li
16.452 89.4 li
17.028 89.4 17.472 89.292 17.784 89.052 cv
18.096 88.824 18.252 88.488 18.252 88.044 cv
18.252 87.6 18.084 87.252 17.772 87.012 cv
17.448 86.772 16.992 86.652 16.404 86.652 cv
16.08 86.652 15.732 86.688 15.36 86.76 cv
14.988 86.832 14.58 86.94 14.136 87.084 cv
14.136 86.028 li
14.58 85.908 15 85.812 15.396 85.752 cv
15.78 85.692 16.152 85.656 16.512 85.656 cv
17.4 85.656 18.108 85.86 18.636 86.268 cv
19.164 86.676 19.428 87.228 19.428 87.924 cv
19.428 88.404 19.284 88.812 19.008 89.1479 cv
18.732 89.484 18.336 89.724 17.832 89.844 cv
17.832 89.844 li
cp
ef
24.456 85.656 mo
25.428 85.656 26.172 86.052 26.7 86.82 cv
27.216 87.6 27.48 88.728 27.48 90.192 cv
27.48 91.668 27.216 92.796 26.7 93.564 cv
26.172 94.332 25.428 94.716 24.456 94.716 cv
23.472 94.716 22.716 94.332 22.2 93.564 cv
21.684 92.796 21.432 91.668 21.432 90.192 cv
21.432 88.728 21.684 87.6 22.2 86.82 cv
22.716 86.052 23.472 85.656 24.456 85.656 cv
24.456 85.656 li
cp
24.456 86.592 mo
23.844 86.592 23.388 86.892 23.076 87.492 cv
22.764 88.092 22.62 88.992 22.62 90.192 cv
22.62 91.392 22.764 92.292 23.076 92.892 cv
23.388 93.492 23.844 93.792 24.456 93.792 cv
25.068 93.792 25.524 93.492 25.836 92.892 cv
26.136 92.292 26.292 91.392 26.292 90.192 cv
26.292 88.992 26.136 88.092 25.836 87.492 cv
25.524 86.892 25.068 86.592 24.456 86.592 cv
ef
32.26 40.724 mo
36.26 40.724 li
f
32.26 40.724 mo
36.26 40.724 li
@
281.52 40.724 mo
277.52 40.724 li
f
281.52 40.724 mo
277.52 40.724 li
@
17.184 35.172 mo
18.672 35.172 li
18.672 40.8719 li
19.92 40.8719 li
19.92 41.856 li
18.672 41.856 li
18.672 43.92 li
17.496 43.92 li
17.496 41.856 li
13.548 41.856 li
13.548 40.716 li
17.184 35.172 li
17.184 35.172 li
cp
17.496 36.204 mo
14.508 40.8719 li
17.496 40.8719 li
17.496 36.204 li
ef
24.456 35.016 mo
25.428 35.016 26.172 35.412 26.7 36.18 cv
27.216 36.96 27.48 38.088 27.48 39.552 cv
27.48 41.028 27.216 42.156 26.7 42.924 cv
26.172 43.692 25.428 44.076 24.456 44.076 cv
23.472 44.076 22.716 43.692 22.2 42.924 cv
21.684 42.156 21.432 41.028 21.432 39.552 cv
21.432 38.088 21.684 36.96 22.2 36.18 cv
22.716 35.412 23.472 35.016 24.456 35.016 cv
24.456 35.016 li
cp
24.456 35.952 mo
23.844 35.952 23.388 36.252 23.076 36.852 cv
22.764 37.452 22.62 38.352 22.62 39.552 cv
22.62 40.752 22.764 41.652 23.076 42.252 cv
23.388 42.852 23.844 43.152 24.456 43.152 cv
25.068 43.152 25.524 42.852 25.836 42.252 cv
26.136 41.652 26.292 40.752 26.292 39.552 cv
26.292 38.352 26.136 37.452 25.836 36.852 cv
25.524 36.252 25.068 35.952 24.456 35.952 cv
ef
89.148 79.5 mo
89.424 79.5 89.676 79.392 89.916 79.164 cv
90.156 78.936 90.348 78.672 90.504 78.384 cv
90.6 78.168 90.708 77.916 90.804 77.604 cv
90.9 77.292 90.984 76.968 91.056 76.608 cv
91.128 76.2599 91.164 75.984 91.164 75.768 cv
91.164 75.588 91.14 75.42 91.092 75.252 cv
91.044 75.0959 90.96 74.964 90.852 74.856 cv
90.732 74.748 90.588 74.688 90.408 74.688 cv
90.108 74.688 89.832 74.796 89.568 75 cv
89.304 75.216 89.076 75.468 88.872 75.78 cv
88.872 75.816 li
88.212 78.468 li
88.26 78.756 88.368 79.008 88.524 79.2 cv
88.68 79.404 88.884 79.5 89.148 79.5 cv
89.148 79.5 li
cp
85.872 81.996 mo
85.8 81.996 85.764 81.936 85.764 81.84 cv
85.788 81.66 85.848 81.576 85.92 81.576 cv
86.16 81.576 86.328 81.552 86.424 81.504 cv
86.52 81.456 86.604 81.348 86.664 81.168 cv
88.02 75.78 li
88.068 75.636 88.104 75.444 88.104 75.204 cv
88.104 74.868 87.984 74.688 87.756 74.688 cv
87.504 74.688 87.312 74.844 87.192 75.144 cv
87.072 75.444 86.952 75.816 86.844 76.272 cv
86.844 76.32 86.808 76.344 86.748 76.344 cv
86.604 76.344 li
86.58 76.344 86.568 76.332 86.544 76.308 cv
86.52 76.284 86.508 76.248 86.508 76.224 cv
86.592 75.876 86.676 75.576 86.76 75.336 cv
86.832 75.0959 86.964 74.88 87.132 74.676 cv
87.3 74.484 87.504 74.376 87.768 74.376 cv
88.032 74.376 88.272 74.46 88.488 74.616 cv
88.692 74.772 88.824 74.976 88.884 75.24 cv
89.1 74.988 89.34 74.784 89.604 74.616 cv
89.868 74.46 90.144 74.376 90.432 74.376 cv
90.768 74.376 91.056 74.472 91.308 74.652 cv
91.548 74.832 91.74 75.072 91.86 75.36 cv
91.98 75.648 92.052 75.96 92.052 76.296 cv
92.052 76.812 91.92 77.34 91.656 77.892 cv
91.392 78.444 91.032 78.9 90.588 79.2599 cv
90.132 79.62 89.652 79.8 89.136 79.8 cv
88.896 79.8 88.692 79.728 88.5 79.608 cv
88.308 79.488 88.152 79.308 88.056 79.092 cv
87.516 81.216 li
87.492 81.336 87.48 81.396 87.48 81.42 cv
87.48 81.516 87.744 81.576 88.272 81.576 cv
88.344 81.576 88.392 81.624 88.392 81.732 cv
88.368 81.828 88.344 81.9 88.32 81.936 cv
88.296 81.972 88.26 81.996 88.188 81.996 cv
85.872 81.996 li
ef
92.7948 81.6 mo
92.736 81.6 92.7108 81.5664 92.7108 81.4908 cv
92.7108 81.474 92.7192 81.4488 92.7276 81.4152 cv
92.736 81.3816 92.7444 81.3564 92.7612 81.3396 cv
92.778 81.3228 92.7948 81.306 92.82 81.306 cv
93.156 81.306 93.3996 81.2892 93.534 81.2472 cv
93.6012 81.2304 93.66 81.1548 93.6936 81.0204 cv
94.8444 76.4088 li
94.8528 76.3584 94.8612 76.3164 94.8612 76.2912 cv
94.8612 76.2324 94.8276 76.1988 94.7604 76.1904 cv
94.6512 76.1736 94.4496 76.1568 94.1556 76.1568 cv
94.0968 76.1568 94.0716 76.1232 94.0716 76.0475 cv
94.0884 75.9803 94.1052 75.93 94.122 75.9048 cv
94.1304 75.8796 94.164 75.8628 94.2144 75.8628 cv
96.474 75.8628 li
96.5244 75.8628 96.558 75.9048 96.558 75.972 cv
96.558 75.9888 96.5496 76.014 96.5412 76.0475 cv
96.5328 76.0812 96.5244 76.1064 96.5076 76.1232 cv
96.4908 76.1484 96.474 76.1568 96.4488 76.1568 cv
96.1044 76.1568 95.8692 76.1819 95.7348 76.2156 cv
95.6592 76.2492 95.6088 76.3248 95.5752 76.4424 cv
94.8948 79.164 li
98.1876 76.6188 li
98.1876 76.6104 98.2212 76.5768 98.2884 76.5096 cv
98.3556 76.4424 98.3892 76.3836 98.3892 76.3164 cv
98.3892 76.2156 98.2884 76.1568 98.1036 76.1568 cv
98.0448 76.1568 98.0196 76.1232 98.0196 76.0475 cv
98.028 76.0056 98.0364 75.972 98.0448 75.9468 cv
98.0448 75.9216 98.0616 75.9048 98.0784 75.888 cv
98.0952 75.8712 98.1288 75.8628 98.1624 75.8628 cv
99.792 75.8628 li
99.8172 75.8628 99.834 75.8796 99.8508 75.8964 cv
99.8676 75.9216 99.876 75.9468 99.876 75.972 cv
99.876 75.9888 99.8676 76.014 99.8592 76.0475 cv
99.8424 76.0812 99.834 76.1147 99.8172 76.1316 cv
99.8004 76.1484 99.7836 76.1568 99.7584 76.1568 cv
99.3468 76.1568 98.9016 76.35 98.4144 76.728 cv
98.406 76.728 98.3976 76.7364 98.3976 76.7364 cv
98.3892 76.7364 98.3808 76.7364 98.3808 76.7364 cv
98.3724 76.7364 98.3724 76.7448 98.3724 76.7448 cv
96.642 78.0888 li
97.902 81.0372 li
97.9692 81.1632 98.0532 81.2388 98.1456 81.264 cv
98.2296 81.2976 98.364 81.306 98.5488 81.306 cv
98.5992 81.306 98.6328 81.348 98.6328 81.4152 cv
98.616 81.4824 98.5992 81.5328 98.5824 81.558 cv
98.5656 81.5916 98.532 81.6 98.49 81.6 cv
96.5412 81.6 li
96.4908 81.6 96.4656 81.5664 96.4656 81.4908 cv
96.4656 81.4404 96.474 81.39 96.4908 81.3564 cv
96.4992 81.3228 96.5244 81.306 96.5748 81.306 cv
96.7092 81.306 96.8352 81.2976 96.936 81.264 cv
97.0368 81.2388 97.0872 81.1716 97.0872 81.0624 cv
97.0872 81.0288 97.0788 80.9952 97.0788 80.9784 cv
96.0372 78.5508 li
94.8108 79.5 li
94.4244 81.054 li
94.4076 81.1212 94.4076 81.1632 94.4076 81.1716 cv
94.4076 81.2304 94.4412 81.264 94.5084 81.2724 cv
94.6092 81.2976 94.8108 81.306 95.1132 81.306 cv
95.1636 81.306 95.1972 81.348 95.1972 81.4152 cv
95.1804 81.4992 95.1636 81.5496 95.1552 81.5664 cv
95.1384 81.5916 95.1048 81.6 95.0544 81.6 cv
92.7948 81.6 li
92.7948 81.6 li
cp
ef
99.8724 81.7764 mo
99.8556 81.7764 99.8388 81.7596 99.822 81.7428 cv
99.8052 81.726 99.8052 81.7092 99.8052 81.6924 cv
100.292 79.7436 li
100.301 79.71 100.326 79.6932 100.36 79.6932 cv
100.46 79.6932 li
100.477 79.6932 100.494 79.7016 100.511 79.7184 cv
100.519 79.7352 100.528 79.7604 100.528 79.7772 cv
100.477 79.9704 100.46 80.1384 100.46 80.2896 cv
100.46 80.7012 100.595 81.0036 100.872 81.1968 cv
101.149 81.3984 101.502 81.4908 101.93 81.4908 cv
102.115 81.4908 102.292 81.4488 102.468 81.3564 cv
102.644 81.2724 102.804 81.1548 102.938 81.0036 cv
103.073 80.8608 103.174 80.7012 103.258 80.5164 cv
103.333 80.34 103.375 80.1552 103.375 79.9704 cv
103.375 79.7772 103.316 79.6008 103.216 79.4496 cv
103.115 79.2984 102.972 79.1976 102.787 79.1472 cv
101.762 78.8784 li
101.485 78.8112 101.267 78.66 101.099 78.4332 cv
100.931 78.2148 100.855 77.9628 100.855 77.6772 cv
100.855 77.3412 100.956 77.022 101.158 76.7112 cv
101.359 76.4004 101.62 76.1484 101.939 75.9636 cv
102.258 75.7787 102.586 75.678 102.922 75.678 cv
103.174 75.678 103.409 75.7284 103.627 75.8208 cv
103.837 75.9216 104.005 76.0644 104.123 76.266 cv
104.602 75.7032 li
104.635 75.6864 104.652 75.678 104.66 75.678 cv
104.711 75.678 li
104.728 75.678 104.744 75.6948 104.761 75.7115 cv
104.778 75.7284 104.786 75.7452 104.786 75.762 cv
104.299 77.7108 li
104.282 77.7528 104.266 77.7696 104.232 77.7696 cv
104.131 77.7696 li
104.081 77.7696 104.056 77.7444 104.056 77.6772 cv
104.081 77.5008 104.098 77.3496 104.098 77.2152 cv
104.098 76.9632 104.047 76.7364 103.963 76.5432 cv
103.871 76.35 103.736 76.1988 103.56 76.098 cv
103.375 75.9972 103.157 75.9468 102.896 75.9468 cv
102.67 75.9468 102.443 76.014 102.224 76.14 cv
102.006 76.2744 101.821 76.4424 101.687 76.6524 cv
101.552 76.8708 101.485 77.0892 101.485 77.316 cv
101.485 77.5008 101.536 77.6604 101.645 77.7948 cv
101.746 77.9376 101.888 78.03 102.065 78.0804 cv
103.09 78.3492 li
103.274 78.3996 103.434 78.492 103.568 78.6096 cv
103.703 78.7356 103.812 78.8868 103.888 79.0547 cv
103.955 79.2228 103.997 79.4076 103.997 79.6092 cv
103.997 79.878 103.938 80.1468 103.829 80.3988 cv
103.711 80.6592 103.56 80.8944 103.358 81.1044 cv
103.157 81.3228 102.922 81.4824 102.67 81.6 cv
102.418 81.7176 102.157 81.7764 101.897 81.7764 cv
101.225 81.7764 100.746 81.5832 100.46 81.1968 cv
99.99 81.7512 li
99.9564 81.768 99.9312 81.7764 99.9312 81.7764 cv
99.8724 81.7764 li
99.8724 81.7764 li
cp
ef
108.42 75.756 mo
108.348 75.756 108.3 75.732 108.252 75.684 cv
108.204 75.636 108.192 75.588 108.192 75.516 cv
108.192 75.468 108.204 75.408 108.252 75.36 cv
108.3 75.312 108.348 75.276 108.42 75.276 cv
115.956 75.276 li
116.004 75.276 116.052 75.312 116.1 75.36 cv
116.148 75.408 116.172 75.468 116.172 75.516 cv
116.172 75.588 116.148 75.636 116.1 75.684 cv
116.052 75.732 116.004 75.756 115.956 75.756 cv
108.42 75.756 li
108.42 75.756 li
cp
108.42 78.084 mo
108.348 78.084 108.3 78.06 108.252 78.012 cv
108.204 77.964 108.192 77.904 108.192 77.844 cv
108.192 77.784 108.204 77.724 108.252 77.676 cv
108.3 77.628 108.348 77.604 108.42 77.604 cv
115.956 77.604 li
116.004 77.604 116.052 77.628 116.1 77.676 cv
116.148 77.724 116.172 77.784 116.172 77.844 cv
116.172 77.904 116.148 77.964 116.1 78.012 cv
116.052 78.06 116.004 78.084 115.956 78.084 cv
108.42 78.084 li
ef
119.916 79.68 mo
119.916 79.2599 li
120.912 79.2599 121.416 79.14 121.416 78.876 cv
121.416 72.576 li
120.996 72.78 120.468 72.876 119.844 72.876 cv
119.844 72.456 li
120.816 72.456 121.56 72.204 122.064 71.688 cv
122.232 71.688 li
122.256 71.688 122.292 71.7 122.316 71.724 cv
122.34 71.748 122.352 71.772 122.352 71.796 cv
122.352 78.876 li
122.352 79.14 122.844 79.2599 123.852 79.2599 cv
123.852 79.68 li
119.916 79.68 li
119.916 79.68 li
cp
ef
125.808 79.02 mo
125.808 78.84 125.868 78.684 126 78.552 cv
126.132 78.4319 126.288 78.36 126.468 78.36 cv
126.576 78.36 126.684 78.396 126.792 78.456 cv
126.888 78.516 126.972 78.6 127.032 78.696 cv
127.092 78.804 127.128 78.912 127.128 79.02 cv
127.128 79.2 127.056 79.356 126.936 79.488 cv
126.804 79.62 126.648 79.68 126.468 79.68 cv
126.288 79.68 126.132 79.62 126 79.488 cv
125.868 79.356 125.808 79.2 125.808 79.02 cv
125.808 79.02 li
cp
ef
131.364 78.312 mo
131.436 78.552 131.568 78.768 131.736 78.96 cv
131.904 79.152 132.108 79.296 132.348 79.404 cv
132.576 79.512 132.816 79.56 133.068 79.56 cv
133.644 79.56 134.04 79.344 134.256 78.888 cv
134.472 78.444 134.592 77.904 134.592 77.256 cv
134.592 76.98 134.58 76.752 134.58 76.56 cv
134.568 76.368 134.544 76.188 134.496 76.008 cv
134.424 75.732 134.292 75.492 134.1 75.276 cv
133.908 75.06 133.692 74.952 133.428 74.952 cv
133.152 74.952 132.924 75 132.732 75.072 cv
132.54 75.156 132.372 75.252 132.252 75.36 cv
132.132 75.48 132.024 75.588 131.928 75.708 cv
131.832 75.828 131.784 75.9 131.76 75.9 cv
131.628 75.9 li
131.604 75.9 131.568 75.888 131.544 75.864 cv
131.52 75.84 131.508 75.816 131.508 75.792 cv
131.508 71.784 li
131.508 71.7599 131.52 71.748 131.544 71.724 cv
131.568 71.7 131.592 71.688 131.628 71.688 cv
131.664 71.688 li
132.192 71.952 132.768 72.072 133.38 72.072 cv
133.968 72.072 134.544 71.952 135.096 71.688 cv
135.132 71.688 li
135.156 71.688 135.18 71.7 135.204 71.724 cv
135.228 71.748 135.24 71.7599 135.24 71.784 cv
135.24 71.892 li
135.24 71.94 135.228 71.952 135.216 71.952 cv
134.94 72.312 134.592 72.6 134.184 72.804 cv
133.776 73.008 133.344 73.104 132.912 73.104 cv
132.588 73.104 132.264 73.068 131.928 72.972 cv
131.928 75.24 li
132.192 75.024 132.42 74.88 132.636 74.784 cv
132.84 74.688 133.104 74.64 133.44 74.64 cv
133.872 74.64 134.268 74.772 134.616 75.024 cv
134.964 75.288 135.228 75.612 135.42 76.02 cv
135.612 76.428 135.708 76.848 135.708 77.268 cv
135.708 77.748 135.588 78.192 135.348 78.6 cv
135.108 79.008 134.796 79.332 134.388 79.572 cv
133.98 79.812 133.548 79.9319 133.068 79.9319 cv
132.672 79.9319 132.312 79.824 131.976 79.632 cv
131.64 79.44 131.388 79.164 131.196 78.816 cv
131.004 78.48 130.92 78.108 130.92 77.724 cv
130.92 77.544 130.968 77.4 131.088 77.28 cv
131.208 77.172 131.352 77.112 131.532 77.112 cv
131.7 77.112 131.856 77.172 131.976 77.292 cv
132.096 77.412 132.156 77.556 132.156 77.724 cv
132.156 77.892 132.096 78.0359 131.976 78.156 cv
131.856 78.276 131.7 78.336 131.532 78.336 cv
131.508 78.336 131.472 78.336 131.436 78.336 cv
131.4 78.336 131.376 78.324 131.364 78.312 cv
131.364 78.312 li
cp
ef
138.024 76.62 mo
138.48 76.62 138.912 76.608 139.308 76.56 cv
139.704 76.512 140.064 76.404 140.388 76.236 cv
140.7 76.068 140.868 75.792 140.868 75.42 cv
140.868 75.276 140.82 75.144 140.736 75.0359 cv
140.652 74.928 140.544 74.844 140.424 74.784 cv
140.292 74.724 140.16 74.688 140.016 74.688 cv
139.68 74.688 139.368 74.784 139.104 74.964 cv
138.828 75.156 138.6 75.396 138.432 75.684 cv
138.252 75.984 138.12 76.296 138.024 76.62 cv
138.024 76.62 li
cp
138.732 79.8 mo
138.348 79.8 138.012 79.704 137.724 79.512 cv
137.436 79.32 137.22 79.044 137.076 78.708 cv
136.92 78.3719 136.848 78.024 136.848 77.64 cv
136.848 77.076 136.992 76.5359 137.28 76.032 cv
137.568 75.528 137.952 75.132 138.444 74.832 cv
138.936 74.532 139.464 74.376 140.028 74.376 cv
140.364 74.376 140.664 74.472 140.928 74.652 cv
141.18 74.832 141.312 75.084 141.312 75.408 cv
141.312 75.876 141.12 76.224 140.76 76.44 cv
140.388 76.668 139.968 76.812 139.512 76.86 cv
139.056 76.908 138.54 76.9319 137.988 76.9319 cv
137.952 76.9319 li
137.82 77.412 137.76 77.82 137.76 78.156 cv
137.76 78.516 137.832 78.828 138 79.092 cv
138.168 79.368 138.42 79.5 138.756 79.5 cv
139.236 79.5 139.692 79.392 140.136 79.176 cv
140.568 78.96 140.928 78.648 141.204 78.264 cv
141.228 78.24 141.252 78.228 141.3 78.228 cv
141.336 78.228 141.372 78.252 141.42 78.3 cv
141.456 78.348 141.48 78.384 141.48 78.42 cv
141.48 78.456 141.468 78.48 141.456 78.492 cv
141.168 78.9 140.772 79.224 140.28 79.452 cv
139.776 79.68 139.26 79.8 138.732 79.8 cv
ef
145.224 76.92 mo
145.152 76.92 145.104 76.896 145.056 76.848 cv
145.008 76.8 144.996 76.74 144.996 76.68 cv
144.996 76.632 145.008 76.572 145.056 76.524 cv
145.104 76.476 145.152 76.44 145.224 76.44 cv
152.112 76.44 li
152.172 76.44 152.22 76.476 152.268 76.524 cv
152.304 76.572 152.328 76.632 152.328 76.68 cv
152.328 76.74 152.304 76.8 152.268 76.848 cv
152.22 76.896 152.172 76.92 152.112 76.92 cv
145.224 76.92 li
145.224 76.92 li
cp
ef
158.52 79.632 mo
158.964 79.632 159.3 79.404 159.516 78.948 cv
159.732 78.492 159.864 77.988 159.912 77.436 cv
159.96 76.884 159.996 76.284 159.996 75.66 cv
159.996 75.06 159.96 74.508 159.912 74.004 cv
159.864 73.5 159.732 73.032 159.516 72.624 cv
159.3 72.216 158.964 72 158.52 72 cv
158.064 72 157.728 72.216 157.512 72.624 cv
157.296 73.032 157.152 73.5 157.104 74.004 cv
157.056 74.508 157.032 75.06 157.032 75.66 cv
157.032 76.116 157.032 76.5359 157.056 76.92 cv
157.08 77.316 157.14 77.724 157.236 78.144 cv
157.332 78.564 157.476 78.912 157.692 79.2 cv
157.896 79.488 158.172 79.632 158.52 79.632 cv
158.52 79.632 li
cp
158.52 79.9319 mo
157.536 79.9319 156.864 79.5359 156.516 78.732 cv
156.156 77.928 155.988 76.968 155.988 75.852 cv
155.988 75.156 156.048 74.508 156.18 73.896 cv
156.3 73.284 156.552 72.768 156.936 72.336 cv
157.308 71.904 157.836 71.688 158.52 71.688 cv
159.048 71.688 159.48 71.82 159.816 72.072 cv
160.152 72.336 160.404 72.66 160.584 73.068 cv
160.752 73.476 160.872 73.92 160.944 74.388 cv
161.004 74.856 161.04 75.348 161.04 75.852 cv
161.04 76.548 160.968 77.184 160.848 77.784 cv
160.716 78.384 160.464 78.9 160.092 79.308 cv
159.72 79.716 159.192 79.9319 158.52 79.9319 cv
ef
162.564 78.312 mo
162.636 78.552 162.768 78.768 162.936 78.96 cv
163.104 79.152 163.308 79.296 163.548 79.404 cv
163.776 79.512 164.016 79.56 164.268 79.56 cv
164.844 79.56 165.24 79.344 165.456 78.888 cv
165.672 78.444 165.792 77.904 165.792 77.256 cv
165.792 76.98 165.78 76.752 165.78 76.56 cv
165.768 76.368 165.744 76.188 165.696 76.008 cv
165.624 75.732 165.492 75.492 165.3 75.276 cv
165.108 75.06 164.892 74.952 164.628 74.952 cv
164.352 74.952 164.124 75 163.932 75.072 cv
163.74 75.156 163.572 75.252 163.452 75.36 cv
163.332 75.48 163.224 75.588 163.128 75.708 cv
163.032 75.828 162.984 75.9 162.96 75.9 cv
162.828 75.9 li
162.804 75.9 162.768 75.888 162.744 75.864 cv
162.72 75.84 162.708 75.816 162.708 75.792 cv
162.708 71.784 li
162.708 71.7599 162.72 71.748 162.744 71.724 cv
162.768 71.7 162.792 71.688 162.828 71.688 cv
162.864 71.688 li
163.392 71.952 163.968 72.072 164.58 72.072 cv
165.168 72.072 165.744 71.952 166.296 71.688 cv
166.332 71.688 li
166.356 71.688 166.38 71.7 166.404 71.724 cv
166.428 71.748 166.44 71.7599 166.44 71.784 cv
166.44 71.892 li
166.44 71.94 166.428 71.952 166.416 71.952 cv
166.14 72.312 165.792 72.6 165.384 72.804 cv
164.976 73.008 164.544 73.104 164.112 73.104 cv
163.788 73.104 163.464 73.068 163.128 72.972 cv
163.128 75.24 li
163.392 75.024 163.62 74.88 163.836 74.784 cv
164.04 74.688 164.304 74.64 164.64 74.64 cv
165.072 74.64 165.468 74.772 165.816 75.024 cv
166.164 75.288 166.428 75.612 166.62 76.02 cv
166.812 76.428 166.908 76.848 166.908 77.268 cv
166.908 77.748 166.788 78.192 166.548 78.6 cv
166.308 79.008 165.996 79.332 165.588 79.572 cv
165.18 79.812 164.748 79.9319 164.268 79.9319 cv
163.872 79.9319 163.512 79.824 163.176 79.632 cv
162.84 79.44 162.588 79.164 162.396 78.816 cv
162.204 78.48 162.12 78.108 162.12 77.724 cv
162.12 77.544 162.168 77.4 162.288 77.28 cv
162.408 77.172 162.552 77.112 162.732 77.112 cv
162.9 77.112 163.056 77.172 163.176 77.292 cv
163.296 77.412 163.356 77.556 163.356 77.724 cv
163.356 77.892 163.296 78.0359 163.176 78.156 cv
163.056 78.276 162.9 78.336 162.732 78.336 cv
162.708 78.336 162.672 78.336 162.636 78.336 cv
162.6 78.336 162.576 78.324 162.564 78.312 cv
162.564 78.312 li
cp
ef
gsave
0 288 mo
576 288 li
576 0 li
0 0 li
0 288 li
cp
clp
1 lw
0 lj
45.22 36.5606 mo
74.02 36.5606 li
74.02 26.4806 li
45.22 26.4806 li
45.22 36.5606 li
45.22 36.5606 li
cp
0 .993988 1 0 cmyk
@
grestore
94.7136 26.7888 mo
94.7136 28.2864 li
94.224 27.8544 93.72 27.5232 93.1728 27.2928 cv
92.6256 27.0768 92.064 26.9615 91.4592 26.9615 cv
90.2496 26.9615 89.328 27.3359 88.6944 28.0704 cv
88.0608 28.8047 87.744 29.856 87.744 31.2384 cv
87.744 32.6208 88.0608 33.6864 88.6944 34.4208 cv
89.328 35.1552 90.2496 35.5152 91.4592 35.5152 cv
92.064 35.5152 92.6256 35.4144 93.1728 35.184 cv
93.72 34.968 94.224 34.6368 94.7136 34.1904 cv
94.7136 35.6736 li
94.2096 36.0192 93.6768 36.264 93.1296 36.4224 cv
92.5824 36.5807 91.992 36.6672 91.3728 36.6672 cv
89.7888 36.6672 88.536 36.192 87.6144 35.2272 cv
86.6928 34.2624 86.2464 32.9376 86.2464 31.2384 cv
86.2464 29.5536 86.6928 28.2288 87.6144 27.2496 cv
88.536 26.2848 89.7888 25.7952 91.3728 25.7952 cv
92.0064 25.7952 92.5968 25.8816 93.144 26.04 cv
93.6912 26.2128 94.224 26.4576 94.7136 26.7888 cv
94.7136 26.7888 li
cp
ef
99.6384 25.9824 mo
101.251 25.9824 li
105.254 36.48 li
103.771 36.48 li
102.821 33.7872 li
98.0832 33.7872 li
97.1328 36.48 li
95.6352 36.48 li
99.6384 25.9824 li
99.6384 25.9824 li
cp
100.445 27.3792 mo
98.5152 32.6064 li
102.374 32.6064 li
100.445 27.3792 li
ef
106.771 25.9824 mo
108.686 25.9824 li
113.338 34.7664 li
113.338 25.9824 li
114.72 25.9824 li
114.72 36.48 li
112.805 36.48 li
108.154 27.696 li
108.154 36.48 li
106.771 36.48 li
106.771 25.9824 li
106.771 25.9824 li
cp
ef
117.571 25.9824 mo
120.494 25.9824 li
122.525 25.9824 124.022 26.4144 124.973 27.2496 cv
125.923 28.0992 126.398 29.424 126.398 31.224 cv
126.398 33.0384 125.909 34.3632 124.958 35.2128 cv
124.008 36.0624 122.51 36.48 120.494 36.48 cv
117.571 36.48 li
117.571 25.9824 li
117.571 25.9824 li
cp
118.997 27.1487 mo
118.997 35.3136 li
120.71 35.3136 li
122.15 35.3136 123.216 34.9968 123.893 34.3344 cv
124.555 33.672 124.901 32.6352 124.901 31.224 cv
124.901 29.8128 124.555 28.7903 123.893 28.128 cv
123.216 27.48 122.15 27.1487 120.71 27.1487 cv
118.997 27.1487 li
ef
128.611 25.9824 mo
135.25 25.9824 li
135.25 27.1776 li
130.037 27.1776 li
130.037 30.288 li
135.034 30.288 li
135.034 31.4832 li
130.037 31.4832 li
130.037 35.2848 li
135.379 35.2848 li
135.379 36.48 li
128.611 36.48 li
128.611 25.9824 li
128.611 25.9824 li
cp
ef
137.731 25.9824 mo
139.157 25.9824 li
139.157 35.2848 li
144.269 35.2848 li
144.269 36.48 li
137.731 36.48 li
137.731 25.9824 li
137.731 25.9824 li
cp
ef
151.944 26.3279 mo
151.944 27.7104 li
151.397 27.4512 150.893 27.264 150.418 27.1343 cv
149.928 27.0192 149.467 26.9471 149.035 26.9471 cv
148.258 26.9471 147.653 27.1056 147.235 27.3936 cv
146.818 27.696 146.616 28.128 146.616 28.6752 cv
146.616 29.136 146.746 29.496 147.034 29.7264 cv
147.307 29.9712 147.84 30.1584 148.618 30.3024 cv
149.482 30.4752 li
150.533 30.6768 151.31 31.0368 151.814 31.5408 cv
152.318 32.0591 152.578 32.736 152.578 33.5856 cv
152.578 34.608 152.232 35.3712 151.555 35.8896 cv
150.864 36.408 149.87 36.6672 148.56 36.6672 cv
148.056 36.6672 147.523 36.6096 146.962 36.5088 cv
146.4 36.408 145.824 36.2496 145.234 36.0192 cv
145.234 34.5504 li
145.81 34.8816 146.371 35.1263 146.918 35.2848 cv
147.466 35.4576 148.013 35.5296 148.56 35.5296 cv
149.366 35.5296 149.986 35.3712 150.432 35.0544 cv
150.864 34.7375 151.094 34.2912 151.094 33.6864 cv
151.094 33.168 150.936 32.7648 150.619 32.4768 cv
150.302 32.1888 149.784 31.9728 149.064 31.8288 cv
148.2 31.6559 li
147.134 31.4543 146.371 31.1232 145.896 30.6624 cv
145.421 30.216 145.19 29.5968 145.19 28.7903 cv
145.19 27.8688 145.507 27.1343 146.17 26.6016 cv
146.818 26.0688 147.725 25.7952 148.877 25.7952 cv
149.366 25.7952 149.856 25.8384 150.374 25.9247 cv
150.878 26.0112 151.397 26.1552 151.944 26.3279 cv
151.944 26.3279 li
cp
ef
165.624 26.3279 mo
165.624 27.7104 li
165.077 27.4512 164.573 27.264 164.098 27.1343 cv
163.608 27.0192 163.147 26.9471 162.715 26.9471 cv
161.938 26.9471 161.333 27.1056 160.915 27.3936 cv
160.498 27.696 160.296 28.128 160.296 28.6752 cv
160.296 29.136 160.426 29.496 160.714 29.7264 cv
160.987 29.9712 161.52 30.1584 162.298 30.3024 cv
163.162 30.4752 li
164.213 30.6768 164.99 31.0368 165.494 31.5408 cv
165.998 32.0591 166.258 32.736 166.258 33.5856 cv
166.258 34.608 165.912 35.3712 165.235 35.8896 cv
164.544 36.408 163.55 36.6672 162.24 36.6672 cv
161.736 36.6672 161.203 36.6096 160.642 36.5088 cv
160.08 36.408 159.504 36.2496 158.914 36.0192 cv
158.914 34.5504 li
159.49 34.8816 160.051 35.1263 160.598 35.2848 cv
161.146 35.4576 161.693 35.5296 162.24 35.5296 cv
163.046 35.5296 163.666 35.3712 164.112 35.0544 cv
164.544 34.7375 164.774 34.2912 164.774 33.6864 cv
164.774 33.168 164.616 32.7648 164.299 32.4768 cv
163.982 32.1888 163.464 31.9728 162.744 31.8288 cv
161.88 31.6559 li
160.814 31.4543 160.051 31.1232 159.576 30.6624 cv
159.101 30.216 158.87 29.5968 158.87 28.7903 cv
158.87 27.8688 159.187 27.1343 159.85 26.6016 cv
160.498 26.0688 161.405 25.7952 162.557 25.7952 cv
163.046 25.7952 163.536 25.8384 164.054 25.9247 cv
164.558 26.0112 165.077 26.1552 165.624 26.3279 cv
165.624 26.3279 li
cp
ef
174.528 30.1152 mo
174.845 29.5392 175.234 29.1216 175.68 28.8336 cv
176.126 28.56 176.659 28.416 177.278 28.416 cv
178.085 28.416 178.718 28.704 179.165 29.28 cv
179.611 29.856 179.842 30.6768 179.842 31.728 cv
179.842 36.48 li
178.546 36.48 li
178.546 31.7712 li
178.546 31.0224 178.402 30.4608 178.142 30.0864 cv
177.869 29.7264 177.466 29.5392 176.918 29.5392 cv
176.242 29.5392 175.709 29.7696 175.32 30.216 cv
174.931 30.6624 174.744 31.2672 174.744 32.0304 cv
174.744 36.48 li
173.448 36.48 li
173.448 31.7712 li
173.448 31.0224 173.304 30.4608 173.045 30.0864 cv
172.771 29.7264 172.354 29.5392 171.806 29.5392 cv
171.144 29.5392 170.611 29.7696 170.222 30.216 cv
169.834 30.6624 169.646 31.2672 169.646 32.0304 cv
169.646 36.48 li
168.35 36.48 li
168.35 28.6031 li
169.646 28.6031 li
169.646 29.8271 li
169.934 29.352 170.294 28.9919 170.712 28.7616 cv
171.115 28.5312 171.605 28.416 172.181 28.416 cv
172.757 28.416 173.232 28.56 173.635 28.848 cv
174.038 29.136 174.326 29.568 174.528 30.1152 cv
174.528 30.1152 li
cp
ef
185.606 28.416 mo
186.73 28.416 187.608 28.7903 188.256 29.5104 cv
188.89 30.2448 189.221 31.2527 189.221 32.5488 cv
189.221 33.8448 188.89 34.8528 188.256 35.5728 cv
187.608 36.3072 186.73 36.6672 185.606 36.6672 cv
184.469 36.6672 183.576 36.3072 182.942 35.5728 cv
182.309 34.8528 181.992 33.8448 181.992 32.5488 cv
181.992 31.2527 182.309 30.2448 182.942 29.5104 cv
183.576 28.7903 184.469 28.416 185.606 28.416 cv
185.606 28.416 li
cp
185.606 29.5104 mo
184.915 29.5104 184.368 29.784 183.965 30.3312 cv
183.562 30.8784 183.36 31.6128 183.36 32.5488 cv
183.36 33.4991 183.547 34.2336 183.95 34.7808 cv
184.354 35.328 184.901 35.5872 185.606 35.5872 cv
186.298 35.5872 186.845 35.328 187.248 34.7808 cv
187.651 34.2336 187.853 33.4991 187.853 32.5488 cv
187.853 31.6272 187.651 30.8784 187.248 30.3312 cv
186.845 29.784 186.298 29.5104 185.606 29.5104 cv
ef
194.246 28.416 mo
195.37 28.416 196.248 28.7903 196.896 29.5104 cv
197.53 30.2448 197.861 31.2527 197.861 32.5488 cv
197.861 33.8448 197.53 34.8528 196.896 35.5728 cv
196.248 36.3072 195.37 36.6672 194.246 36.6672 cv
193.109 36.6672 192.216 36.3072 191.582 35.5728 cv
190.949 34.8528 190.632 33.8448 190.632 32.5488 cv
190.632 31.2527 190.949 30.2448 191.582 29.5104 cv
192.216 28.7903 193.109 28.416 194.246 28.416 cv
194.246 28.416 li
cp
194.246 29.5104 mo
193.555 29.5104 193.008 29.784 192.605 30.3312 cv
192.202 30.8784 192 31.6128 192 32.5488 cv
192 33.4991 192.187 34.2336 192.59 34.7808 cv
192.994 35.328 193.541 35.5872 194.246 35.5872 cv
194.938 35.5872 195.485 35.328 195.888 34.7808 cv
196.291 34.2336 196.493 33.4991 196.493 32.5488 cv
196.493 31.6272 196.291 30.8784 195.888 30.3312 cv
195.485 29.784 194.938 29.5104 194.246 29.5104 cv
ef
201.355 26.3712 mo
201.355 28.6031 li
204.019 28.6031 li
204.019 29.6112 li
201.355 29.6112 li
201.355 33.888 li
201.355 34.5359 201.442 34.9536 201.614 35.1263 cv
201.787 35.3136 202.147 35.4 202.694 35.4 cv
204.019 35.4 li
204.019 36.48 li
202.694 36.48 li
201.686 36.48 200.995 36.2928 200.621 35.9184 cv
200.246 35.544 200.059 34.8672 200.059 33.888 cv
200.059 29.6112 li
199.109 29.6112 li
199.109 28.6031 li
200.059 28.6031 li
200.059 26.3712 li
201.355 26.3712 li
201.355 26.3712 li
cp
ef
212.386 31.728 mo
212.386 36.48 li
211.09 36.48 li
211.09 31.7712 li
211.09 31.0224 210.931 30.4752 210.643 30.1008 cv
210.355 29.7264 209.923 29.5392 209.347 29.5392 cv
208.642 29.5392 208.094 29.7696 207.691 30.216 cv
207.288 30.6624 207.086 31.2672 207.086 32.0304 cv
207.086 36.48 li
205.79 36.48 li
205.79 25.5359 li
207.086 25.5359 li
207.086 29.8271 li
207.389 29.3664 207.749 29.0063 208.181 28.776 cv
208.598 28.5456 209.088 28.416 209.635 28.416 cv
210.528 28.416 211.219 28.704 211.68 29.2656 cv
212.141 29.8271 212.386 30.6479 212.386 31.728 cv
212.386 31.728 li
cp
ef
gsave
0 288 mo
576 288 li
576 0 li
0 0 li
0 288 li
cp
clp
1 lw
0 lj
[6 6 ] 0 dsh
45.22 57.3075 mo
74.02 57.3075 li
74.02 47.2275 li
45.22 47.2275 li
45.22 57.3075 li
45.22 57.3075 li
cp
0 .993988 1 0 cmyk
@
grestore
93.144 47.208 mo
93.144 48.5904 li
92.5968 48.3312 92.0928 48.144 91.6176 48.0144 cv
91.128 47.8992 90.6672 47.8271 90.2352 47.8271 cv
89.4576 47.8271 88.8528 47.9856 88.4352 48.2736 cv
88.0176 48.576 87.816 49.008 87.816 49.5552 cv
87.816 50.016 87.9456 50.376 88.2336 50.6064 cv
88.5072 50.8512 89.04 51.0384 89.8176 51.1824 cv
90.6816 51.3552 li
91.7328 51.5568 92.5104 51.9168 93.0144 52.4208 cv
93.5184 52.9391 93.7776 53.616 93.7776 54.4656 cv
93.7776 55.488 93.432 56.2512 92.7552 56.7696 cv
92.064 57.288 91.0704 57.5472 89.76 57.5472 cv
89.256 57.5472 88.7232 57.4896 88.1616 57.3888 cv
87.6 57.288 87.024 57.1296 86.4336 56.8992 cv
86.4336 55.4304 li
87.0096 55.7616 87.5712 56.0063 88.1184 56.1648 cv
88.6656 56.3376 89.2128 56.4096 89.76 56.4096 cv
90.5664 56.4096 91.1856 56.2512 91.632 55.9344 cv
92.064 55.6176 92.2944 55.1712 92.2944 54.5663 cv
92.2944 54.048 92.136 53.6448 91.8192 53.3568 cv
91.5024 53.0688 90.984 52.8528 90.264 52.7088 cv
89.4 52.5359 li
88.3344 52.3344 87.5712 52.0032 87.096 51.5424 cv
86.6208 51.0959 86.3904 50.4768 86.3904 49.6703 cv
86.3904 48.7488 86.7072 48.0144 87.3696 47.4816 cv
88.0176 46.9488 88.9248 46.6752 90.0768 46.6752 cv
90.5664 46.6752 91.056 46.7184 91.5744 46.8047 cv
92.0784 46.8912 92.5968 47.0352 93.144 47.208 cv
93.144 47.208 li
cp
ef
95.9712 46.8624 mo
98.8944 46.8624 li
100.925 46.8624 102.422 47.2944 103.373 48.1296 cv
104.323 48.9792 104.798 50.304 104.798 52.104 cv
104.798 53.9184 104.309 55.2432 103.358 56.0928 cv
102.408 56.9424 100.91 57.36 98.8944 57.36 cv
95.9712 57.36 li
95.9712 46.8624 li
95.9712 46.8624 li
cp
97.3968 48.0287 mo
97.3968 56.1936 li
99.1104 56.1936 li
100.55 56.1936 101.616 55.8768 102.293 55.2144 cv
102.955 54.552 103.301 53.5152 103.301 52.104 cv
103.301 50.6927 102.955 49.6703 102.293 49.008 cv
101.616 48.36 100.55 48.0287 99.1104 48.0287 cv
97.3968 48.0287 li
ef
113.544 47.208 mo
113.544 48.5904 li
112.997 48.3312 112.493 48.144 112.018 48.0144 cv
111.528 47.8992 111.067 47.8271 110.635 47.8271 cv
109.858 47.8271 109.253 47.9856 108.835 48.2736 cv
108.418 48.576 108.216 49.008 108.216 49.5552 cv
108.216 50.016 108.346 50.376 108.634 50.6064 cv
108.907 50.8512 109.44 51.0384 110.218 51.1824 cv
111.082 51.3552 li
112.133 51.5568 112.91 51.9168 113.414 52.4208 cv
113.918 52.9391 114.178 53.616 114.178 54.4656 cv
114.178 55.488 113.832 56.2512 113.155 56.7696 cv
112.464 57.288 111.47 57.5472 110.16 57.5472 cv
109.656 57.5472 109.123 57.4896 108.562 57.3888 cv
108 57.288 107.424 57.1296 106.834 56.8992 cv
106.834 55.4304 li
107.41 55.7616 107.971 56.0063 108.518 56.1648 cv
109.066 56.3376 109.613 56.4096 110.16 56.4096 cv
110.966 56.4096 111.586 56.2512 112.032 55.9344 cv
112.464 55.6176 112.694 55.1712 112.694 54.5663 cv
112.694 54.048 112.536 53.6448 112.219 53.3568 cv
111.902 53.0688 111.384 52.8528 110.664 52.7088 cv
109.8 52.5359 li
108.734 52.3344 107.971 52.0032 107.496 51.5424 cv
107.021 51.0959 106.79 50.4768 106.79 49.6703 cv
106.79 48.7488 107.107 48.0144 107.77 47.4816 cv
108.418 46.9488 109.325 46.6752 110.477 46.6752 cv
110.966 46.6752 111.456 46.7184 111.974 46.8047 cv
112.478 46.8912 112.997 47.0352 113.544 47.208 cv
113.544 47.208 li
cp
ef
122.664 47.208 mo
122.664 48.5904 li
122.117 48.3312 121.613 48.144 121.138 48.0144 cv
120.648 47.8992 120.187 47.8271 119.755 47.8271 cv
118.978 47.8271 118.373 47.9856 117.955 48.2736 cv
117.538 48.576 117.336 49.008 117.336 49.5552 cv
117.336 50.016 117.466 50.376 117.754 50.6064 cv
118.027 50.8512 118.56 51.0384 119.338 51.1824 cv
120.202 51.3552 li
121.253 51.5568 122.03 51.9168 122.534 52.4208 cv
123.038 52.9391 123.298 53.616 123.298 54.4656 cv
123.298 55.488 122.952 56.2512 122.275 56.7696 cv
121.584 57.288 120.59 57.5472 119.28 57.5472 cv
118.776 57.5472 118.243 57.4896 117.682 57.3888 cv
117.12 57.288 116.544 57.1296 115.954 56.8992 cv
115.954 55.4304 li
116.53 55.7616 117.091 56.0063 117.638 56.1648 cv
118.186 56.3376 118.733 56.4096 119.28 56.4096 cv
120.086 56.4096 120.706 56.2512 121.152 55.9344 cv
121.584 55.6176 121.814 55.1712 121.814 54.5663 cv
121.814 54.048 121.656 53.6448 121.339 53.3568 cv
121.022 53.0688 120.504 52.8528 119.784 52.7088 cv
118.92 52.5359 li
117.854 52.3344 117.091 52.0032 116.616 51.5424 cv
116.141 51.0959 115.91 50.4768 115.91 49.6703 cv
115.91 48.7488 116.227 48.0144 116.89 47.4816 cv
117.538 46.9488 118.445 46.6752 119.597 46.6752 cv
120.086 46.6752 120.576 46.7184 121.094 46.8047 cv
121.598 46.8912 122.117 47.0352 122.664 47.208 cv
122.664 47.208 li
cp
ef
136.344 47.208 mo
136.344 48.5904 li
135.797 48.3312 135.293 48.144 134.818 48.0144 cv
134.328 47.8992 133.867 47.8271 133.435 47.8271 cv
132.658 47.8271 132.053 47.9856 131.635 48.2736 cv
131.218 48.576 131.016 49.008 131.016 49.5552 cv
131.016 50.016 131.146 50.376 131.434 50.6064 cv
131.707 50.8512 132.24 51.0384 133.018 51.1824 cv
133.882 51.3552 li
134.933 51.5568 135.71 51.9168 136.214 52.4208 cv
136.718 52.9391 136.978 53.616 136.978 54.4656 cv
136.978 55.488 136.632 56.2512 135.955 56.7696 cv
135.264 57.288 134.27 57.5472 132.96 57.5472 cv
132.456 57.5472 131.923 57.4896 131.362 57.3888 cv
130.8 57.288 130.224 57.1296 129.634 56.8992 cv
129.634 55.4304 li
130.21 55.7616 130.771 56.0063 131.318 56.1648 cv
131.866 56.3376 132.413 56.4096 132.96 56.4096 cv
133.766 56.4096 134.386 56.2512 134.832 55.9344 cv
135.264 55.6176 135.494 55.1712 135.494 54.5663 cv
135.494 54.048 135.336 53.6448 135.019 53.3568 cv
134.702 53.0688 134.184 52.8528 133.464 52.7088 cv
132.6 52.5359 li
131.534 52.3344 130.771 52.0032 130.296 51.5424 cv
129.821 51.0959 129.59 50.4768 129.59 49.6703 cv
129.59 48.7488 129.907 48.0144 130.57 47.4816 cv
131.218 46.9488 132.125 46.6752 133.277 46.6752 cv
133.766 46.6752 134.256 46.7184 134.774 46.8047 cv
135.278 46.8912 135.797 47.0352 136.344 47.208 cv
136.344 47.208 li
cp
ef
145.248 50.9952 mo
145.565 50.4192 145.954 50.0016 146.4 49.7136 cv
146.846 49.44 147.379 49.296 147.998 49.296 cv
148.805 49.296 149.438 49.584 149.885 50.16 cv
150.331 50.736 150.562 51.5568 150.562 52.608 cv
150.562 57.36 li
149.266 57.36 li
149.266 52.6512 li
149.266 51.9024 149.122 51.3408 148.862 50.9664 cv
148.589 50.6064 148.186 50.4192 147.638 50.4192 cv
146.962 50.4192 146.429 50.6496 146.04 51.0959 cv
145.651 51.5424 145.464 52.1472 145.464 52.9104 cv
145.464 57.36 li
144.168 57.36 li
144.168 52.6512 li
144.168 51.9024 144.024 51.3408 143.765 50.9664 cv
143.491 50.6064 143.074 50.4192 142.526 50.4192 cv
141.864 50.4192 141.331 50.6496 140.942 51.0959 cv
140.554 51.5424 140.366 52.1472 140.366 52.9104 cv
140.366 57.36 li
139.07 57.36 li
139.07 49.4832 li
140.366 49.4832 li
140.366 50.7072 li
140.654 50.232 141.014 49.8719 141.432 49.6416 cv
141.835 49.4112 142.325 49.296 142.901 49.296 cv
143.477 49.296 143.952 49.44 144.355 49.728 cv
144.758 50.016 145.046 50.448 145.248 50.9952 cv
145.248 50.9952 li
cp
ef
156.086 49.296 mo
157.21 49.296 158.088 49.6703 158.736 50.3904 cv
159.37 51.1248 159.701 52.1328 159.701 53.4288 cv
159.701 54.7248 159.37 55.7328 158.736 56.4528 cv
158.088 57.1872 157.21 57.5472 156.086 57.5472 cv
154.949 57.5472 154.056 57.1872 153.422 56.4528 cv
152.789 55.7328 152.472 54.7248 152.472 53.4288 cv
152.472 52.1328 152.789 51.1248 153.422 50.3904 cv
154.056 49.6703 154.949 49.296 156.086 49.296 cv
156.086 49.296 li
cp
156.086 50.3904 mo
155.395 50.3904 154.848 50.664 154.445 51.2112 cv
154.042 51.7584 153.84 52.4928 153.84 53.4288 cv
153.84 54.3792 154.027 55.1136 154.43 55.6608 cv
154.834 56.208 155.381 56.4672 156.086 56.4672 cv
156.778 56.4672 157.325 56.208 157.728 55.6608 cv
158.131 55.1136 158.333 54.3792 158.333 53.4288 cv
158.333 52.5072 158.131 51.7584 157.728 51.2112 cv
157.325 50.664 156.778 50.3904 156.086 50.3904 cv
ef
164.966 49.296 mo
166.09 49.296 166.968 49.6703 167.616 50.3904 cv
168.25 51.1248 168.581 52.1328 168.581 53.4288 cv
168.581 54.7248 168.25 55.7328 167.616 56.4528 cv
166.968 57.1872 166.09 57.5472 164.966 57.5472 cv
163.829 57.5472 162.936 57.1872 162.302 56.4528 cv
161.669 55.7328 161.352 54.7248 161.352 53.4288 cv
161.352 52.1328 161.669 51.1248 162.302 50.3904 cv
162.936 49.6703 163.829 49.296 164.966 49.296 cv
164.966 49.296 li
cp
164.966 50.3904 mo
164.275 50.3904 163.728 50.664 163.325 51.2112 cv
162.922 51.7584 162.72 52.4928 162.72 53.4288 cv
162.72 54.3792 162.907 55.1136 163.31 55.6608 cv
163.714 56.208 164.261 56.4672 164.966 56.4672 cv
165.658 56.4672 166.205 56.208 166.608 55.6608 cv
167.011 55.1136 167.213 54.3792 167.213 53.4288 cv
167.213 52.5072 167.011 51.7584 166.608 51.2112 cv
166.205 50.664 165.658 50.3904 164.966 50.3904 cv
ef
171.835 47.2512 mo
171.835 49.4832 li
174.499 49.4832 li
174.499 50.4911 li
171.835 50.4911 li
171.835 54.768 li
171.835 55.416 171.922 55.8336 172.094 56.0063 cv
172.267 56.1936 172.627 56.28 173.174 56.28 cv
174.499 56.28 li
174.499 57.36 li
173.174 57.36 li
172.166 57.36 171.475 57.1728 171.101 56.7984 cv
170.726 56.424 170.539 55.7472 170.539 54.768 cv
170.539 50.4911 li
169.589 50.4911 li
169.589 49.4832 li
170.539 49.4832 li
170.539 47.2512 li
171.835 47.2512 li
171.835 47.2512 li
cp
ef
182.866 52.608 mo
182.866 57.36 li
181.57 57.36 li
181.57 52.6512 li
181.57 51.9024 181.411 51.3552 181.123 50.9808 cv
180.835 50.6064 180.403 50.4192 179.827 50.4192 cv
179.122 50.4192 178.574 50.6496 178.171 51.0959 cv
177.768 51.5424 177.566 52.1472 177.566 52.9104 cv
177.566 57.36 li
176.27 57.36 li
176.27 46.416 li
177.566 46.416 li
177.566 50.7072 li
177.869 50.2464 178.229 49.8864 178.661 49.656 cv
179.078 49.4256 179.568 49.296 180.115 49.296 cv
181.008 49.296 181.699 49.584 182.16 50.1456 cv
182.621 50.7072 182.866 51.528 182.866 52.608 cv
182.866 52.608 li
cp
ef
gsave
313.8 242.64 mo
563.1 242.64 li
563.1 12.9399 li
313.8 12.9399 li
313.8 242.64 li
cp
clp
1 lw
0 lj
303.394 242.64 mo
303.394 242.64 li
324.166 242.64 li
324.166 221.274 li
344.937 221.274 li
344.937 109.105 li
365.709 109.105 li
365.709 71.7153 li
386.481 71.7153 li
386.481 178.543 li
407.253 178.543 li
407.253 221.274 li
428.024 221.274 li
428.024 210.592 li
448.796 210.592 li
448.796 242.64 li
469.568 242.64 li
469.568 226.616 li
490.339 226.616 li
490.339 231.957 li
511.111 231.957 li
511.111 242.64 li
531.883 242.64 li
531.883 242.64 li
552.654 242.64 li
552.654 242.64 li
.883665 .769161 0 0 cmyk
@
[6 6 ] 0 dsh
303.394 242.64 mo
303.394 242.64 li
324.166 242.64 li
324.166 148.418 li
344.937 148.418 li
344.937 154.639 li
365.709 154.639 li
365.709 171.693 li
386.481 171.693 li
386.481 166.342 li
407.253 166.342 li
407.253 197.558 li
428.024 197.558 li
428.024 212.784 li
448.796 212.784 li
448.796 227.62 li
469.568 227.62 li
469.568 228.655 li
490.339 228.655 li
490.339 234.5 li
511.111 234.5 li
511.111 225.634 li
531.883 225.634 li
531.883 231.154 li
552.654 231.154 li
552.654 242.64 li
@
grestore
gsave
0 288 mo
576 288 li
576 0 li
0 0 li
0 288 li
cp
clp
1 lw
2 lc
0 lj
563.04 242.64 mo
563.04 12.96 li
313.78 242.64 mo
563.04 242.64 li
313.78 12.96 mo
563.04 12.96 li
313.78 242.64 mo
313.78 12.96 li
@
grestore
334.552 242.64 mo
334.552 238.64 li
f
334.552 242.64 mo
334.552 238.64 li
@
334.552 12.96 mo
334.552 16.96 li
f
334.552 12.96 mo
334.552 16.96 li
@
328.776 246.936 mo
329.748 246.936 330.492 247.332 331.02 248.1 cv
331.536 248.88 331.8 250.008 331.8 251.472 cv
331.8 252.948 331.536 254.076 331.02 254.844 cv
330.492 255.612 329.748 255.996 328.776 255.996 cv
327.792 255.996 327.036 255.612 326.52 254.844 cv
326.004 254.076 325.752 252.948 325.752 251.472 cv
325.752 250.008 326.004 248.88 326.52 248.1 cv
327.036 247.332 327.792 246.936 328.776 246.936 cv
328.776 246.936 li
cp
328.776 247.872 mo
328.164 247.872 327.708 248.172 327.396 248.772 cv
327.084 249.372 326.94 250.272 326.94 251.472 cv
326.94 252.672 327.084 253.572 327.396 254.172 cv
327.708 254.772 328.164 255.072 328.776 255.072 cv
329.388 255.072 329.844 254.772 330.156 254.172 cv
330.456 253.572 330.612 252.672 330.612 251.472 cv
330.612 250.272 330.456 249.372 330.156 248.772 cv
329.844 248.172 329.388 247.872 328.776 247.872 cv
ef
333.924 254.352 mo
335.16 254.352 li
335.16 255.84 li
333.924 255.84 li
333.924 254.352 li
333.924 254.352 li
cp
ef
340.296 246.936 mo
341.268 246.936 342.012 247.332 342.54 248.1 cv
343.056 248.88 343.32 250.008 343.32 251.472 cv
343.32 252.948 343.056 254.076 342.54 254.844 cv
342.012 255.612 341.268 255.996 340.296 255.996 cv
339.312 255.996 338.556 255.612 338.04 254.844 cv
337.524 254.076 337.272 252.948 337.272 251.472 cv
337.272 250.008 337.524 248.88 338.04 248.1 cv
338.556 247.332 339.312 246.936 340.296 246.936 cv
340.296 246.936 li
cp
340.296 247.872 mo
339.684 247.872 339.228 248.172 338.916 248.772 cv
338.604 249.372 338.46 250.272 338.46 251.472 cv
338.46 252.672 338.604 253.572 338.916 254.172 cv
339.228 254.772 339.684 255.072 340.296 255.072 cv
340.908 255.072 341.364 254.772 341.676 254.172 cv
341.976 253.572 342.132 252.672 342.132 251.472 cv
342.132 250.272 341.976 249.372 341.676 248.772 cv
341.364 248.172 340.908 247.872 340.296 247.872 cv
ef
376.095 242.64 mo
376.095 238.64 li
f
376.095 242.64 mo
376.095 238.64 li
@
376.095 12.96 mo
376.095 16.96 li
f
376.095 12.96 mo
376.095 16.96 li
@
370.296 246.936 mo
371.268 246.936 372.012 247.332 372.54 248.1 cv
373.056 248.88 373.32 250.008 373.32 251.472 cv
373.32 252.948 373.056 254.076 372.54 254.844 cv
372.012 255.612 371.268 255.996 370.296 255.996 cv
369.312 255.996 368.556 255.612 368.04 254.844 cv
367.524 254.076 367.272 252.948 367.272 251.472 cv
367.272 250.008 367.524 248.88 368.04 248.1 cv
368.556 247.332 369.312 246.936 370.296 246.936 cv
370.296 246.936 li
cp
370.296 247.872 mo
369.684 247.872 369.228 248.172 368.916 248.772 cv
368.604 249.372 368.46 250.272 368.46 251.472 cv
368.46 252.672 368.604 253.572 368.916 254.172 cv
369.228 254.772 369.684 255.072 370.296 255.072 cv
370.908 255.072 371.364 254.772 371.676 254.172 cv
371.976 253.572 372.132 252.672 372.132 251.472 cv
372.132 250.272 371.976 249.372 371.676 248.772 cv
371.364 248.172 370.908 247.872 370.296 247.872 cv
ef
375.444 254.352 mo
376.68 254.352 li
376.68 255.84 li
375.444 255.84 li
375.444 254.352 li
375.444 254.352 li
cp
ef
380.304 254.844 mo
384.432 254.844 li
384.432 255.84 li
378.876 255.84 li
378.876 254.844 li
379.32 254.388 379.932 253.764 380.712 252.972 cv
381.48 252.192 381.972 251.688 382.176 251.46 cv
382.56 251.04 382.824 250.68 382.968 250.38 cv
383.112 250.092 383.196 249.792 383.196 249.504 cv
383.196 249.048 383.028 248.664 382.704 248.376 cv
382.38 248.088 381.96 247.932 381.432 247.932 cv
381.06 247.932 380.664 248.004 380.256 248.124 cv
379.848 248.256 379.404 248.448 378.936 248.712 cv
378.936 247.512 li
379.416 247.32 379.86 247.176 380.268 247.08 cv
380.676 246.984 381.06 246.936 381.408 246.936 cv
382.308 246.936 383.028 247.164 383.568 247.62 cv
384.108 248.076 384.384 248.676 384.384 249.432 cv
384.384 249.792 384.312 250.14 384.18 250.452 cv
384.048 250.776 383.808 251.16 383.448 251.592 cv
383.352 251.712 383.04 252.036 382.512 252.576 cv
381.984 253.116 381.252 253.872 380.304 254.844 cv
380.304 254.844 li
cp
ef
417.638 242.64 mo
417.638 238.64 li
f
417.638 242.64 mo
417.638 238.64 li
@
417.638 12.96 mo
417.638 16.96 li
f
417.638 12.96 mo
417.638 16.96 li
@
411.816 246.936 mo
412.788 246.936 413.532 247.332 414.06 248.1 cv
414.576 248.88 414.84 250.008 414.84 251.472 cv
414.84 252.948 414.576 254.076 414.06 254.844 cv
413.532 255.612 412.788 255.996 411.816 255.996 cv
410.832 255.996 410.076 255.612 409.56 254.844 cv
409.044 254.076 408.792 252.948 408.792 251.472 cv
408.792 250.008 409.044 248.88 409.56 248.1 cv
410.076 247.332 410.832 246.936 411.816 246.936 cv
411.816 246.936 li
cp
411.816 247.872 mo
411.204 247.872 410.748 248.172 410.436 248.772 cv
410.124 249.372 409.98 250.272 409.98 251.472 cv
409.98 252.672 410.124 253.572 410.436 254.172 cv
410.748 254.772 411.204 255.072 411.816 255.072 cv
412.428 255.072 412.884 254.772 413.196 254.172 cv
413.496 253.572 413.652 252.672 413.652 251.472 cv
413.652 250.272 413.496 249.372 413.196 248.772 cv
412.884 248.172 412.428 247.872 411.816 247.872 cv
ef
416.964 254.352 mo
418.2 254.352 li
418.2 255.84 li
416.964 255.84 li
416.964 254.352 li
416.964 254.352 li
cp
ef
423.744 247.092 mo
425.232 247.092 li
425.232 252.792 li
426.48 252.792 li
426.48 253.776 li
425.232 253.776 li
425.232 255.84 li
424.056 255.84 li
424.056 253.776 li
420.108 253.776 li
420.108 252.636 li
423.744 247.092 li
423.744 247.092 li
cp
424.056 248.124 mo
421.068 252.792 li
424.056 252.792 li
424.056 248.124 li
ef
459.182 242.64 mo
459.182 238.64 li
f
459.182 242.64 mo
459.182 238.64 li
@
459.182 12.96 mo
459.182 16.96 li
f
459.182 12.96 mo
459.182 16.96 li
@
453.336 246.936 mo
454.308 246.936 455.052 247.332 455.58 248.1 cv
456.096 248.88 456.36 250.008 456.36 251.472 cv
456.36 252.948 456.096 254.076 455.58 254.844 cv
455.052 255.612 454.308 255.996 453.336 255.996 cv
452.352 255.996 451.596 255.612 451.08 254.844 cv
450.564 254.076 450.312 252.948 450.312 251.472 cv
450.312 250.008 450.564 248.88 451.08 248.1 cv
451.596 247.332 452.352 246.936 453.336 246.936 cv
453.336 246.936 li
cp
453.336 247.872 mo
452.724 247.872 452.268 248.172 451.956 248.772 cv
451.644 249.372 451.5 250.272 451.5 251.472 cv
451.5 252.672 451.644 253.572 451.956 254.172 cv
452.268 254.772 452.724 255.072 453.336 255.072 cv
453.948 255.072 454.404 254.772 454.716 254.172 cv
455.016 253.572 455.172 252.672 455.172 251.472 cv
455.172 250.272 455.016 249.372 454.716 248.772 cv
454.404 248.172 453.948 247.872 453.336 247.872 cv
ef
458.484 254.352 mo
459.72 254.352 li
459.72 255.84 li
458.484 255.84 li
458.484 254.352 li
458.484 254.352 li
cp
ef
467.352 247.284 mo
467.352 248.364 li
467.052 248.22 466.752 248.112 466.452 248.04 cv
466.14 247.968 465.84 247.932 465.552 247.932 cv
464.76 247.932 464.16 248.196 463.752 248.724 cv
463.344 249.252 463.104 250.056 463.056 251.112 cv
463.284 250.776 463.572 250.512 463.92 250.332 cv
464.268 250.152 464.652 250.056 465.072 250.056 cv
465.948 250.056 466.644 250.332 467.148 250.86 cv
467.652 251.388 467.916 252.12 467.916 253.032 cv
467.916 253.932 467.64 254.652 467.112 255.192 cv
466.584 255.732 465.876 255.996 465 255.996 cv
463.992 255.996 463.212 255.612 462.684 254.844 cv
462.144 254.076 461.88 252.948 461.88 251.472 cv
461.88 250.092 462.204 248.988 462.864 248.172 cv
463.512 247.356 464.4 246.936 465.504 246.936 cv
465.792 246.936 466.092 246.972 466.404 247.02 cv
466.704 247.08 467.016 247.164 467.352 247.284 cv
467.352 247.284 li
cp
465 250.992 mo
464.472 250.992 464.052 251.184 463.74 251.544 cv
463.428 251.904 463.272 252.408 463.272 253.032 cv
463.272 253.668 463.428 254.172 463.74 254.532 cv
464.052 254.892 464.472 255.072 465 255.072 cv
465.528 255.072 465.948 254.892 466.26 254.532 cv
466.572 254.172 466.728 253.668 466.728 253.032 cv
466.728 252.408 466.572 251.904 466.26 251.544 cv
465.948 251.184 465.528 250.992 465 250.992 cv
ef
500.725 242.64 mo
500.725 238.64 li
f
500.725 242.64 mo
500.725 238.64 li
@
500.725 12.96 mo
500.725 16.96 li
f
500.725 12.96 mo
500.725 16.96 li
@
495.096 246.936 mo
496.068 246.936 496.812 247.332 497.34 248.1 cv
497.856 248.88 498.12 250.008 498.12 251.472 cv
498.12 252.948 497.856 254.076 497.34 254.844 cv
496.812 255.612 496.068 255.996 495.096 255.996 cv
494.112 255.996 493.356 255.612 492.84 254.844 cv
492.324 254.076 492.072 252.948 492.072 251.472 cv
492.072 250.008 492.324 248.88 492.84 248.1 cv
493.356 247.332 494.112 246.936 495.096 246.936 cv
495.096 246.936 li
cp
495.096 247.872 mo
494.484 247.872 494.028 248.172 493.716 248.772 cv
493.404 249.372 493.26 250.272 493.26 251.472 cv
493.26 252.672 493.404 253.572 493.716 254.172 cv
494.028 254.772 494.484 255.072 495.096 255.072 cv
495.708 255.072 496.164 254.772 496.476 254.172 cv
496.776 253.572 496.932 252.672 496.932 251.472 cv
496.932 250.272 496.776 249.372 496.476 248.772 cv
496.164 248.172 495.708 247.872 495.096 247.872 cv
ef
500.004 254.352 mo
501.24 254.352 li
501.24 255.84 li
500.004 255.84 li
500.004 254.352 li
500.004 254.352 li
cp
ef
504.756 249.312 mo
504.756 249.768 504.888 250.128 505.176 250.38 cv
505.464 250.632 505.86 250.752 506.376 250.752 cv
506.88 250.752 507.276 250.632 507.564 250.38 cv
507.852 250.128 507.996 249.768 507.996 249.312 cv
507.996 248.856 507.852 248.508 507.564 248.256 cv
507.276 248.004 506.88 247.872 506.376 247.872 cv
505.86 247.872 505.464 248.004 505.176 248.256 cv
504.888 248.508 504.756 248.856 504.756 249.312 cv
504.756 249.312 li
cp
505.188 251.184 mo
504.684 251.064 504.288 250.824 504 250.476 cv
503.712 250.128 503.58 249.708 503.58 249.204 cv
503.58 248.508 503.82 247.956 504.324 247.548 cv
504.816 247.14 505.5 246.936 506.376 246.936 cv
507.24 246.936 507.924 247.14 508.428 247.548 cv
508.92 247.956 509.172 248.508 509.172 249.204 cv
509.172 249.708 509.028 250.128 508.74 250.476 cv
508.452 250.824 508.068 251.064 507.564 251.184 cv
508.128 251.316 508.572 251.58 508.896 251.964 cv
509.208 252.348 509.376 252.828 509.376 253.38 cv
509.376 254.232 509.112 254.88 508.596 255.324 cv
508.068 255.78 507.336 255.996 506.376 255.996 cv
505.404 255.996 504.66 255.78 504.144 255.324 cv
503.628 254.88 503.376 254.232 503.376 253.38 cv
503.376 252.828 503.532 252.348 503.856 251.964 cv
504.168 251.58 504.612 251.316 505.188 251.184 cv
506.376 251.688 mo
505.812 251.688 505.368 251.844 505.044 252.144 cv
504.72 252.444 504.564 252.852 504.564 253.38 cv
504.564 253.908 504.72 254.328 505.044 254.628 cv
505.368 254.928 505.812 255.072 506.376 255.072 cv
506.928 255.072 507.372 254.928 507.696 254.616 cv
508.02 254.316 508.188 253.908 508.188 253.38 cv
508.188 252.852 508.02 252.444 507.708 252.144 cv
507.384 251.844 506.94 251.688 506.376 251.688 cv
ef
542.268 242.64 mo
542.268 238.64 li
f
542.268 242.64 mo
542.268 238.64 li
@
542.268 12.96 mo
542.268 16.96 li
f
542.268 12.96 mo
542.268 16.96 li
@
534.288 254.844 mo
536.22 254.844 li
536.22 248.172 li
534.12 248.592 li
534.12 247.512 li
536.208 247.092 li
537.396 247.092 li
537.396 254.844 li
539.328 254.844 li
539.328 255.84 li
534.288 255.84 li
534.288 254.844 li
534.288 254.844 li
cp
ef
541.524 254.352 mo
542.76 254.352 li
542.76 255.84 li
541.524 255.84 li
541.524 254.352 li
541.524 254.352 li
cp
ef
547.896 246.936 mo
548.868 246.936 549.612 247.332 550.14 248.1 cv
550.656 248.88 550.92 250.008 550.92 251.472 cv
550.92 252.948 550.656 254.076 550.14 254.844 cv
549.612 255.612 548.868 255.996 547.896 255.996 cv
546.912 255.996 546.156 255.612 545.64 254.844 cv
545.124 254.076 544.872 252.948 544.872 251.472 cv
544.872 250.008 545.124 248.88 545.64 248.1 cv
546.156 247.332 546.912 246.936 547.896 246.936 cv
547.896 246.936 li
cp
547.896 247.872 mo
547.284 247.872 546.828 248.172 546.516 248.772 cv
546.204 249.372 546.06 250.272 546.06 251.472 cv
546.06 252.672 546.204 253.572 546.516 254.172 cv
546.828 254.772 547.284 255.072 547.896 255.072 cv
548.508 255.072 548.964 254.772 549.276 254.172 cv
549.576 253.572 549.732 252.672 549.732 251.472 cv
549.732 250.272 549.576 249.372 549.276 248.772 cv
548.964 248.172 548.508 247.872 547.896 247.872 cv
ef
423.816 263.652 mo
426.84 263.652 li
427.74 263.652 428.436 263.844 428.928 264.216 cv
429.408 264.6 429.66 265.128 429.66 265.812 cv
429.66 266.352 429.528 266.784 429.276 267.096 cv
429.024 267.408 428.664 267.612 428.184 267.684 cv
428.76 267.816 429.216 268.08 429.54 268.476 cv
429.852 268.872 430.02 269.364 430.02 269.952 cv
430.02 270.744 429.744 271.344 429.216 271.764 cv
428.688 272.196 427.932 272.4 426.96 272.4 cv
423.816 272.4 li
423.816 263.652 li
423.816 263.652 li
cp
425.004 264.624 mo
425.004 267.264 li
426.756 267.264 li
427.332 267.264 427.752 267.156 428.04 266.94 cv
428.328 266.724 428.472 266.4 428.472 265.944 cv
428.472 265.512 428.328 265.176 428.04 264.96 cv
427.752 264.744 427.332 264.624 426.756 264.624 cv
425.004 264.624 li
425.004 268.224 mo
425.004 271.428 li
426.9 271.428 li
427.536 271.428 428.004 271.296 428.316 271.032 cv
428.616 270.768 428.772 270.372 428.772 269.82 cv
428.772 269.28 428.616 268.884 428.316 268.62 cv
428.004 268.356 427.536 268.224 426.9 268.224 cv
425.004 268.224 li
ef
433.848 263.652 mo
434.844 263.652 li
431.796 273.504 li
430.8 273.504 li
433.848 263.652 li
433.848 263.652 li
cp
ef
434.856 263.652 mo
442.248 263.652 li
442.248 264.648 li
439.14 264.648 li
439.14 272.4 li
437.952 272.4 li
437.952 264.648 li
434.856 264.648 li
434.856 263.652 li
434.856 263.652 li
cp
ef
445.752 265.68 mo
446.688 265.68 447.42 265.992 447.96 266.592 cv
448.488 267.204 448.764 268.044 448.764 269.124 cv
448.764 270.204 448.488 271.044 447.96 271.644 cv
447.42 272.256 446.688 272.556 445.752 272.556 cv
444.804 272.556 444.06 272.256 443.532 271.644 cv
443.004 271.044 442.74 270.204 442.74 269.124 cv
442.74 268.044 443.004 267.204 443.532 266.592 cv
444.06 265.992 444.804 265.68 445.752 265.68 cv
445.752 265.68 li
cp
445.752 266.592 mo
445.176 266.592 444.72 266.82 444.384 267.276 cv
444.048 267.732 443.88 268.344 443.88 269.124 cv
443.88 269.916 444.036 270.528 444.372 270.984 cv
444.708 271.44 445.164 271.656 445.752 271.656 cv
446.328 271.656 446.784 271.44 447.12 270.984 cv
447.456 270.528 447.624 269.916 447.624 269.124 cv
447.624 268.356 447.456 267.732 447.12 267.276 cv
446.784 266.82 446.328 266.592 445.752 266.592 cv
ef
451.716 263.976 mo
451.716 265.836 li
453.936 265.836 li
453.936 266.676 li
451.716 266.676 li
451.716 270.24 li
451.716 270.78 451.788 271.128 451.932 271.272 cv
452.076 271.428 452.376 271.5 452.832 271.5 cv
453.936 271.5 li
453.936 272.4 li
452.832 272.4 li
451.992 272.4 451.416 272.244 451.104 271.932 cv
450.792 271.62 450.636 271.056 450.636 270.24 cv
450.636 266.676 li
449.844 266.676 li
449.844 265.836 li
450.636 265.836 li
450.636 263.976 li
451.716 263.976 li
451.716 263.976 li
cp
ef
313.78 242.64 mo
317.78 242.64 li
f
313.78 242.64 mo
317.78 242.64 li
@
563.04 242.64 mo
559.04 242.64 li
f
563.04 242.64 mo
559.04 242.64 li
@
305.976 237.096 mo
306.948 237.096 307.692 237.492 308.22 238.26 cv
308.736 239.04 309 240.168 309 241.632 cv
309 243.108 308.736 244.236 308.22 245.004 cv
307.692 245.772 306.948 246.156 305.976 246.156 cv
304.992 246.156 304.236 245.772 303.72 245.004 cv
303.204 244.236 302.952 243.108 302.952 241.632 cv
302.952 240.168 303.204 239.04 303.72 238.26 cv
304.236 237.492 304.992 237.096 305.976 237.096 cv
305.976 237.096 li
cp
305.976 238.032 mo
305.364 238.032 304.908 238.332 304.596 238.932 cv
304.284 239.532 304.14 240.432 304.14 241.632 cv
304.14 242.832 304.284 243.732 304.596 244.332 cv
304.908 244.932 305.364 245.232 305.976 245.232 cv
306.588 245.232 307.044 244.932 307.356 244.332 cv
307.656 243.732 307.812 242.832 307.812 241.632 cv
307.812 240.432 307.656 239.532 307.356 238.932 cv
307.044 238.332 306.588 238.032 305.976 238.032 cv
ef
313.78 189.226 mo
317.78 189.226 li
f
313.78 189.226 mo
317.78 189.226 li
@
563.04 189.226 mo
559.04 189.226 li
f
563.04 189.226 mo
559.04 189.226 li
@
303.456 183.732 mo
308.1 183.732 li
308.1 184.728 li
304.536 184.728 li
304.536 186.876 li
304.704 186.816 304.884 186.768 305.052 186.744 cv
305.22 186.72 305.4 186.696 305.568 186.696 cv
306.54 186.696 307.308 186.972 307.884 187.5 cv
308.46 188.04 308.748 188.76 308.748 189.672 cv
308.748 190.62 308.448 191.352 307.86 191.868 cv
307.272 192.384 306.444 192.636 305.388 192.636 cv
305.016 192.636 304.644 192.6 304.26 192.552 cv
303.876 192.492 303.492 192.408 303.084 192.276 cv
303.084 191.088 li
303.432 191.28 303.792 191.424 304.176 191.52 cv
304.548 191.616 304.944 191.652 305.364 191.652 cv
306.036 191.652 306.576 191.484 306.972 191.124 cv
307.356 190.764 307.56 190.284 307.56 189.672 cv
307.56 189.072 307.356 188.592 306.972 188.232 cv
306.576 187.872 306.036 187.692 305.364 187.692 cv
305.052 187.692 304.728 187.728 304.416 187.8 cv
304.104 187.872 303.78 187.98 303.456 188.124 cv
303.456 183.732 li
303.456 183.732 li
cp
ef
313.78 135.812 mo
317.78 135.812 li
f
313.78 135.812 mo
317.78 135.812 li
@
563.04 135.812 mo
559.04 135.812 li
f
563.04 135.812 mo
559.04 135.812 li
@
295.968 138.204 mo
297.9 138.204 li
297.9 131.532 li
295.8 131.952 li
295.8 130.872 li
297.888 130.452 li
299.076 130.452 li
299.076 138.204 li
301.008 138.204 li
301.008 139.2 li
295.968 139.2 li
295.968 138.204 li
295.968 138.204 li
cp
ef
305.976 130.296 mo
306.948 130.296 307.692 130.692 308.22 131.46 cv
308.736 132.24 309 133.368 309 134.832 cv
309 136.308 308.736 137.436 308.22 138.204 cv
307.692 138.972 306.948 139.356 305.976 139.356 cv
304.992 139.356 304.236 138.972 303.72 138.204 cv
303.204 137.436 302.952 136.308 302.952 134.832 cv
302.952 133.368 303.204 132.24 303.72 131.46 cv
304.236 130.692 304.992 130.296 305.976 130.296 cv
305.976 130.296 li
cp
305.976 131.232 mo
305.364 131.232 304.908 131.532 304.596 132.132 cv
304.284 132.732 304.14 133.632 304.14 134.832 cv
304.14 136.032 304.284 136.932 304.596 137.532 cv
304.908 138.132 305.364 138.432 305.976 138.432 cv
306.588 138.432 307.044 138.132 307.356 137.532 cv
307.656 136.932 307.812 136.032 307.812 134.832 cv
307.812 133.632 307.656 132.732 307.356 132.132 cv
307.044 131.532 306.588 131.232 305.976 131.232 cv
ef
313.78 82.398 mo
317.78 82.398 li
f
313.78 82.398 mo
317.78 82.398 li
@
563.04 82.398 mo
559.04 82.398 li
f
563.04 82.398 mo
559.04 82.398 li
@
295.968 84.684 mo
297.9 84.684 li
297.9 78.012 li
295.8 78.4319 li
295.8 77.352 li
297.888 76.9319 li
299.076 76.9319 li
299.076 84.684 li
301.008 84.684 li
301.008 85.68 li
295.968 85.68 li
295.968 84.684 li
295.968 84.684 li
cp
ef
303.456 76.9319 mo
308.1 76.9319 li
308.1 77.928 li
304.536 77.928 li
304.536 80.076 li
304.704 80.016 304.884 79.968 305.052 79.944 cv
305.22 79.92 305.4 79.896 305.568 79.896 cv
306.54 79.896 307.308 80.172 307.884 80.7 cv
308.46 81.24 308.748 81.96 308.748 82.8719 cv
308.748 83.82 308.448 84.552 307.86 85.068 cv
307.272 85.584 306.444 85.836 305.388 85.836 cv
305.016 85.836 304.644 85.8 304.26 85.752 cv
303.876 85.692 303.492 85.608 303.084 85.476 cv
303.084 84.288 li
303.432 84.48 303.792 84.624 304.176 84.72 cv
304.548 84.816 304.944 84.852 305.364 84.852 cv
306.036 84.852 306.576 84.684 306.972 84.324 cv
307.356 83.964 307.56 83.484 307.56 82.8719 cv
307.56 82.272 307.356 81.792 306.972 81.432 cv
306.576 81.072 306.036 80.892 305.364 80.892 cv
305.052 80.892 304.728 80.928 304.416 81 cv
304.104 81.072 303.78 81.18 303.456 81.324 cv
303.456 76.9319 li
303.456 76.9319 li
cp
ef
313.78 28.984 mo
317.78 28.984 li
f
313.78 28.984 mo
317.78 28.984 li
@
563.04 28.984 mo
559.04 28.984 li
f
563.04 28.984 mo
559.04 28.984 li
@
296.784 31.404 mo
300.912 31.404 li
300.912 32.4 li
295.356 32.4 li
295.356 31.404 li
295.8 30.948 296.412 30.324 297.192 29.532 cv
297.96 28.752 298.452 28.248 298.656 28.02 cv
299.04 27.6 299.304 27.24 299.448 26.9399 cv
299.592 26.652 299.676 26.3519 299.676 26.064 cv
299.676 25.608 299.508 25.224 299.184 24.936 cv
298.86 24.6479 298.44 24.4919 297.912 24.4919 cv
297.54 24.4919 297.144 24.564 296.736 24.684 cv
296.328 24.816 295.884 25.0079 295.416 25.272 cv
295.416 24.072 li
295.896 23.8799 296.34 23.736 296.748 23.64 cv
297.156 23.5439 297.54 23.496 297.888 23.496 cv
298.788 23.496 299.508 23.724 300.048 24.1799 cv
300.588 24.636 300.864 25.236 300.864 25.9919 cv
300.864 26.3519 300.792 26.7 300.66 27.012 cv
300.528 27.3359 300.288 27.72 299.928 28.152 cv
299.832 28.272 299.52 28.5959 298.992 29.136 cv
298.464 29.676 297.732 30.4319 296.784 31.404 cv
296.784 31.404 li
cp
ef
305.976 23.496 mo
306.948 23.496 307.692 23.892 308.22 24.66 cv
308.736 25.4399 309 26.568 309 28.032 cv
309 29.508 308.736 30.636 308.22 31.404 cv
307.692 32.172 306.948 32.556 305.976 32.556 cv
304.992 32.556 304.236 32.172 303.72 31.404 cv
303.204 30.636 302.952 29.508 302.952 28.032 cv
302.952 26.568 303.204 25.4399 303.72 24.66 cv
304.236 23.892 304.992 23.496 305.976 23.496 cv
305.976 23.496 li
cp
305.976 24.4319 mo
305.364 24.4319 304.908 24.7319 304.596 25.332 cv
304.284 25.9319 304.14 26.832 304.14 28.032 cv
304.14 29.232 304.284 30.132 304.596 30.732 cv
304.908 31.332 305.364 31.632 305.976 31.632 cv
306.588 31.632 307.044 31.332 307.356 30.732 cv
307.656 30.132 307.812 29.232 307.812 28.032 cv
307.812 26.832 307.656 25.9319 307.356 25.332 cv
307.044 24.7319 306.588 24.4319 305.976 24.4319 cv
ef
414.668 79.5 mo
414.944 79.5 415.196 79.392 415.436 79.164 cv
415.676 78.936 415.868 78.672 416.024 78.384 cv
416.12 78.168 416.228 77.916 416.324 77.604 cv
416.42 77.292 416.504 76.968 416.576 76.608 cv
416.648 76.2599 416.684 75.984 416.684 75.768 cv
416.684 75.588 416.66 75.42 416.612 75.252 cv
416.564 75.0959 416.48 74.964 416.372 74.856 cv
416.252 74.748 416.108 74.688 415.928 74.688 cv
415.628 74.688 415.352 74.796 415.088 75 cv
414.824 75.216 414.596 75.468 414.392 75.78 cv
414.392 75.816 li
413.732 78.468 li
413.78 78.756 413.888 79.008 414.044 79.2 cv
414.2 79.404 414.404 79.5 414.668 79.5 cv
414.668 79.5 li
cp
411.392 81.996 mo
411.32 81.996 411.284 81.936 411.284 81.84 cv
411.308 81.66 411.368 81.576 411.44 81.576 cv
411.68 81.576 411.848 81.552 411.944 81.504 cv
412.04 81.456 412.124 81.348 412.184 81.168 cv
413.54 75.78 li
413.588 75.636 413.624 75.444 413.624 75.204 cv
413.624 74.868 413.504 74.688 413.276 74.688 cv
413.024 74.688 412.832 74.844 412.712 75.144 cv
412.592 75.444 412.472 75.816 412.364 76.272 cv
412.364 76.32 412.328 76.344 412.268 76.344 cv
412.124 76.344 li
412.1 76.344 412.088 76.332 412.064 76.308 cv
412.04 76.284 412.028 76.248 412.028 76.224 cv
412.112 75.876 412.196 75.576 412.28 75.336 cv
412.352 75.0959 412.484 74.88 412.652 74.676 cv
412.82 74.484 413.024 74.376 413.288 74.376 cv
413.552 74.376 413.792 74.46 414.008 74.616 cv
414.212 74.772 414.344 74.976 414.404 75.24 cv
414.62 74.988 414.86 74.784 415.124 74.616 cv
415.388 74.46 415.664 74.376 415.952 74.376 cv
416.288 74.376 416.576 74.472 416.828 74.652 cv
417.068 74.832 417.26 75.072 417.38 75.36 cv
417.5 75.648 417.572 75.96 417.572 76.296 cv
417.572 76.812 417.44 77.34 417.176 77.892 cv
416.912 78.444 416.552 78.9 416.108 79.2599 cv
415.652 79.62 415.172 79.8 414.656 79.8 cv
414.416 79.8 414.212 79.728 414.02 79.608 cv
413.828 79.488 413.672 79.308 413.576 79.092 cv
413.036 81.216 li
413.012 81.336 413 81.396 413 81.42 cv
413 81.516 413.264 81.576 413.792 81.576 cv
413.864 81.576 413.912 81.624 413.912 81.732 cv
413.888 81.828 413.864 81.9 413.84 81.936 cv
413.816 81.972 413.78 81.996 413.708 81.996 cv
411.392 81.996 li
ef
418.315 81.6 mo
418.256 81.6 418.231 81.5664 418.231 81.4908 cv
418.231 81.474 418.239 81.4488 418.248 81.4152 cv
418.256 81.3816 418.264 81.3564 418.281 81.3396 cv
418.298 81.3228 418.315 81.306 418.34 81.306 cv
418.676 81.306 418.92 81.2892 419.054 81.2472 cv
419.121 81.2304 419.18 81.1548 419.214 81.0204 cv
420.364 76.4088 li
420.373 76.3584 420.381 76.3164 420.381 76.2912 cv
420.381 76.2324 420.348 76.1988 420.28 76.1904 cv
420.171 76.1736 419.97 76.1568 419.676 76.1568 cv
419.617 76.1568 419.592 76.1232 419.592 76.0475 cv
419.608 75.9803 419.625 75.93 419.642 75.9048 cv
419.65 75.8796 419.684 75.8628 419.734 75.8628 cv
421.994 75.8628 li
422.044 75.8628 422.078 75.9048 422.078 75.972 cv
422.078 75.9888 422.07 76.014 422.061 76.0475 cv
422.053 76.0812 422.044 76.1064 422.028 76.1232 cv
422.011 76.1484 421.994 76.1568 421.969 76.1568 cv
421.624 76.1568 421.389 76.1819 421.255 76.2156 cv
421.179 76.2492 421.129 76.3248 421.095 76.4424 cv
420.415 79.164 li
423.708 76.6188 li
423.708 76.6104 423.741 76.5768 423.808 76.5096 cv
423.876 76.4424 423.909 76.3836 423.909 76.3164 cv
423.909 76.2156 423.808 76.1568 423.624 76.1568 cv
423.565 76.1568 423.54 76.1232 423.54 76.0475 cv
423.548 76.0056 423.556 75.972 423.565 75.9468 cv
423.565 75.9216 423.582 75.9048 423.598 75.888 cv
423.615 75.8712 423.649 75.8628 423.682 75.8628 cv
425.312 75.8628 li
425.337 75.8628 425.354 75.8796 425.371 75.8964 cv
425.388 75.9216 425.396 75.9468 425.396 75.972 cv
425.396 75.9888 425.388 76.014 425.379 76.0475 cv
425.362 76.0812 425.354 76.1147 425.337 76.1316 cv
425.32 76.1484 425.304 76.1568 425.278 76.1568 cv
424.867 76.1568 424.422 76.35 423.934 76.728 cv
423.926 76.728 423.918 76.7364 423.918 76.7364 cv
423.909 76.7364 423.901 76.7364 423.901 76.7364 cv
423.892 76.7364 423.892 76.7448 423.892 76.7448 cv
422.162 78.0888 li
423.422 81.0372 li
423.489 81.1632 423.573 81.2388 423.666 81.264 cv
423.75 81.2976 423.884 81.306 424.069 81.306 cv
424.119 81.306 424.153 81.348 424.153 81.4152 cv
424.136 81.4824 424.119 81.5328 424.102 81.558 cv
424.086 81.5916 424.052 81.6 424.01 81.6 cv
422.061 81.6 li
422.011 81.6 421.986 81.5664 421.986 81.4908 cv
421.986 81.4404 421.994 81.39 422.011 81.3564 cv
422.019 81.3228 422.044 81.306 422.095 81.306 cv
422.229 81.306 422.355 81.2976 422.456 81.264 cv
422.557 81.2388 422.607 81.1716 422.607 81.0624 cv
422.607 81.0288 422.599 80.9952 422.599 80.9784 cv
421.557 78.5508 li
420.331 79.5 li
419.944 81.054 li
419.928 81.1212 419.928 81.1632 419.928 81.1716 cv
419.928 81.2304 419.961 81.264 420.028 81.2724 cv
420.129 81.2976 420.331 81.306 420.633 81.306 cv
420.684 81.306 420.717 81.348 420.717 81.4152 cv
420.7 81.4992 420.684 81.5496 420.675 81.5664 cv
420.658 81.5916 420.625 81.6 420.574 81.6 cv
418.315 81.6 li
418.315 81.6 li
cp
ef
425.392 81.7764 mo
425.376 81.7764 425.359 81.7596 425.342 81.7428 cv
425.325 81.726 425.325 81.7092 425.325 81.6924 cv
425.812 79.7436 li
425.821 79.71 425.846 79.6932 425.88 79.6932 cv
425.98 79.6932 li
425.997 79.6932 426.014 79.7016 426.031 79.7184 cv
426.039 79.7352 426.048 79.7604 426.048 79.7772 cv
425.997 79.9704 425.98 80.1384 425.98 80.2896 cv
425.98 80.7012 426.115 81.0036 426.392 81.1968 cv
426.669 81.3984 427.022 81.4908 427.45 81.4908 cv
427.635 81.4908 427.812 81.4488 427.988 81.3564 cv
428.164 81.2724 428.324 81.1548 428.458 81.0036 cv
428.593 80.8608 428.694 80.7012 428.778 80.5164 cv
428.853 80.34 428.895 80.1552 428.895 79.9704 cv
428.895 79.7772 428.836 79.6008 428.736 79.4496 cv
428.635 79.2984 428.492 79.1976 428.307 79.1472 cv
427.282 78.8784 li
427.005 78.8112 426.787 78.66 426.619 78.4332 cv
426.451 78.2148 426.375 77.9628 426.375 77.6772 cv
426.375 77.3412 426.476 77.022 426.678 76.7112 cv
426.879 76.4004 427.14 76.1484 427.459 75.9636 cv
427.778 75.7787 428.106 75.678 428.442 75.678 cv
428.694 75.678 428.929 75.7284 429.147 75.8208 cv
429.357 75.9216 429.525 76.0644 429.643 76.266 cv
430.122 75.7032 li
430.155 75.6864 430.172 75.678 430.18 75.678 cv
430.231 75.678 li
430.248 75.678 430.264 75.6948 430.281 75.7115 cv
430.298 75.7284 430.306 75.7452 430.306 75.762 cv
429.819 77.7108 li
429.802 77.7528 429.786 77.7696 429.752 77.7696 cv
429.651 77.7696 li
429.601 77.7696 429.576 77.7444 429.576 77.6772 cv
429.601 77.5008 429.618 77.3496 429.618 77.2152 cv
429.618 76.9632 429.567 76.7364 429.483 76.5432 cv
429.391 76.35 429.256 76.1988 429.08 76.098 cv
428.895 75.9972 428.677 75.9468 428.416 75.9468 cv
428.19 75.9468 427.963 76.014 427.744 76.14 cv
427.526 76.2744 427.341 76.4424 427.207 76.6524 cv
427.072 76.8708 427.005 77.0892 427.005 77.316 cv
427.005 77.5008 427.056 77.6604 427.165 77.7948 cv
427.266 77.9376 427.408 78.03 427.585 78.0804 cv
428.61 78.3492 li
428.794 78.3996 428.954 78.492 429.088 78.6096 cv
429.223 78.7356 429.332 78.8868 429.408 79.0547 cv
429.475 79.2228 429.517 79.4076 429.517 79.6092 cv
429.517 79.878 429.458 80.1468 429.349 80.3988 cv
429.231 80.6592 429.08 80.8944 428.878 81.1044 cv
428.677 81.3228 428.442 81.4824 428.19 81.6 cv
427.938 81.7176 427.677 81.7764 427.417 81.7764 cv
426.745 81.7764 426.266 81.5832 425.98 81.1968 cv
425.51 81.7512 li
425.476 81.768 425.451 81.7764 425.451 81.7764 cv
425.392 81.7764 li
425.392 81.7764 li
cp
ef
433.94 75.756 mo
433.868 75.756 433.82 75.732 433.772 75.684 cv
433.724 75.636 433.712 75.588 433.712 75.516 cv
433.712 75.468 433.724 75.408 433.772 75.36 cv
433.82 75.312 433.868 75.276 433.94 75.276 cv
441.476 75.276 li
441.524 75.276 441.572 75.312 441.62 75.36 cv
441.668 75.408 441.692 75.468 441.692 75.516 cv
441.692 75.588 441.668 75.636 441.62 75.684 cv
441.572 75.732 441.524 75.756 441.476 75.756 cv
433.94 75.756 li
433.94 75.756 li
cp
433.94 78.084 mo
433.868 78.084 433.82 78.06 433.772 78.012 cv
433.724 77.964 433.712 77.904 433.712 77.844 cv
433.712 77.784 433.724 77.724 433.772 77.676 cv
433.82 77.628 433.868 77.604 433.94 77.604 cv
441.476 77.604 li
441.524 77.604 441.572 77.628 441.62 77.676 cv
441.668 77.724 441.692 77.784 441.692 77.844 cv
441.692 77.904 441.668 77.964 441.62 78.012 cv
441.572 78.06 441.524 78.084 441.476 78.084 cv
433.94 78.084 li
ef
447.32 79.632 mo
447.764 79.632 448.1 79.404 448.316 78.948 cv
448.532 78.492 448.664 77.988 448.712 77.436 cv
448.76 76.884 448.796 76.284 448.796 75.66 cv
448.796 75.06 448.76 74.508 448.712 74.004 cv
448.664 73.5 448.532 73.032 448.316 72.624 cv
448.1 72.216 447.764 72 447.32 72 cv
446.864 72 446.528 72.216 446.312 72.624 cv
446.096 73.032 445.952 73.5 445.904 74.004 cv
445.856 74.508 445.832 75.06 445.832 75.66 cv
445.832 76.116 445.832 76.5359 445.856 76.92 cv
445.88 77.316 445.94 77.724 446.036 78.144 cv
446.132 78.564 446.276 78.912 446.492 79.2 cv
446.696 79.488 446.972 79.632 447.32 79.632 cv
447.32 79.632 li
cp
447.32 79.9319 mo
446.336 79.9319 445.664 79.5359 445.316 78.732 cv
444.956 77.928 444.788 76.968 444.788 75.852 cv
444.788 75.156 444.848 74.508 444.98 73.896 cv
445.1 73.284 445.352 72.768 445.736 72.336 cv
446.108 71.904 446.636 71.688 447.32 71.688 cv
447.848 71.688 448.28 71.82 448.616 72.072 cv
448.952 72.336 449.204 72.66 449.384 73.068 cv
449.552 73.476 449.672 73.92 449.744 74.388 cv
449.804 74.856 449.84 75.348 449.84 75.852 cv
449.84 76.548 449.768 77.184 449.648 77.784 cv
449.516 78.384 449.264 78.9 448.892 79.308 cv
448.52 79.716 447.992 79.9319 447.32 79.9319 cv
ef
451.328 79.02 mo
451.328 78.84 451.388 78.684 451.52 78.552 cv
451.652 78.4319 451.808 78.36 451.988 78.36 cv
452.096 78.36 452.204 78.396 452.312 78.456 cv
452.408 78.516 452.492 78.6 452.552 78.696 cv
452.612 78.804 452.648 78.912 452.648 79.02 cv
452.648 79.2 452.576 79.356 452.456 79.488 cv
452.324 79.62 452.168 79.68 451.988 79.68 cv
451.808 79.68 451.652 79.62 451.52 79.488 cv
451.388 79.356 451.328 79.2 451.328 79.02 cv
451.328 79.02 li
cp
ef
456.572 77.28 mo
459.416 77.28 li
459.416 73.032 li
456.572 77.28 li
456.572 77.28 li
cp
456.176 77.7 mo
456.176 77.28 li
459.884 71.748 li
459.908 71.712 459.944 71.688 460.004 71.688 cv
460.184 71.688 li
460.268 71.688 460.316 71.736 460.316 71.82 cv
460.316 77.28 li
461.492 77.28 li
461.492 77.7 li
460.316 77.7 li
460.316 78.876 li
460.316 79.044 460.424 79.152 460.664 79.2 cv
460.904 79.248 461.168 79.2599 461.48 79.2599 cv
461.48 79.68 li
458.18 79.68 li
458.18 79.2599 li
458.48 79.2599 458.744 79.248 458.984 79.2 cv
459.224 79.152 459.344 79.044 459.344 78.876 cv
459.344 77.7 li
456.176 77.7 li
ef
462.956 79.68 mo
462.956 79.2599 li
463.952 79.2599 464.456 79.14 464.456 78.876 cv
464.456 72.576 li
464.036 72.78 463.508 72.876 462.884 72.876 cv
462.884 72.456 li
463.856 72.456 464.6 72.204 465.104 71.688 cv
465.272 71.688 li
465.296 71.688 465.332 71.7 465.356 71.724 cv
465.38 71.748 465.392 71.772 465.392 71.796 cv
465.392 78.876 li
465.392 79.14 465.884 79.2599 466.892 79.2599 cv
466.892 79.68 li
462.956 79.68 li
462.956 79.68 li
cp
ef
470.84 79.632 mo
471.284 79.632 471.62 79.404 471.836 78.948 cv
472.052 78.492 472.184 77.988 472.232 77.436 cv
472.28 76.884 472.316 76.284 472.316 75.66 cv
472.316 75.06 472.28 74.508 472.232 74.004 cv
472.184 73.5 472.052 73.032 471.836 72.624 cv
471.62 72.216 471.284 72 470.84 72 cv
470.384 72 470.048 72.216 469.832 72.624 cv
469.616 73.032 469.472 73.5 469.424 74.004 cv
469.376 74.508 469.352 75.06 469.352 75.66 cv
469.352 76.116 469.352 76.5359 469.376 76.92 cv
469.4 77.316 469.46 77.724 469.556 78.144 cv
469.652 78.564 469.796 78.912 470.012 79.2 cv
470.216 79.488 470.492 79.632 470.84 79.632 cv
470.84 79.632 li
cp
470.84 79.9319 mo
469.856 79.9319 469.184 79.5359 468.836 78.732 cv
468.476 77.928 468.308 76.968 468.308 75.852 cv
468.308 75.156 468.368 74.508 468.5 73.896 cv
468.62 73.284 468.872 72.768 469.256 72.336 cv
469.628 71.904 470.156 71.688 470.84 71.688 cv
471.368 71.688 471.8 71.82 472.136 72.072 cv
472.472 72.336 472.724 72.66 472.904 73.068 cv
473.072 73.476 473.192 73.92 473.264 74.388 cv
473.324 74.856 473.36 75.348 473.36 75.852 cv
473.36 76.548 473.288 77.184 473.168 77.784 cv
473.036 78.384 472.784 78.9 472.412 79.308 cv
472.04 79.716 471.512 79.9319 470.84 79.9319 cv
ef
gsave
0 288 mo
576 288 li
576 0 li
0 0 li
0 288 li
cp
clp
1 lw
0 lj
326.74 36.5606 mo
355.54 36.5606 li
355.54 26.4806 li
326.74 26.4806 li
326.74 36.5606 li
326.74 36.5606 li
cp
.883665 .769161 0 0 cmyk
@
grestore
376.234 26.7888 mo
376.234 28.2864 li
375.744 27.8544 375.24 27.5232 374.693 27.2928 cv
374.146 27.0768 373.584 26.9615 372.979 26.9615 cv
371.77 26.9615 370.848 27.3359 370.214 28.0704 cv
369.581 28.8047 369.264 29.856 369.264 31.2384 cv
369.264 32.6208 369.581 33.6864 370.214 34.4208 cv
370.848 35.1552 371.77 35.5152 372.979 35.5152 cv
373.584 35.5152 374.146 35.4144 374.693 35.184 cv
375.24 34.968 375.744 34.6368 376.234 34.1904 cv
376.234 35.6736 li
375.73 36.0192 375.197 36.264 374.65 36.4224 cv
374.102 36.5807 373.512 36.6672 372.893 36.6672 cv
371.309 36.6672 370.056 36.192 369.134 35.2272 cv
368.213 34.2624 367.766 32.9376 367.766 31.2384 cv
367.766 29.5536 368.213 28.2288 369.134 27.2496 cv
370.056 26.2848 371.309 25.7952 372.893 25.7952 cv
373.526 25.7952 374.117 25.8816 374.664 26.04 cv
375.211 26.2128 375.744 26.4576 376.234 26.7888 cv
376.234 26.7888 li
cp
ef
381.158 25.9824 mo
382.771 25.9824 li
386.774 36.48 li
385.291 36.48 li
384.341 33.7872 li
379.603 33.7872 li
378.653 36.48 li
377.155 36.48 li
381.158 25.9824 li
381.158 25.9824 li
cp
381.965 27.3792 mo
380.035 32.6064 li
383.894 32.6064 li
381.965 27.3792 li
ef
388.291 25.9824 mo
390.206 25.9824 li
394.858 34.7664 li
394.858 25.9824 li
396.24 25.9824 li
396.24 36.48 li
394.325 36.48 li
389.674 27.696 li
389.674 36.48 li
388.291 36.48 li
388.291 25.9824 li
388.291 25.9824 li
cp
ef
399.091 25.9824 mo
402.014 25.9824 li
404.045 25.9824 405.542 26.4144 406.493 27.2496 cv
407.443 28.0992 407.918 29.424 407.918 31.224 cv
407.918 33.0384 407.429 34.3632 406.478 35.2128 cv
405.528 36.0624 404.03 36.48 402.014 36.48 cv
399.091 36.48 li
399.091 25.9824 li
399.091 25.9824 li
cp
400.517 27.1487 mo
400.517 35.3136 li
402.23 35.3136 li
403.67 35.3136 404.736 34.9968 405.413 34.3344 cv
406.075 33.672 406.421 32.6352 406.421 31.224 cv
406.421 29.8128 406.075 28.7903 405.413 28.128 cv
404.736 27.48 403.67 27.1487 402.23 27.1487 cv
400.517 27.1487 li
ef
410.131 25.9824 mo
416.77 25.9824 li
416.77 27.1776 li
411.557 27.1776 li
411.557 30.288 li
416.554 30.288 li
416.554 31.4832 li
411.557 31.4832 li
411.557 35.2848 li
416.899 35.2848 li
416.899 36.48 li
410.131 36.48 li
410.131 25.9824 li
410.131 25.9824 li
cp
ef
419.251 25.9824 mo
420.677 25.9824 li
420.677 35.2848 li
425.789 35.2848 li
425.789 36.48 li
419.251 36.48 li
419.251 25.9824 li
419.251 25.9824 li
cp
ef
433.464 26.3279 mo
433.464 27.7104 li
432.917 27.4512 432.413 27.264 431.938 27.1343 cv
431.448 27.0192 430.987 26.9471 430.555 26.9471 cv
429.778 26.9471 429.173 27.1056 428.755 27.3936 cv
428.338 27.696 428.136 28.128 428.136 28.6752 cv
428.136 29.136 428.266 29.496 428.554 29.7264 cv
428.827 29.9712 429.36 30.1584 430.138 30.3024 cv
431.002 30.4752 li
432.053 30.6768 432.83 31.0368 433.334 31.5408 cv
433.838 32.0591 434.098 32.736 434.098 33.5856 cv
434.098 34.608 433.752 35.3712 433.075 35.8896 cv
432.384 36.408 431.39 36.6672 430.08 36.6672 cv
429.576 36.6672 429.043 36.6096 428.482 36.5088 cv
427.92 36.408 427.344 36.2496 426.754 36.0192 cv
426.754 34.5504 li
427.33 34.8816 427.891 35.1263 428.438 35.2848 cv
428.986 35.4576 429.533 35.5296 430.08 35.5296 cv
430.886 35.5296 431.506 35.3712 431.952 35.0544 cv
432.384 34.7375 432.614 34.2912 432.614 33.6864 cv
432.614 33.168 432.456 32.7648 432.139 32.4768 cv
431.822 32.1888 431.304 31.9728 430.584 31.8288 cv
429.72 31.6559 li
428.654 31.4543 427.891 31.1232 427.416 30.6624 cv
426.941 30.216 426.71 29.5968 426.71 28.7903 cv
426.71 27.8688 427.027 27.1343 427.69 26.6016 cv
428.338 26.0688 429.245 25.7952 430.397 25.7952 cv
430.886 25.7952 431.376 25.8384 431.894 25.9247 cv
432.398 26.0112 432.917 26.1552 433.464 26.3279 cv
433.464 26.3279 li
cp
ef
440.851 25.9824 mo
446.885 25.9824 li
446.885 27.1776 li
442.277 27.1776 li
442.277 30.2736 li
446.438 30.2736 li
446.438 31.4688 li
442.277 31.4688 li
442.277 36.48 li
440.851 36.48 li
440.851 25.9824 li
440.851 25.9824 li
cp
ef
454.637 31.8432 mo
454.622 31.1376 454.421 30.576 454.046 30.144 cv
453.658 29.7264 453.139 29.5104 452.506 29.5104 cv
451.786 29.5104 451.21 29.7264 450.778 30.1296 cv
450.346 30.5328 450.086 31.1088 450.029 31.8432 cv
454.637 31.8432 li
454.637 31.8432 li
cp
455.933 32.2176 mo
455.933 32.8512 li
449.986 32.8512 li
450.043 33.744 450.302 34.4352 450.792 34.896 cv
451.267 35.3568 451.93 35.5872 452.794 35.5872 cv
453.283 35.5872 453.773 35.5296 454.234 35.4144 cv
454.694 35.2992 455.17 35.112 455.63 34.8528 cv
455.63 36.0768 li
455.17 36.2784 454.694 36.4368 454.205 36.5232 cv
453.715 36.6096 453.211 36.6672 452.722 36.6672 cv
451.454 36.6672 450.461 36.3072 449.726 35.5872 cv
448.992 34.8672 448.632 33.8736 448.632 32.6208 cv
448.632 31.3392 448.978 30.3168 449.669 29.5536 cv
450.36 28.8047 451.31 28.416 452.491 28.416 cv
453.557 28.416 454.392 28.7616 455.011 29.4384 cv
455.616 30.1296 455.933 31.0511 455.933 32.2176 cv
ef
464.237 31.9872 mo
464.237 36.48 li
462.941 36.48 li
462.941 35.2848 li
462.638 35.7744 462.264 36.12 461.832 36.336 cv
461.4 36.552 460.853 36.6672 460.219 36.6672 cv
459.413 36.6672 458.765 36.4512 458.29 36.0048 cv
457.814 35.5583 457.584 34.9536 457.584 34.1904 cv
457.584 33.312 457.872 32.6496 458.477 32.1888 cv
459.067 31.7424 459.946 31.512 461.126 31.512 cv
462.941 31.512 li
462.941 31.3824 li
462.941 30.792 462.739 30.3312 462.35 30 cv
461.962 29.6832 461.414 29.5104 460.709 29.5104 cv
460.248 29.5104 459.816 29.568 459.384 29.6832 cv
458.952 29.7984 458.549 29.9568 458.16 30.1584 cv
458.16 28.9632 li
458.621 28.7903 459.082 28.6464 459.528 28.56 cv
459.974 28.4736 460.406 28.416 460.838 28.416 cv
461.976 28.416 462.826 28.7184 463.387 29.3088 cv
463.949 29.8992 464.237 30.792 464.237 31.9872 cv
464.237 31.9872 li
cp
461.659 32.52 mo
460.608 32.52 459.888 32.6496 459.485 32.88 cv
459.082 33.1248 458.88 33.528 458.88 34.104 cv
458.88 34.5648 459.024 34.9391 459.326 35.1984 cv
459.629 35.472 460.046 35.6016 460.565 35.6016 cv
461.285 35.6016 461.861 35.3568 462.293 34.8384 cv
462.725 34.3344 462.941 33.6576 462.941 32.808 cv
462.941 32.52 li
461.659 32.52 li
ef
467.995 26.3712 mo
467.995 28.6031 li
470.659 28.6031 li
470.659 29.6112 li
467.995 29.6112 li
467.995 33.888 li
467.995 34.5359 468.082 34.9536 468.254 35.1263 cv
468.427 35.3136 468.787 35.4 469.334 35.4 cv
470.659 35.4 li
470.659 36.48 li
469.334 36.48 li
468.326 36.48 467.635 36.2928 467.261 35.9184 cv
466.886 35.544 466.699 34.8672 466.699 33.888 cv
466.699 29.6112 li
465.749 29.6112 li
465.749 28.6031 li
466.699 28.6031 li
466.699 26.3712 li
467.995 26.3712 li
467.995 26.3712 li
cp
ef
472.344 33.3696 mo
472.344 28.6031 li
473.64 28.6031 li
473.64 33.3264 li
473.64 34.0752 473.784 34.6224 474.072 34.9968 cv
474.36 35.3712 474.792 35.5583 475.382 35.5583 cv
476.074 35.5583 476.635 35.3424 477.038 34.896 cv
477.442 34.4496 477.643 33.8448 477.643 33.0672 cv
477.643 28.6031 li
478.939 28.6031 li
478.939 36.48 li
477.643 36.48 li
477.643 35.2704 li
477.326 35.7599 476.952 36.1056 476.549 36.336 cv
476.131 36.552 475.656 36.6672 475.109 36.6672 cv
474.202 36.6672 473.51 36.3936 473.05 35.832 cv
472.574 35.2848 472.344 34.464 472.344 33.3696 cv
472.344 33.3696 li
cp
ef
486.158 29.8128 mo
486.014 29.7264 485.856 29.6688 485.683 29.6255 cv
485.51 29.5968 485.323 29.568 485.122 29.568 cv
484.387 29.568 483.826 29.8128 483.437 30.288 cv
483.034 30.7632 482.846 31.44 482.846 32.3328 cv
482.846 36.48 li
481.55 36.48 li
481.55 28.6031 li
482.846 28.6031 li
482.846 29.8271 li
483.106 29.352 483.466 28.9919 483.898 28.7616 cv
484.33 28.5312 484.862 28.416 485.496 28.416 cv
485.582 28.416 485.683 28.4304 485.798 28.4304 cv
485.899 28.4448 486.014 28.4592 486.158 28.488 cv
486.158 29.8128 li
486.158 29.8128 li
cp
ef
492.797 31.8432 mo
492.782 31.1376 492.581 30.576 492.206 30.144 cv
491.818 29.7264 491.299 29.5104 490.666 29.5104 cv
489.946 29.5104 489.37 29.7264 488.938 30.1296 cv
488.506 30.5328 488.246 31.1088 488.189 31.8432 cv
492.797 31.8432 li
492.797 31.8432 li
cp
494.093 32.2176 mo
494.093 32.8512 li
488.146 32.8512 li
488.203 33.744 488.462 34.4352 488.952 34.896 cv
489.427 35.3568 490.09 35.5872 490.954 35.5872 cv
491.443 35.5872 491.933 35.5296 492.394 35.4144 cv
492.854 35.2992 493.33 35.112 493.79 34.8528 cv
493.79 36.0768 li
493.33 36.2784 492.854 36.4368 492.365 36.5232 cv
491.875 36.6096 491.371 36.6672 490.882 36.6672 cv
489.614 36.6672 488.621 36.3072 487.886 35.5872 cv
487.152 34.8672 486.792 33.8736 486.792 32.6208 cv
486.792 31.3392 487.138 30.3168 487.829 29.5536 cv
488.52 28.8047 489.47 28.416 490.651 28.416 cv
491.717 28.416 492.552 28.7616 493.171 29.4384 cv
493.776 30.1296 494.093 31.0511 494.093 32.2176 cv
ef
gsave
4 280 mo
576 280 li
576 0 li
4 0 li
4 280 li
cp
clp
497.011 32.5488 mo
497.011 33.4991 497.198 34.248 497.587 34.7952 cv
497.976 35.3424 498.523 35.6016 499.214 35.6016 cv
499.891 35.6016 500.424 35.3424 500.827 34.7952 cv
501.216 34.248 501.418 33.4991 501.418 32.5488 cv
501.418 31.5984 501.216 30.864 500.827 30.3168 cv
500.424 29.7696 499.891 29.496 499.214 29.496 cv
498.523 29.496 497.976 29.7696 497.587 30.3168 cv
497.198 30.864 497.011 31.5984 497.011 32.5488 cv
497.011 32.5488 li
cp
501.418 29.7984 mo
501.418 25.5359 li
502.714 25.5359 li
502.714 36.48 li
501.418 36.48 li
501.418 35.2992 li
501.144 35.7744 500.798 36.12 500.381 36.336 cv
499.963 36.552 499.474 36.6672 498.898 36.6672 cv
497.947 36.6672 497.17 36.2928 496.565 35.544 cv
495.96 34.7952 495.672 33.7872 495.672 32.5488 cv
495.672 31.3104 495.96 30.3168 496.565 29.5536 cv
497.17 28.8047 497.947 28.416 498.898 28.416 cv
499.474 28.416 499.963 28.5312 500.381 28.7616 cv
500.798 28.9919 501.144 29.3376 501.418 29.7984 cv
ef
1 lw
0 lj
[6 6 ] 0 dsh
326.74 57.3075 mo
355.54 57.3075 li
355.54 47.2275 li
326.74 47.2275 li
326.74 57.3075 li
326.74 57.3075 li
cp
.883665 .769161 0 0 cmyk
@
grestore
374.664 47.208 mo
374.664 48.5904 li
374.117 48.3312 373.613 48.144 373.138 48.0144 cv
372.648 47.8992 372.187 47.8271 371.755 47.8271 cv
370.978 47.8271 370.373 47.9856 369.955 48.2736 cv
369.538 48.576 369.336 49.008 369.336 49.5552 cv
369.336 50.016 369.466 50.376 369.754 50.6064 cv
370.027 50.8512 370.56 51.0384 371.338 51.1824 cv
372.202 51.3552 li
373.253 51.5568 374.03 51.9168 374.534 52.4208 cv
375.038 52.9391 375.298 53.616 375.298 54.4656 cv
375.298 55.488 374.952 56.2512 374.275 56.7696 cv
373.584 57.288 372.59 57.5472 371.28 57.5472 cv
370.776 57.5472 370.243 57.4896 369.682 57.3888 cv
369.12 57.288 368.544 57.1296 367.954 56.8992 cv
367.954 55.4304 li
368.53 55.7616 369.091 56.0063 369.638 56.1648 cv
370.186 56.3376 370.733 56.4096 371.28 56.4096 cv
372.086 56.4096 372.706 56.2512 373.152 55.9344 cv
373.584 55.6176 373.814 55.1712 373.814 54.5663 cv
373.814 54.048 373.656 53.6448 373.339 53.3568 cv
373.022 53.0688 372.504 52.8528 371.784 52.7088 cv
370.92 52.5359 li
369.854 52.3344 369.091 52.0032 368.616 51.5424 cv
368.141 51.0959 367.91 50.4768 367.91 49.6703 cv
367.91 48.7488 368.227 48.0144 368.89 47.4816 cv
369.538 46.9488 370.445 46.6752 371.597 46.6752 cv
372.086 46.6752 372.576 46.7184 373.094 46.8047 cv
373.598 46.8912 374.117 47.0352 374.664 47.208 cv
374.664 47.208 li
cp
ef
377.491 46.8624 mo
380.414 46.8624 li
382.445 46.8624 383.942 47.2944 384.893 48.1296 cv
385.843 48.9792 386.318 50.304 386.318 52.104 cv
386.318 53.9184 385.829 55.2432 384.878 56.0928 cv
383.928 56.9424 382.43 57.36 380.414 57.36 cv
377.491 57.36 li
377.491 46.8624 li
377.491 46.8624 li
cp
378.917 48.0287 mo
378.917 56.1936 li
380.63 56.1936 li
382.07 56.1936 383.136 55.8768 383.813 55.2144 cv
384.475 54.552 384.821 53.5152 384.821 52.104 cv
384.821 50.6927 384.475 49.6703 383.813 49.008 cv
383.136 48.36 382.07 48.0287 380.63 48.0287 cv
378.917 48.0287 li
ef
395.064 47.208 mo
395.064 48.5904 li
394.517 48.3312 394.013 48.144 393.538 48.0144 cv
393.048 47.8992 392.587 47.8271 392.155 47.8271 cv
391.378 47.8271 390.773 47.9856 390.355 48.2736 cv
389.938 48.576 389.736 49.008 389.736 49.5552 cv
389.736 50.016 389.866 50.376 390.154 50.6064 cv
390.427 50.8512 390.96 51.0384 391.738 51.1824 cv
392.602 51.3552 li
393.653 51.5568 394.43 51.9168 394.934 52.4208 cv
395.438 52.9391 395.698 53.616 395.698 54.4656 cv
395.698 55.488 395.352 56.2512 394.675 56.7696 cv
393.984 57.288 392.99 57.5472 391.68 57.5472 cv
391.176 57.5472 390.643 57.4896 390.082 57.3888 cv
389.52 57.288 388.944 57.1296 388.354 56.8992 cv
388.354 55.4304 li
388.93 55.7616 389.491 56.0063 390.038 56.1648 cv
390.586 56.3376 391.133 56.4096 391.68 56.4096 cv
392.486 56.4096 393.106 56.2512 393.552 55.9344 cv
393.984 55.6176 394.214 55.1712 394.214 54.5663 cv
394.214 54.048 394.056 53.6448 393.739 53.3568 cv
393.422 53.0688 392.904 52.8528 392.184 52.7088 cv
391.32 52.5359 li
390.254 52.3344 389.491 52.0032 389.016 51.5424 cv
388.541 51.0959 388.31 50.4768 388.31 49.6703 cv
388.31 48.7488 388.627 48.0144 389.29 47.4816 cv
389.938 46.9488 390.845 46.6752 391.997 46.6752 cv
392.486 46.6752 392.976 46.7184 393.494 46.8047 cv
393.998 46.8912 394.517 47.0352 395.064 47.208 cv
395.064 47.208 li
cp
ef
404.184 47.208 mo
404.184 48.5904 li
403.637 48.3312 403.133 48.144 402.658 48.0144 cv
402.168 47.8992 401.707 47.8271 401.275 47.8271 cv
400.498 47.8271 399.893 47.9856 399.475 48.2736 cv
399.058 48.576 398.856 49.008 398.856 49.5552 cv
398.856 50.016 398.986 50.376 399.274 50.6064 cv
399.547 50.8512 400.08 51.0384 400.858 51.1824 cv
401.722 51.3552 li
402.773 51.5568 403.55 51.9168 404.054 52.4208 cv
404.558 52.9391 404.818 53.616 404.818 54.4656 cv
404.818 55.488 404.472 56.2512 403.795 56.7696 cv
403.104 57.288 402.11 57.5472 400.8 57.5472 cv
400.296 57.5472 399.763 57.4896 399.202 57.3888 cv
398.64 57.288 398.064 57.1296 397.474 56.8992 cv
397.474 55.4304 li
398.05 55.7616 398.611 56.0063 399.158 56.1648 cv
399.706 56.3376 400.253 56.4096 400.8 56.4096 cv
401.606 56.4096 402.226 56.2512 402.672 55.9344 cv
403.104 55.6176 403.334 55.1712 403.334 54.5663 cv
403.334 54.048 403.176 53.6448 402.859 53.3568 cv
402.542 53.0688 402.024 52.8528 401.304 52.7088 cv
400.44 52.5359 li
399.374 52.3344 398.611 52.0032 398.136 51.5424 cv
397.661 51.0959 397.43 50.4768 397.43 49.6703 cv
397.43 48.7488 397.747 48.0144 398.41 47.4816 cv
399.058 46.9488 399.965 46.6752 401.117 46.6752 cv
401.606 46.6752 402.096 46.7184 402.614 46.8047 cv
403.118 46.8912 403.637 47.0352 404.184 47.208 cv
404.184 47.208 li
cp
ef
411.571 46.8624 mo
417.605 46.8624 li
417.605 48.0576 li
412.997 48.0576 li
412.997 51.1536 li
417.158 51.1536 li
417.158 52.3488 li
412.997 52.3488 li
412.997 57.36 li
411.571 57.36 li
411.571 46.8624 li
411.571 46.8624 li
cp
ef
425.117 52.7232 mo
425.102 52.0176 424.901 51.456 424.526 51.024 cv
424.138 50.6064 423.619 50.3904 422.986 50.3904 cv
422.266 50.3904 421.69 50.6064 421.258 51.0096 cv
420.826 51.4128 420.566 51.9888 420.509 52.7232 cv
425.117 52.7232 li
425.117 52.7232 li
cp
426.413 53.0976 mo
426.413 53.7312 li
420.466 53.7312 li
420.523 54.624 420.782 55.3152 421.272 55.776 cv
421.747 56.2368 422.41 56.4672 423.274 56.4672 cv
423.763 56.4672 424.253 56.4096 424.714 56.2944 cv
425.174 56.1792 425.65 55.992 426.11 55.7328 cv
426.11 56.9568 li
425.65 57.1584 425.174 57.3168 424.685 57.4032 cv
424.195 57.4896 423.691 57.5472 423.202 57.5472 cv
421.934 57.5472 420.941 57.1872 420.206 56.4672 cv
419.472 55.7472 419.112 54.7536 419.112 53.5008 cv
419.112 52.2192 419.458 51.1968 420.149 50.4336 cv
420.84 49.6848 421.79 49.296 422.971 49.296 cv
424.037 49.296 424.872 49.6416 425.491 50.3184 cv
426.096 51.0096 426.413 51.9312 426.413 53.0976 cv
ef
434.717 52.8672 mo
434.717 57.36 li
433.421 57.36 li
433.421 56.1648 li
433.118 56.6544 432.744 57 432.312 57.216 cv
431.88 57.4319 431.333 57.5472 430.699 57.5472 cv
429.893 57.5472 429.245 57.3312 428.77 56.8848 cv
428.294 56.4384 428.064 55.8336 428.064 55.0704 cv
428.064 54.192 428.352 53.5296 428.957 53.0688 cv
429.547 52.6224 430.426 52.392 431.606 52.392 cv
433.421 52.392 li
433.421 52.2624 li
433.421 51.672 433.219 51.2112 432.83 50.88 cv
432.442 50.5632 431.894 50.3904 431.189 50.3904 cv
430.728 50.3904 430.296 50.448 429.864 50.5632 cv
429.432 50.6784 429.029 50.8368 428.64 51.0384 cv
428.64 49.8432 li
429.101 49.6703 429.562 49.5264 430.008 49.44 cv
430.454 49.3536 430.886 49.296 431.318 49.296 cv
432.456 49.296 433.306 49.5984 433.867 50.1888 cv
434.429 50.7792 434.717 51.672 434.717 52.8672 cv
434.717 52.8672 li
cp
432.139 53.4 mo
431.088 53.4 430.368 53.5296 429.965 53.7599 cv
429.562 54.0048 429.36 54.408 429.36 54.984 cv
429.36 55.4448 429.504 55.8192 429.806 56.0784 cv
430.109 56.352 430.526 56.4816 431.045 56.4816 cv
431.765 56.4816 432.341 56.2368 432.773 55.7184 cv
433.205 55.2144 433.421 54.5376 433.421 53.688 cv
433.421 53.4 li
432.139 53.4 li
ef
438.715 47.2512 mo
438.715 49.4832 li
441.379 49.4832 li
441.379 50.4911 li
438.715 50.4911 li
438.715 54.768 li
438.715 55.416 438.802 55.8336 438.974 56.0063 cv
439.147 56.1936 439.507 56.28 440.054 56.28 cv
441.379 56.28 li
441.379 57.36 li
440.054 57.36 li
439.046 57.36 438.355 57.1728 437.981 56.7984 cv
437.606 56.424 437.419 55.7472 437.419 54.768 cv
437.419 50.4911 li
436.469 50.4911 li
436.469 49.4832 li
437.419 49.4832 li
437.419 47.2512 li
438.715 47.2512 li
438.715 47.2512 li
cp
ef
442.824 54.2496 mo
442.824 49.4832 li
444.12 49.4832 li
444.12 54.2064 li
444.12 54.9552 444.264 55.5024 444.552 55.8768 cv
444.84 56.2512 445.272 56.4384 445.862 56.4384 cv
446.554 56.4384 447.115 56.2224 447.518 55.776 cv
447.922 55.3296 448.123 54.7248 448.123 53.9472 cv
448.123 49.4832 li
449.419 49.4832 li
449.419 57.36 li
448.123 57.36 li
448.123 56.1504 li
447.806 56.64 447.432 56.9856 447.029 57.216 cv
446.611 57.4319 446.136 57.5472 445.589 57.5472 cv
444.682 57.5472 443.99 57.2736 443.53 56.712 cv
443.054 56.1648 442.824 55.344 442.824 54.2496 cv
442.824 54.2496 li
cp
ef
456.638 50.6927 mo
456.494 50.6064 456.336 50.5488 456.163 50.5056 cv
455.99 50.4768 455.803 50.448 455.602 50.448 cv
454.867 50.448 454.306 50.6927 453.917 51.168 cv
453.514 51.6432 453.326 52.32 453.326 53.2128 cv
453.326 57.36 li
452.03 57.36 li
452.03 49.4832 li
453.326 49.4832 li
453.326 50.7072 li
453.586 50.232 453.946 49.8719 454.378 49.6416 cv
454.81 49.4112 455.342 49.296 455.976 49.296 cv
456.062 49.296 456.163 49.3104 456.278 49.3104 cv
456.379 49.3248 456.494 49.3392 456.638 49.368 cv
456.638 50.6927 li
456.638 50.6927 li
cp
ef
463.517 52.7232 mo
463.502 52.0176 463.301 51.456 462.926 51.024 cv
462.538 50.6064 462.019 50.3904 461.386 50.3904 cv
460.666 50.3904 460.09 50.6064 459.658 51.0096 cv
459.226 51.4128 458.966 51.9888 458.909 52.7232 cv
463.517 52.7232 li
463.517 52.7232 li
cp
464.813 53.0976 mo
464.813 53.7312 li
458.866 53.7312 li
458.923 54.624 459.182 55.3152 459.672 55.776 cv
460.147 56.2368 460.81 56.4672 461.674 56.4672 cv
462.163 56.4672 462.653 56.4096 463.114 56.2944 cv
463.574 56.1792 464.05 55.992 464.51 55.7328 cv
464.51 56.9568 li
464.05 57.1584 463.574 57.3168 463.085 57.4032 cv
462.595 57.4896 462.091 57.5472 461.602 57.5472 cv
460.334 57.5472 459.341 57.1872 458.606 56.4672 cv
457.872 55.7472 457.512 54.7536 457.512 53.5008 cv
457.512 52.2192 457.858 51.1968 458.549 50.4336 cv
459.24 49.6848 460.19 49.296 461.371 49.296 cv
462.437 49.296 463.272 49.6416 463.891 50.3184 cv
464.496 51.0096 464.813 51.9312 464.813 53.0976 cv
ef
467.731 53.4288 mo
467.731 54.3792 467.918 55.128 468.307 55.6752 cv
468.696 56.2224 469.243 56.4816 469.934 56.4816 cv
470.611 56.4816 471.144 56.2224 471.547 55.6752 cv
471.936 55.128 472.138 54.3792 472.138 53.4288 cv
472.138 52.4784 471.936 51.744 471.547 51.1968 cv
471.144 50.6496 470.611 50.376 469.934 50.376 cv
469.243 50.376 468.696 50.6496 468.307 51.1968 cv
467.918 51.744 467.731 52.4784 467.731 53.4288 cv
467.731 53.4288 li
cp
472.138 50.6784 mo
472.138 46.416 li
473.434 46.416 li
473.434 57.36 li
472.138 57.36 li
472.138 56.1792 li
471.864 56.6544 471.518 57 471.101 57.216 cv
470.683 57.4319 470.194 57.5472 469.618 57.5472 cv
468.667 57.5472 467.89 57.1728 467.285 56.424 cv
466.68 55.6752 466.392 54.6672 466.392 53.4288 cv
466.392 52.1904 466.68 51.1968 467.285 50.4336 cv
467.89 49.6848 468.667 49.296 469.618 49.296 cv
470.194 49.296 470.683 49.4112 471.101 49.6416 cv
471.518 49.8719 471.864 50.2176 472.138 50.6784 cv
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 19.2.1%%For: (Brooke Simmons) ()%%Title: (BTot_histogram_bymorph_Lmatched_Simard_restg.eps)%%CreationDate: 7/27/16 2:22 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&GCMA.cRA^?!PUpUhO,6BK\d@D,U<N@#VCU(1VhkZqoAO!a(7<\.+c#%kIpSu"NDM)OsO7s/_am\YP5*fD"X?+s.-Zo@TRZ=%^'_nJ=5a^)ZIu7aLWNSjMOt%OJn17+L8-J#rSi.1?VXY6(:,&V[bJZFZ"CG$X27)Re^`L6)jCc6HBZ<WrL^.g@PF7?Cq3`Z?_/hr%jYa@am&m:[T7d_(\t@m+(?<D`3Lhc'D(#`5#Q"efdh]_#@,Z>)381Pf_3=S'[fc"##[ppEGJ.4#42=dE1ec>.4@[>BTm26LK-udp%4;+F,@6-l36Eq)J6II\*O+i1j814V5`(;Ek,3a>3*i"?"lH8r!0_q;WGKaGR>HcmhCs/4=AiX8]!'O%`d1K:7$S6as/2rL'DM#A(%=Q^3%"lg3i.=>cD!d:5?^*n7q;=mj6'"Wt=@^oBFn`6n,j?JL%l=;T?0US%aB%NXQ4+[;:OX0qE,nKmlKR$bGG-H8];&lq5DEXRB%5^iY1nm[,/M#O0&:L)ju^jJq$5Ub3A4X<42(#puuY,W$3RDAekd&:VB&(n5jGZHoQi;W)Drtd'fDtUkh#qCh5`V[p)AG*J#+C]^a%1?p5QZ_O4-4<B927qdB'*$I[k3(cVQlAG/]'MS`3@qd\&.U>nn/9VbfcqlW/F+&S.0qJA;pgdTo>O3]\$?QI'ZN!ZU8ulsHKD@5>%Mjk>K9n<c4p^(KgecGp0A7g@c$+;der<b>"$UPr3Y@@8/FdPB_U43jl#;T)qNBW2oJ'eN:"tDnXH%Phs"D7s1i-M$`([aZu8c%o0%\C$@9T[TsX$q_N\])oVKP&3R\;B5$-5bdHR$)IFdX8G2oajsui[O)8E,8'\gO2K:1JU8:D_S<o0/.DelBeY?9b@UH,IOc%^[3?4X%.h[E@+q[p-&h0/-R.3/;"8Y(\5N?bYG!$7M`T+0<r!#AoX[3'>.MUg1K`WeS'O[JP)4$T3OU-?H>__A%14BJ;(q1<j#@k]Kn4g&J%(c9q(-`dJcJtK7_Ukti\QU-Me-`dD!JtJ-BNYD1n8/(oS^E>u7'10Q`_N5p0n.X4Zs2([q-AW=V'B=kU+C4IMegZsE1Tl48b;#&4%(GV97-[l_-Na%S!Nn];n_j5@l`7;['?nFnkr.L/N%q;PY)=B6S(Y431EBT8kK&;:S_,'h6;MY,kIc?[2-h%f#K(QlTgl#9,0OHP`%Llml%fQ'`9\3@gt_d%u)0]+k(@*3KT@EWZ&0O>0UlRuLqqZlFPl8Zn=eA8UKe[Q=A#<uWK/DlOQbS0n,r.K28FXA%TfpqJ<c=%,`%\iCYjA;-4*fQ&Ml=;Em0i;+/Z*OcN"*TP+dK.Z84KVK!c*S05SA*E]9>`SjCQ=J1XdZ"&Co*.Q1UOQBp"`;<KQu&;$$C\s(8W\?O%h437.nd"%fA;J]VTpIbl$iL'0`,QF(/T?>X/(\);08>DBUaXMj_]]hG_uFBgQO&*25</SYJ&5RjcX[E=nIsk7rYLRRhniau0?+J9%Yo&6X`r=0CE/F'#s3'TqDrEAKB<i81pkeJVs!sB(DrEAK8+Q\a4bnFj5B4HthqTm_(XP[-$DDFL=GH`)P'Q\&b/L*oEfgjk^LS`/%".rFm(6#$WZ#Vi0rN'*2IH1<as-Gr;YXH67^FHo7/KVVTPQBPO%_!'M@k_oGO*_Pf*G8S_%&-dAXT?23lu0$ZPf-rQL]0Yj0up%X%9K,b.#ce5,P^d!bbIAU@!oK"Rq)635nQ6WWk2OcD#@F,)]GnjB_9W[1n-ldj$;.9!m=hYF^!2!.s2$U?.nmk\i7kI>pcJBX>6VdZ%BD;d^$>Uco-+4iP1JC/=_emFGLS(LRIud0p#uJfV3f87mZj*mt.u1mMHJj("V^@!D&+L?b:LliN[ijfFf1J(R@-#$f.!-0TJ_Yi/%a3V^=5s0t$-%Qhl&m,r;L,e\W(`mQNjqOm?e.T9MnDlTEJ0'J#?Z=1Jgg!Wpr5H?&QX6I6>`Wt+(F`6+]4IS*3!TW%-'hM:)Ps[V%=Gp^Pr>Wb^`mK[O7F5>904DE`+cXV&s3Z(Vj5_*$2"qGPV9g!:JWf4ACcRe5mSf3&/>LuZ/.Iu5=NagLnU/,u,1Glu`X^aZFb5f*%9K0&.q\)R7I#93V5RYap!F(=.M0$2GnrL0e^F`!W(bS5bSE,!TdpL<pf(L6B_:3ORA??#c%_o:B*48Wn+5":5ggnSq=JCpiQD'i/%rY"i:pC<*WPEVr[=hD`*MFo.q84DVq`,R@FkPJI9O^[K1*gT4jYa4KVFI(D(<`0p``U/Nj[Q06B[j]g,Z1UO$3R0t4ZP:Dumr1D+%Z35/=>=dlgDVk4tH9&$eHN;f=jW7g3"!7&$&>*(R3;iP5O.@;Hn44h$Qd[tEP)sqL^t&Vf`N=]5+,iIdh8=(7r^TqFOiNgKk[rpR%A<kf=.^1-)CPr<e%n8NM'ui[b.VM+C_UqaOHd:>%Te%C&]r4s'JHX@(IO#Q%>sWL1g;(lMS`f>b4(cZH=1KVJeqCJNXU+Gn_?]Je%2%42U7a'l[@U\lqP%Y0K$oC:dnk-!ES7R<>61;gRBnKAP\MbS@M5p7``uUscMKVLr'jU(@pjFu"U%PKe%#[86OWJ2D,E1_(O!!-o%XJei+-ic_)A=5j>_s1c;8SSBVij=Si>ICrWSG0)6CZoW79M<EITs]Y<Ur>Aa;,Wet]X=[T>"E<M2_Pd>'#NS&RJ"89gk^j$HXW`3%7Nt:'6kU%_9<j@g&E,6uiU`QGb/SPn\"L[Jj;%S$3G++#+4<lLAXX;GrT33#\/\*j.P"/=9u:15*steO%?ld;qZ_iYU)=9ULU\Lj%]eXI-cgr9.?Qth/HHUY>;:]sL`_W$ai'C>HeY9gkogP#^'(\\a$Y"!=g]3jr%)_fN`Bg3t=i`;u5AM;!@_%S>-cg)"9`B$m6/5S'%U?qn04GX9)+nso=PE"1O&BjmR^`VnZQh_MV+T69O`a]=U$UA(B]WWZ,q]`+]JRV:b05KP[.K<nJDpEVPX:Gp[HppGO&cWTnb`D@I%rud'<btF.8M$bhFh[TrLE,p\H0(<mVPpN".k8SDh0&g9$b/nX=l85<5,fh`@PkH>7;apU5;L.t[:/,'*etX;HAXFsi,SkERPrhM=%*L-7<o!jo@nW<dF=G4bm$8%"YnmY>Cd'P"J0t(G63>ZthI/AJ\nbU85++D89L2?d=IjF4j-VHdUi4'3V)P-t+d6e924,BoB9S+"-%#7eeJ,upZF[%+Uj]F>ZH%i2(Q9VALa`[riR09+#1WKP>Wi#t_U@se\X6uh^(bfXp+M\_;Wm(A#?;++b$EEQh]UZJH0="]F(>DQl^%qY:+M_N&1dM"DY0J4.k>2Mh;:NnPn=!l=U"Z<"h"F+Rs7k);jSK=',pjg\tu=c?!!b7PdG2bRUaa3O,2@Nm+YD8?0\+Z<)NiaL8\%R.r=pm7BsTN=tB,kV'nDKK7d%%Rs+=&tTbVmu"A!6-MdV44+[i(Kr/g<\=aYMh.cpoSH2N>-(GX$@ZKQo/(a<ZMe'@D/,K>UK!8g%F)S+m.6JD9.,gTlm4pctQ9:B/'t8mH>P&]pID,p&=i>_>oHVuNn8/m8AE/:r:+D2gE98hOk+X\;IJbuFe]dWu8W.SE@q/a_0Ed>=%ps$K*`lQ,?bA>[mP6W8.a\,9/^s?.d5/LRcl>f`Y@GLq^/o\4$>!g*\>b?k_(WLQTEH/6AnZ7EB-16+g#0hF/S//CgL<>EinhUg0%gYD.QMe0cR?q`s#$S;YO?'1'9EH,M/PnM+<+Vd:$$AnEW;]:V"]iW3mYt`3<4Rj&M5$M_YL-#_2\&*Ft\'&Tu4U*KM]i]dE1B'?b%BhrpL%GlVd2m,!gT_<1*[kO0fW$Kr4/bYj9_Q<L$g?NHjEotC-iT.!p)=?#!m,,q[W]BtX5?q8bZmY,'OVs)X!:ZJ]iucK'/kp<H%`IO@]iBm#\qT8]dJ%I]9=u/h1Fo8VRqJ3B=Da[uQ4ahRW`F(Q2Y0_52>^c;^-lE$Y#QS;Paf]CZie6!&!':`#<(.!sUOoF8+&RHp%3WO]%%@Gt$f$'XS=Bd?MBLg[CnIIN=:ttT`DD[WrAY5Ot\M`#6YO[UnC:rX/i1C(;+m8AOIJO>(`FAPc$oZSfkUOpF\'qCuom4Hl%<[d/$Ls&U,I+(@<_JMQ^Wk$!R*9(KZaO0+:*Id1$-nbK>,s7jiIgZaH-)L,?Lnoq)C"@"uB)i(J4rYCO_"J%b;PHZb`7)Xg5(]O/%-TM*.%bHWlFt%qW4_XqnT8aVMp-7<f7+7mIcMF!3`h6&nrG4D)1i^4a^l>d(mHJ"75qoj<D'!(%m2?[u90T!AJ/-*NE*qhsT>b>V%$J_f8s&l$;<sb)^'oW0GrF5Nh\dC7ubK6%$'PPgY)aFa7KtM/h8C9=blDcoG%j"E2g.dJkGB5*K].*OF&,:,H^ANLOs1+lFX1PFa%GOfJW*d8]"W"EN<!09<8do?BE!WF9h!J:MiF]m96/1*Up&;@7FKkZ_='1Nu.rbFRI5MR0F>'[ie>apc<fK'![m`bi?TF.Sf&4PS&%/FF(ns2R;-J7K0jJ?s+SFtR:^X<6AL"!N<3Ag>BV!V6j$h7]jJf&MTr@IhS:pN!M?`BKs8b\XfH9u)#<KiN1&1\cG%iWAU<[78Wu%@a%MH\.3p%Vub35V=8!h&$u_Ke7i9,qgT'BD%`da)aIbY9<8%L=R<T0nG-+]h?p2DY/[n\/,AkQPWQc#b#b5E0F'9D\GZlT#(6u<%CO?)n1p5C[[3ggr>HC?dak-l9>g3Y!s-_A8Ra`;Af@aQAQl$E_h4FNt/,BNF+4eV"V<\)MXB=I8_o0Bk`^T^La^JX?JDLt[o76'Z%.ZT!`00ib@#;tWC%pHRCqTo3"dJ1JX#2@+5oY92te$5hnV..A10fh^Taq']P6Cm9'AG//DU1J_ss/n?l7jE=*rF\%F9oVuf<rDD!%7)ef^q:guTrjV,OaLB]nl5q6MrU\pD$CI(UHEBKQE4l?k:OVfA_eG0$W&f=hIt/&[N*gqFB1<Q!9)W+@!l.Y*hep;OZ5\aR:NUJ9%ib,^;11l.M7\i[V)*T3HgbA7[a%Q[tZmKcP0$CUO)CK#r0f$]4EGI^iBtsTs-VDc%b:SLB388<dK7E:nE)cor43-]BlN&fUJof_F%eSGAWau*OnSl2)TB]U:;)]oTab]EmW_dr;II_]&_.pD9+$oSoed]=eE0TY&Z>Ehh!CKmsTCj`7&fY(N!`&B.@\JdnBn\HEV8p=8W%XM4FJH*+L2^mMJ3+,is#IGo;/$$3L_-JJjufAp]Ff7_hmaOF8fL!aA<\JhTDhu<?b1\h5sEGpr57YtJ\#2@senbn0-po]@(`F(R_%AF/u,17mm"=$kL9qdHZW&R"84[ic!h.oFoQ8Zm,U[J8;.A37JN5])neMkZ(QD"ru4.=%]!hei'KSTc::E%oKL*/@0k=R8NHk^Y2K%lC428N7MRMkX$,2:GMO2Zqs[;k)e2*?(dphd\;%LB!C!,#/HmjrW..Rj/_S6?_]:YoV<U%nZ0oB"8Zgq>OE:0JXM`P,dofJN!9#<%S1#'UX1nkn2W#jdbYhOqTP-Pbrna@!R_`sOR-dubE`-mAm2*gZk.+Z@^K>I%g%,G6.4ZZc1_OBS+BiE3k7$u)TT`Ok\4CAbbO_59%pRu'H#@9$-!EH5Qg^HY7AYH>?h==r1afW8n'><,H<KL:BWO;o#aT0s!m.!itmhce;Y@=1:/[sp6\(eLqD^)a;Ui]r^%2KUoL;QqQ%=:W>A5FX,q;djMYQ2]Y1,FQCB+LB"iKu1*.8>T2F`HodbUd[q^:gH@rFK6=A(fX9T0m&)Ge/A]$'=B\;MoR6*W`%g,W+_itaB'+c%;hq0PYO.",*n?9#9GWNfE&Dj0l.;p`fG7Z(R8pb:A\G+$Au`3FiK(YK7B2<Mlht]%pL%f]b^.Q[io8)m;<>W/2nKtZAcma58jIU9%&g#W"XuP>+C;*l4k+FW:p1qrr:oQJX_r4u^!HrpD<YSZn:?KoC;?^ks,6PCpCg!)Vb->`pRJCEkI(NO&4iL452hUX&"q31O#RKO,%=1S9Ibn&_pbC*f^e2&SiI2fsD8>J;!eSI;Ne;4TtVJSi8HoeV$$kG5BXGKY[1p1a("ZVS/N<l^r>:KWoUFDfP7O1T!X;M(S"J-5R%U@Br!B+NjT`Tc;\/4`5&TL#DDNJ%'R[[=(B'jUdmC-;=(4W1A'D#_OB6(T-T"OhiF/J.\uC(n`GAukM1&g)71:j\2bc?V1`K/le^%q"G:E-lSrW5**]M`ZthA;\G`KHuZN*`foqdosb>ceiQGX2t#1H??:1^>#E-#Vs#X=""MN&4G0MGYSsjS!%kr-^P"M\_;.NK-0.)/%?]nlmY"GhidAZP=qRCVa_F[Ti#i,W4ejKIV[Ta7"e4p((Dh,@ok'K,_!ujEAYJ7gL3(CiHhl>5S8T++aPX8TM_"ZRin?)<OkE_V:%M72'X-@K>_@.[Pp&0iG6p]Gouh82Cr&CFa+_N$WOD=I$P[_<=%0_3M$]EH33Q/P2L`eK')Pth5eV68Zk(q,l&(P"OtG.(U(>-VR'%4],`N)HX$eNlVT:A9k9pgu.L*!6$ltF1:!3@2R7XN.=)1<c'.c.i(skV&(Q8phKTM<KR<ZM:(_o#Y!r[7HGE/\>ES(bVTc*CQT"*%!DHP]T[Qai1j`<-"7=$OZCQEI7.YA$V'=?J+WI*)JqtnZ^Lm%^R:<kG()n_j3W\-$FN5QT$cW_M;7d$O*^J?GTO4Za$`qI*`.mb@%:<lj>XNc_&?kNI#n<B;E`JS#\fk.g-raj&SV:LA1)J[@q_YWZO'L&tN?_SC.Eigp`9QRF[li!YSj*%e4N;c\`9"</[-24.pF`tP&%ihdLVoRVHp$o[s0@-_O6*=Z,7'jQ(:ZFd?l(@E/!,e9j7[aTh;(jQ@Br,/t'<QS$l<JP*mio(;AC5XpgA">Y*B"cTkZ2sZA[ea0C%FRi>*N^B+->_O%O>KIH=I.FcF=3m)h<FH?lhXT-cZi/Zq]t(<FU31j:,qpf0Q3T:;&a_5OYDQL1OTZub#`qB^JTkdmlMS?cDtb47%NG\\OSa@b-S-=&eS+0g__H):WeF'O=C8B]>!!\DAlQ@(I2>F]SKCK2d(KQ'd!s_n6FUAZ<SS2/1fQT;Y]A?70N1P.._!l<YCc,db%K/d'6_\mA=@ge*X/4h6Uqc`Cbj+[3Z!XN(+^'DM1QV&R6Fol5@*;`cIS!:Udd(jV4d`/ei+O5OmW<GD7Td1=DipCSZ"kr%@ahmNU%JW[H*.ZE1;?Yb,LaT,/RX#)N,g$.]>lOQNQ@uB[/mY=u`'k#:*"t+.(]o&)=%EiVa8W]&l0NkFccVkCt_.pqXdF8R+lP6+lUM-7"%<;69CM5AR15uIk;,6r!L'#^?Af*%3a-M\r3@(EI]g`'=6[V]^;Xi*ZEX^*Kf2(TbdGrqX8J9/8iCQ4G^/f8DU49'0!cf#gJ$Uep4%[0"XV%g#]#9$@F0:Hj=\@+6JobQB.lhlMSeeORPkEHF2l/Fp5]Inpi^$1g"l$%e'c*ioFF#4b=X6'^^25LnFh+nUcs0hjPirl?#Z%lC^lQ/pnJfL$o8g_RD#-[Q'(=M3gM0CLP3\C:6GZlHnQmBOV*qbe[,*:1Bkr%#8BD*58G\<%b9)UZbcX[L42rQ;t^Do`.b=]uhi7%S,sK`JDhCbd.E/^mEqS$b!WZcE6(@cf-,D(]hHSLC($#sMF7r+<%'$SWZ^ocID$7/SHAU)B7Y*j6EM"2(FN&D@3IoJV1$"!POB0u%F?3M41op.WH!k,[q=`F2V&i;g#_I=K$%&WIOA.R<]D/ITp\&O,g"T<Gp.Bc)n%\l8K^5s8&8m8k+IkB&P:[QQQ^[p]rr<gdc8,,O%$@K*6nE4:6qYn/.?YoJp_]5`<Z]b`2O*qAY_qE?4Y7#_t37-""kGWP+IjWRhHn^l1^n4>+q=/$\J3QQfB.e?Lgjh%Q1PC1IMm\#J%^c,=%rd6QU.LpsR$bj5]-1aLC2K&`72fAf4>q4(,Nrf"h2)JS15PV\FMiU3$jhc]HKg23f:LE?BrTf,D#2g^IcI:5cK75"Jih0kF%n5:Yf(V\a)s$g<=RqZU38=I`R`I6#RXCp>)I)+@V4oT>9j\jr0"("(H91*LS[J8j^g5<B:i!3^/@O=4B$SpV'ZOg'H=:=!57I+`@%r9R5js8Hfk=IEtNE\mTQ4Sj@WFG]MK"4Li8_tAf,#!Ys$_p3W*@QVn!J&)XaV,df)`aX[Mp@Qa"n2>N="3>T>IXoK1)->F[JA'Fu%K9Fr@d+Tn2QMc.m'+;N3r)>!"H[3[qN&10T.:<Iup,N$.^E9%VHCcV>f3NSHrtbFScP'f,p:!!(MaU-eg&uF#iJP\ugZQ>^jna=2%^+S$+OiZpg;jaD]#uBfg:1\o2USt(i0/k(@l[JKp^Oc4*/`B:iQmg.OeP.7>p1@B[g%T`(Z:1*uBn(-.bsY2X?fcYndJ0+7DSJ<-%kjk!bP-sF)=kcuHV'5*ZkAGX40@5nIT"H_*s&uL`CCZO[^W8$Zq*ipoN(*p(Y@*A.eL8a+rXRJrI")5Pf@RS,SsXip-2O[*UDTUN%>At!l0q[?.r:7N)Mtsus[(K%O?iGsopg:ntU3qUt9O%kp\GAQ(`TIeo=f+FqR@>45VjZp&Qi#T4\/O11_OZLpOc6&a"Z9DAFhYb#%QEkQP,QE`cq\Gdif(C&976W-SKUjgOh\1[^>AOjOg+t!j;4tMo<&4qnhiT$3KJTrZ-![;?RW..2rIj@jS0tt?Nt1,q/,^%YU!H.1%^1SmH>dj&,C)`]T6-IPG"SY\(,&G$.+X179#8*g/$k^\>"c7Ia<$`/Q`!;DENBe!d.Jn1N8>gBp7&H1E-F,/E6f\pK,#NTmoSJa%%YnH0LDjI?U2K)!c\Zl^T^3u$?%r?ZgOn#r;Q9A+jmYA=jdB;;ZLaTM*7!/,eAtlp2QAClVC'q2XFe>DHa8P"Wpj<KsM.,S@9oQ\'%/+GJlf88a<YTr:RZ:ZY]]jG7)oN-k+dIT#ro?pVp;&elHQ;.A(CsQ>PB'6PuAG-]mUtN5bI@A9i6.-aKmZo2h3W,)N0uk1BV`C/I%]p[?0_6l;HoR>&=ksO31rjWE*C[\Zb\c,WHR[`?LOSN=)^G8%@3fiDE$/iJX(1qX&:%Z]J-,BGDXO61`'*,8DCu3F+<icM0ll8e5%Mn.)7/bW"QC2qLQcPBkL;RK?;?Ha%j#<eC*Ej2rVIjVo]fnZ199<iKcZrGdjfi!<kV_"sZqiKq0-fq],/1u_>4h`XT#-@o9R=)K1%Q65tsa(2NX*XYihet2cIR[]]uX2A0:[X(+e;_+9KrNV*6Vkl9Mf)N.TD`<?W:o#)^C,"hWhKb^1ed(Y%AUX8".b;'oVe$ko/?dX.%]A'<-rjgih2nOt)7O7^WPKd_.2X33HhXP3Q)M=;,ZHIN0f+!)\Q7'H$[`\5kC:h)P\SUZ35ATSQG?rtD@fC-^s3)[qTDiKH[eUgn%mDO5\Z9.4/Hb81Lgt4tkF4-Xn;6T][/E\kCm$1-)epc5AYO%<nDp&'"?Q%Q&j=FjASqLJ<X5^JC^A#10*VSm,cf(>r\rKVMh=!nk%-f5p>gNCS7CUV9Delt2qGb-oSNfX/2cLDY6GoY"RXmaoeZPd0N*9e0roRFilc:C'\E2J(n4(kO_loOTc<HLF-g32Z6gL0(^he_T'%7@oGtGPPILbE8EU>_.L)jbhXTBijG,lZZ?XMd'9+59IMK2hbnrkF/o'c-hXQMsGR!$bL8p?]Wr[J$ld2n&8XXVAbo8X$Q'iI;`I'%gqECA_[WIVDsmGfrRJScpKp'9fCun4Nii2MACWg7'L0\m:W$CAGb4B8N+ZPTg,qTD0u%@6IYaG/?>&/YpX8/,_gCcT^NrQ-o$#i.%D(XW$HRn;#I0N@$j`(4c1Tqk_5+aFonO4,*S1iLhIJ2JL^=L"npat_,I!`U!c2A/Ohu<M,oR$/4GQ*DH\F=./)h>nWgMoFS48!Bi%IrP9aoe12`Mh(UMGTH9:4:D=sYpCA<m&M4ZAmuPb]KG"t"FqVL"2Ct!+mF+2Y0#UcAPQjSK/._YCK\a(GO_(@h?UsZ$K.as2.mr$%<S26oW)VM/V.p,'Nd=l!Bkg0Rf$p_RlHlus=cT@X%M,+:QPT41iM/neh>R`jVGpFh[r-0g?,cLe(^[`:K8&gX;m7"]hZVisenjiR%rZ)B7T:;Xu((0C8Sl"]5C(K.m4Q]JlD;Bmm4mP#5%9g5LceQ2Aa.K-hE2?C8KqAE@=*Wg'-H!T)G;S<&k;/5;oi[9=o7;)GnY+d"%$l@2Xj>Yr%8)8*W82T`Q_is^B+1L'>-V_p^@qP+gDT?^4\SFCLY,g)Im'_ud`Eq!77Vm7;rJ=aI=ZT;RDHlYD]sERQQ_rC)c\WD#%HgKIUE6ik)M+$#j!1T7Q,^P[=-8Bj@'hu-4oldT8L'j2dZ<23bPE3]WH?/q2j%/SBjRY7n["PWhKqI%@CHAJ$%q9I[leen4c]g*3%/#:V]Yq+?A9Ll(2a*O6/gk:;oDrm9VVi&CdFQ:qX9D;f]5jtU0Z].-.o+gDUFG"kb1cP).Al/1:1X'GBcN]i'5W0Df3jNV#NQ@-H%o1b8?Gb=/NK@a8/2"#eTT"go4E^,T#2".rGs5`57qdobM6SeIuI)V9+0I)Y#<q&''_*X0bV[MnJm\]J2XE9?NmXAE"2B1E1:"/Pa%^->D7`QdRO]+hKIB;L""m4(94&\6?6^$M")cTg0)1,+]S)jC(rH.^nh.n%7>We>f*O%R[I!*C`>[aACBfAg>?AGil4/[h$l[6#t:%X%W3H]B4OS:"OD<f2(euF]>=<`%0&kCJQm,dM%Q%VYrK&^R96ll!%flFaKU(q<6Tt9EoKE05%o.1WK(PWBQk3g$3EEc<[&c?@VBJ%'[aHacgle%a/9f'pQJAc%8ZVCg;l]TYDq_LV9rCO^D37;]5k2[r#k7dX*O/Nrg)],(-N[?>.)T/^=D+hm-]`)YPimN]JeY+j%c)c%G5pZ\\/q/k(AX$ur^7hhYs@G[fm()B#:B/BFsZW3Ck"9IRn(?nk';nKB!*4[$"rl"HhTCFEfW8IVu5jtip!;1]mjK4POhQE,=QbC%VWk_<QbE%_m)le)-JNV0qs3MB-"\qt1LKBE2c>)(kr(]MAG:G"2sPZPXjLJFrFso2J#-X.`*i<3P*jfV09=u.qINfMeR,;ZXo%cL%q#0_DrYVNi>cA>*<j9hThVO!VoK2U2\!q4&a[Tb7rcI&#^TS^qd>uWs@ej[M04,g-W;ER_IsNU;CJHA5+*FKQ:KOL's"(7Mq<,fa%DD\TKL2V]<[duV+agToUIB@WV9Koge_p5d@)D^a>_^O*gF\K5@HV;&4f!i''39'o9);gKGB"[KC\gF*i1-B9I?Lj:K+o1UBXT"6o%Ra9ggfDI-<r!q/kg39l?msiZmCLS3p?R;VP^p5b%bSb".H?1BFpJ6Xtfr@mShWI\126-V^h`T)Sc$(`sO4tK2H)I$fcF6$-_;`%J%+'\C2e7<:]0%8#1FaL[sTZ]8ELGS@#PoS<.C(qdhCN%_;>MiD4cg0gLID)>rVIe4kpHLTP%rl*brPh%MiSWhP^s!?Us+JMjh`FNh%*Na-`[]fK+8b8&aL&#Hqjf6DaaR-fNPIpd&2Zkl#S2;.M4H-0EkEAFI_LRaMHp@n+ATMF[!.6DJU,YO6Ur/g%:SooVO9*[uc]adb%K('^"]"UrCq1<tm)_+A_1QT.qnLIq6="Or^61Km"V>4$CPBr$Y$!4@",('F3"7S$.l1m4+a'[hZG<,gpT3oB@hC%$1pT@^GI,l;B%##[T366@N]Y5?S3hVNh'($D8ao.qE2a+?$"Y?\eHq``3hk];h*$`.CA5:Mt9$o"KpS9NGlakk%HkudWTfjA(#KK:FAm=d+*P^AJQ%<%^&&gpuX+`=fO!7iL;&-B;M$d+PT7^6gQCGXhZjUacS@PmD;X*%"psq1<SQnhWh*92&O1qZ+Cm5ssLLLl?GgCAe_M1>*41>N4I9%U`F/j;-(d\fZ#C_`_ua85:[*q1[Gi:1?r(u8T$W6gELf6#"!1N<.Rj'9j9QD]lsPH&%kFV:,IZRA)7U]/=<cap7?A[YR;J&OG;<s%m?JU<&*CPiD9J#][)=Gncg\,b6Rj;YLqL+EOB*rk@GjQlkr&"B[<-^HJ45UOqii=r.(nCb+n[*NTkbC=&W<LWdKn$X67`CZW:rWE%o9#mo;KMX]AmGS(/L@3'q.ir07;A_f]b8ac"^4:,0j1J04_77/^JAt1E<uFuZp*\Pa"kITD)iRA.DisqC67Z_V?eU^a^IcpX09`o%Z.":q?&,-gH4TE@:Hi?cRjtY21:.,28:sT>e<#]XNu6DI7bT9$/\dGHSU_FLQos(SR#[K_OB+10ML&,h)KPL5ai.1G&ZN<'!:tXW%>&gb&hWIn#7P(ue/=]R'g?Xsap#Dft'[S$j>Ht'louZht&S^>jekr9nmN_XGT9e?rAVnj&>pe=WOnET8>5&'"ec(`\eEBA^ZsIO\%ZUfF,Vi9&;f^F;%O9-:5e,#4Tlc]1(1=DV:+05-*0h%n_`MBMke7?2as),Kl["_mMA@qiQ=%7KTr2>t*)+"r"@r56[OFhqDU2AdV%*^A2:(<I'^&Q_G*pK8QXI<SQq.BkLsO473qerFh"hl%^3,G0CP]F*)Mk;aJk$4*WQ-E$OUqtQkBoZ-l3c`81:MidC[:QH,d+CjQR%dqkV[28"eTrqP^N<KXF3)<\IIdQ@$+<%fGk:r_S-qF$a`]DJ$0;MJo\/1f4Xcm;U/:Y]4_@\a+tXs,!BhSh@7@.qD<$.4&0O>^%_%hiCYo$]q5&q+-]OpUi'*H/'u=CAW<7Ij(U7)kHFp25u.O+A7^G$:O/@1kcA\2prC`EqYek5CSPJj",HZUqe;^[c+2qls["od$cB<%8kn9_PDV5(+k".LdYQ/<l;akbkm\e'9$mCr'Hr2/P.:80B`2)38ooqJo2MndLN:2jTBR7'De/OI<=kMF]-T`j<^U"=59eR'3tWGc%2p-&o>X3#OiJC_e",,WNVG`;aMpcaSKZam\jd-ZacN\)_H>)5D11^>,'2g@*OnJ6]"I5El$KVH^Nd-S`]j2hOUY:?(BqK2XjuZ_F%i5<3Ra`b]kW4`)o-Qf[=::8M(q*b/WPtS:e''RN1LpH,tQE!Q#Sqn(5Pq!\']cfJp^5Q60SU@lcEu`41b8]M`Uf:0;]1'G9U@2in%5NI1c`@WST3;++6hg`AQ.W<)@acE?1:ouQIp*9OG8njmu[.rId@?pD7PDXk<G:KFV$^J2NPgrC\eEssF7[7JY2:\)C1R5Gi/unYe%CKE+tJ#j]Tf=MhVNmZSsiGdTqT?7IP1<umfVme\'?d5HfWSI'l]*30p](o2U%Ct>GKt4(qn(#S<4kIg;K;c08F$Hlb5%)dd)s@"D%P@&5IfQsAm)k1MU<dL7r=_fIUS09E(0H&$!%I>'gnma$#6^,^Q9Bk.@Srr,$hENJ(npt!UGceYf?i.2^?u(?2T*VbLkWn#"bn<fr%Si2L._/9JF@Oh\N6[&3;\c[oWf/5d*[01*@TaPP,\HF6@M3c(^1M5@'CAGB]:@h49mR+?$ddYb']-c+O841(n3`:$E*0;<IUDT&X%/3i:c<KI:&\2h/?W$2,h5[*]s-0,!WDRTmBR;KgIjcK`n87U1HG?Rd_81P&SHd,;?dSS\5Z3b34r?p].7>dm8"Y#g5JsjNG1=B"f%(!Vo[BI+'nd],jcgd)Z(S2lN3Ujs3eg5.l==Q@,rNYM=7WpDUrTL[F3U\4VZ="O_3M]R:VjZK5B%pBgYB$q7/cs,=.4]`$CK@U,"%r:Pk&66oFanfH$(*NoWIq?IOVjSrZK_JrW'pakNTU:gEE/))_Y:VfMV2I_+2oW00k#>lm%h6O4mo:RbocAE&E7"5lYg!Bujc=cBH%N()+SgJ`b]a"j[5iOd49_5>@R$iIBdfT/>--oh%.(`fRQ>,4dZgBrtYYQTlQS1`LI&+A<mEsMU?S2h?5!"rCq0Mp!fHseuag41H$%5<pJMA50[5HkhnnGtVKA_=Ed&"U9\6.q\Y7!7T=#9-9Ud/(3#n"T$JIGsEPQnK=D).J+_OZ1%>]YJ5k!,e!5f7O/@i@\MdCq:,Cr%Ys(iidW6\?e:f(1Q%@p>,[031/F8YY7U*/$\\aN2/m76OAaUGo]Je[+\.:R&-`2VU-V5fXSa@5AAk>^XIsk^NHJXVa!DbiYDmCD4%)^S$E70J3\ZGcCFlprVV['JlNWO@S!#dE^[KB4*\\gm3Po[].=V:]`;CF,SI.$0agDX.Kt1YH<W8P&GUZq8.WPEt*thRK^Iauli6%Q6r*TE$S7ka&FJqqaZL5D!0-u"ITsN9-u`6N8WG%<0m-uX^1(iMe*<=<&&=u`q7eOBgBjPpCq"HLR2O6^JP+lgo:ES"XP(LV0YXK%%eOX0ru.P58a@Wc5A3h1L7i9"IG*L>J?O1[j_^1?Z5ff*.+@Y^4Bc8&iX!1hLVaS1nMl>Q-l[\#W=>)Bo&cLA8SD]ZC7.T"A`Qq/%s/JCro3TNH'7(I99\Ledhh*PL`u+1u:>>Ds7km8/GH3VU.Jf!$O&>,sMTi(EXcs;hLAQ1"Ta"OfeU[B>GScUm_CB(sSBtbHC?X/b%&tFf27a_$upl0<hG]-@%V3<gZU+o[USS)@"!;r?k2'!'_NmBBH5ol<[M#N$MCs[[C$nu_m1[-<=6N(p]0^4+^h_(&!495*:q!DCH%@lf(p0gpI:S1b]=R*;9Fb:to\`Pl8/l!N,^Q-OS<</m!p3u33RCb;KcrN8`tH7anQH%<'7eX<G7*>:NeMS9-7BPtPG<`\/tb3^ns%AX?"bITK7PTJ_"!5DqW"dlrsZGPZd+@0C^V<6`8lh:,Mr[0R3r)/4u"(!pe'>^br3l*GZ0WqNA7-JRM70_)2+7.&E,NR:L8Ar)a0%fi\ppE[(VE[s,YX$/o^ISt?q*!eZYU"HoF4`.rWqY)$T3LRNhme7<HPFN165-qTVG(8D(!]'JKDj_C,:!6Fa2e;P=HD>JDsLD##c%QD9kNk:+J`2RMTu^Jnr(cJjk)kC:VjTPlog"lIa1XA`\*%V@hg[pN-D0\MIrQDTNi0ag9un`3&L*NA$2Ak<`mc]2HI'jofg<Es*u%VAieJ=qbMSOU-eU/7Eh!1!_oiabod?*XWg>!sO"%!<&!1*0Co!j304!ng9ag4Pm'#Ahk"W#[69'j>l0.XSXpV94rZ261Qa1'SFqr%dRh%7AhURUL>tJWnHCZpHs@(J-!kX;Mq=n#Z:-e%+EaM:M:PGa8d@.J2F>E2DNCNh1O[m\S(j]IB"Wh[$<?5FdLH?$4^ka,n.lIc%lr^5%gbdpqDf2Dhi+`%NGtPWmO`MeiRp5^XB.t5UQLi$X+W^;F"IX)[OtN#jd"qrl,\+:gj4t"G!3emMd(q'64,6gj3Yc!;E^r1;%l&7t@$g5ba%!<&1g#<Pp`I`"3nBAGmVcfg<W_nIfqo&.60iaLi;RDa#AA$BI=$^5A]N%m;%)c?N0Q#o-A<W_8;!5jX@B[531+::\%I/7g;8$tg+9cV">>_FSh%s&L+T7PR\%#fQ>R/`+2F<fUYqrr,A:+<f9B<Nup('Xc&c+?^lDIC(%Ma#/3pf(BV[aR^sThH((<6M"e%WCtkiZY89"_LNS<JL_s+Sj`>;Cl8Mp"h9gfH14uQ%=h?\BR!%cYq&?FfMNDYfi*KBl/:7+%i=6](XW,uh%-M@V@1G#%FKo^p*V5I%Qk0/H"B6cAE$i<mUc9eaLhnM^Qq(p`Lg<&p*s'2JOi/mA!6;&GSFa8PS%?Bk,9:3'cW'u[ePt.l%=2XBNaQD.Z1?t0>Q@ITaI8'V%foFJ9%n^GgfDS<[UHP))i(BbNPAY,5[4o12<*aiN.+5A`LNDl!#RlEZ:i!5HlbYBfn]7LcJB<A5(984j6;aQ1!=%D<7m7h$b]O#/%)P("gRdkNm0B(g'WUF$K]lCrb+TSD(h^a\?.PY$2lpUk[go$AsI#1^:@(s7o-jJV"5Ph#]LqC!;&>@[R#O96SiUl)*WhZ9]=K#V9%.'rC;d84=(9K;!;C\_Y2E#q#t:tYtR!"F50EV"ULbu;J;$rnO:E2l](&M$Q_$E:K1"ss^*HFelOIK]"Nm8e'?dV[7-JsNO(E\*s@%P:!&5<S3WY,@77qlD\I:f@::8X)Fn7CQ_44,]QJ*ohq6SdJ7\+-QA@^4"$!*P>ruE4fr-a]Q4P70nm;VEr,C`WB:`?P]B@T0OG!u%cJ6M)L+*BXXO/[kXkl<N3^RXF6:0j^B)=;8L3sN+8<S<Jc=RcXMR!c%8t0`&/7P$oh&)!;U`L;;.i6qnZ5A[*/Z/$IQuZP2SCp(k%flH?>['Jm(qF/SP?Rj*ufoP]6\lD'7F=,aREp,WS)0DU3TsJe'`1*\81[)cT"ItZCVk$+$A.+uq6RP4#O?k8J3IFj;STY4.3*YmB%*'3Hq3fRslUN5S*1[)d1K'24ABkPdaZNX.NU!q;[_kYl[3HWsmFAS,RO[H%;6&0/7/r*35+^$&WNK4HdX)E<5SU(LkYCS#<M"H9g%l##4i>AH=`GS`YC*m$Wl1[JmSlM].D7!`'tU\9kOYOT:AV'2]Lpr)9Zag5dnGFD+#>Zs^DReuW>f(_(Pl0ZAdThh79@N]a;0R`N5%eJV'LCT!$K-5jsRe;IRG1he3-PE/G,42TQrP[O46RF+CKpuY=u.gV_L(t]6p3bN;)lmX+;cAks,dbZN1dM-o]kU*n^]+m_B^(6F`%NfFqu&leKBRjI;F],BK5U1u7\@h^hRS2:\+P&)sBbK(I#oT3D&>R2#nf#`:rB![6a?8"WS36?8Mm[Nl268?GY+cfDLL%2+W)2pl0%)Ne>tQp`6>-4Lq]:Y.*+P>iZ/9%)N9B;DE(O)1Pl1dcOrZ(7IJEC:l*a8W#r'9,+<M<C_&a6+3CXjg:u-E9WkE`ZFW%t$f]%t*u"%O"BVh+.L<K[g1c7*hVF%EH0;$&UAc0#c=1ITH+X0^iU3*N4',=OZViDk!p)aHV2(.^slF=:>hL7qTX""$_@Go)Yh:l91h*'U$O.t%lkr1)CfMPJ4j4`UPhfHUS;+FJ!<E!cDmG/*S'n^ihc6MpT#*Zn"-^E(7OS4'n=9^_dYsl*`dU#U$%VZ6<&bdb3d]t8>)anUM/k(/%,k>?D#:h#;dkK<W4%4:WlFnl4%*'16@cMc;EX0LOMWY$I$HWQ7fK1RR?>49<G8;'A<p]_WH`+f&;3$pkO&V6P0Q\?N[W%)95+Mg:%*NPs,&LH=#FL".);cD4k6.J\a1`l/.Ydu=O6P<qrVfl<i7jE(K\r$SX5X)A.-j'75EKV[=-\<g+lDTMt7[)bjLs*l'<^_[,ZccIG%Nf2!"AkCGGDe^Y\aM=%9F!<AkN%JtnNlV@*$)^d;*[eBM#,_nha%'Z>kPNGlZQh5U[#e47GDG]F1kQAXXn.cR)VV_6)46'mP\$Y^%&<XLX&<S[bbKj+Ja;@OpiHuK`SYOVS1j;LoABlrsA#5BEC<0Pl<S\d;9MT'V?DeH:k6;0<Y(E(>W.EGq"6YEp$9MnNp@K7Ic"0j<%@=1aO6>m<N?-l4dK3K-#A..\be`e#UPC^A-,Pe+'MMj5328X6#2Md1!UD<or9!Xobb-pR9)sNHfUOm.D_B@RcV8)eEE^$"80#hJ@%>rj(qh"/RFjhp?)fOaX4n4@rsN4@p,B]m8Nhk>?k5+K\i(1kEi3Zh,k7*pkQ_eJIli`s_9jMQgm1/^rd$g#:b4n/$$\4c#&WFU!T%3$1nB/uH(Y;sCA:OBE)!31[bDLA+(;:m<]ld_MGF!0"XBmK7pI%BNY\\cJOrOAD3^-P2MpS\`@Mn00j?ag5l#Pi=A&cIk5O#R[Vc%U9RV'89<:@B@SegQ1i!4g@5Rkn[)N'L8DA22?WK`4p,QP46o^F/oLLHcoX,(psrurY?Z/@m?m1iAB1n4FAd7"]V)X>iFkOC>imkN%"@qos)$@3H"Qr<5<#ik<(K&)1l<(!6R[34sld!>/^j;oPGr/<4"S<`$.Y?!,SkuIuU^kTZWWs@[A`3/+1K'huR?@>nR>fY)h[<tj%;J+fT1/\.CMe&VM39OqM67A2A8;5`4qStkEp@YEIDZL$h3&K14-6qc73P[m"WaVM[40F8hN$oS3llA5]WGpiobfGec.?R)tmJ:H]%?Qp4[cq626mZ40\SNO)<.MY_W%&-Cl_VlLI3pDc>Vo#,`<'Rb1&qfe^iE"J_+V.Ua%#cJr8N03(T*Wd#Q);pCntUn75#;]0lrS0-%ki`"%CtDG0^H98el,aGRemDZYbsmI[C^-2EZqfe<VEBB`4LMh'rT%QnP@Q%h9-lp3$X.lfWo1,EdE*F:pr(dY4!1P$_E7^1_b8DC%-6'T_]MH%UP8)t-5!6^j`7sb_nOLIpR#Aau/Qf>Ephot;1=2R^ftf)ESr9)^7@^1*`Sk&QdC`A?m+)N*@P1=EcF+5K>'tUq1tg,6%Zp)^a1@.?12m$W"&"b=LFK)\UdYJ('7B'qPI:sq=&RfgXn5=*EC%1UU54uRpCZ8X['".W'K*\IC\i=rbZtb>$Gj<R<]/OIR?p1W&%[r50!<-fYDHW<5Hc8H2TL2'6a)FuAh6M!CTmi.07;W>q6GuA.U="D26>cuak]aE<?LX;f7>UJ<VCoC[h16M"h<NBhOV?d88R=0Q;%5):0+/3'AOI#M!0n@$pt)c3qOa80"X%m8L1I4=&%09<''PhLcYZ.c,\Ss5uslM"Cl'p!*1h/fEag7s!bbMhHI;QT?"S)gA>g<4Zn%?g8suV62TkKki]mk@?peOl"]arf&.cI=3#8RE;XoduV?dEJ^28IJW]Pl!62VKKc6=e4rb)20.$!;5W[7`*chWaKKpRbn-Mc0i.HM%kkH%Q`Nn`mVADbB@16\q.Eqr/UMsjWdjaD,l(8K-Cc7h^9[I=^F>f[f/fiH.b@]3P8WN&pflX5kl\fB(.;^=jk(F:UflVOe'JGYE%VmK3o]_6YH2P%3NEA!gYb/gR8FNSC&Qd2I,cPa9(2P%[*Y0P7g'5bDFF6OB?7F0,R;]:TgOs&^0ZK[UB,[.=a:c=kB/tKk=3G2sQ%.J4d4-KN.Ol'+H</%c\BVGkX6;ofh:1Rmf3NZFH\Vo,bIA^`*idN-Fa"5.cg\TB;]<bGsl.=%NUh!4L;l')U:o\P6oACE!0QCrNb%7C26S!:5$<f+YLTPknO*A`Vog3cP[M9.Lq@bDFnob4A5*G+=po-Xm;K8ucNESXN9N7$-U@+uQ842X8Km+BmYuC_)\QS4-^"6RtH]%CVrpW9`QK;24g93Uh_QXhSgf/X4-Sk/p(H+>2cnN-1A\fT6,"['aZ=H.&u/4Vje*59Ea:A_g48h\rCjg<.1uNghEs7]:@^m[#.R=%f\HQIAON'u22Rf2)RM1:I#8cM0WHq'TJ\nD87t=Lneoj6mNZug9]`]6ks]eDk,\mZ@^Z.g#$l8%fA)dQ7#]I+jpo?_oId^2Qq2FP%e$IB3k"_GcWHus_nMDPWC[R4A.%Y\.SROuaIaQu6\OqY/g`;mfY&r(I$(F)n\0/A@rR>nkDD.AiZ+7QlC#-"#')-&%o%\!K`Sbr,%l6aq.m6*RPY;P\<Z`hH\<SdO&hl3>s6(Rj!%\m0@k\`GPm;9j$O[7hl%8!kj%9nu!&=<!-U'rjJ,QjT^/p>`j%h-]%:@-E]SIQPV%dZ0,*Yo=&Gr0Q(GKl[4>Q8-0n,9*<bA3O=-.0Mr!333J#D\12K6_<Sg/dUVc%6T.BVQfob_?MVe8&3X#(,Tt4]0*@lBAu$EXSnRN%XsFr]r;)fu](/q=^H:5u%=ktu))K[mV96sS$F003qd-[rQ@QGf\:_AF&&$N--.>EKYAg^ejL!-qVb>lSpiO%c%%h'e$n(=hB76$E%Y+GIQ3QI[%TP3cY49j+,VZ^BeVqkB*RD2!H)I%rVgT(Yq6m7]ON"o[WHQB+0Gc$SDE'a^,KH'=no.)n8X.]gKjmK8%]A_&&2h(0(%GG<;O`B3LJbe-f`iU3M2nrD!C;Rn7F>W%c%E2RtF^Oc:o@lN22e:G^TCJVP#cKM7iQ+,YW'>*0Oc'2Ao6jr%3[?Og6hC(R7d!0"O%ANoOJFOeUUM1OFih98AA]D\7@Xq2R?d4FZJ<s[)sM7!Tr)Cs-0XF8Y^(G6*9b%("s%lW#V\h6eF_oU;o%QE"Tr2h@6!DG5NV0qa$%L)M,$`7.4+9ratUEZ1-BP1i_qGfQE-B6<,CJ5$Jh(R._MQ*h5)RiB^H"%c0l1j?^Y]X#js:Z1@+8sM+[iUgpPA^ki2APiWX.*XTG%@i`H1?>l*;!Db@gFrSY$)iG1sQf"$OClW;IYJ/=X0Enb'i&*:,c8h?YJ7BD-mW#`O(19"@Wt"hX"b5%;W+kau]PcX%/YHio8a&XT%Md?&_R\Y(LLZ'4S6$q)>]9OR([Kl)%L7rflPDr;b]8?8iG2FPBa:b),rs#@n'i8e?5?NtNq6%'I36$E2Uo#kNb/O]XTd3;"@5HAh%\8jdg[Fq^O&'+$$rTZt!!6[7u/\cAP,M^26E4[0`-2+'uq=d6Jk:a-r^TU+2'rdb8l&X>UN`B$,9X\f>O`-.kQ):Eq/^oP[5$Y1X%rj=A(8nIg;/l<6&Ioi(p_'rP&.9V[p%2GZNMtLLMIjcHtfc[C8$&@[62PcA?ir/5B,'?SLdA[\fP,I:7[?/r[W^rQF;jpNLC9lgR%^[/T$;:;M/3/8Q'@lqP-GSr/oeGIlO=(2Q4;DVeXr?ufX\e)bX<pnUK&uNa_j^_,aYTq#q4G^#%pPeq[`=I%p[S>bL\AER=C[iU8%&/=).X"7P]db?OQE<2WKk>f+4b\3c1DT"YBkRq*Kcu3L_o6?4?\j]a]=5da,_i^bHU@'<U_G3X=4rpu;8gc.6XZF-V/h9Y5LSjF.%?:4:*j=W%7]fhH@h*(!lZgNA$Xf3tnZgMpYZ^HhePkoqi8*W`Fj&UK]R_uhDd]'Xk@@69@Y=hP89%q>5)N;N+]Xr6:>7us]hE'@p%@>q?nQS,Sde+6_fO,oPYEGd#F!T^W^oQ..^NHtd2RQ*@.RK]X2@&L7L5f<D,HF&p#jt85QnM0:*&aF=PB1W&;dqmON%*Fp+,7fE=%,9:28%t7p#',dj'>rP7pFp480E>1SQTY[&h`hFsSfLC=lN'+nSifE"rBQUT8JENe=oF3+0#qLkmMRM\k6m>cM0,m.$afucLS9#g+%bE0,2cYcZGkJ2U,0(tM>!hRH0!fHhM[[a:\^Mc)s;tnS,KDng(gG=mF\qrJ&Kn1st=.4,:Wqi[mrF3eI4'LW$32W1gEt$)AFlir0%VRgen$HFt9dLO]Z,qHVUAcWhC%]+BG*Ld3\eOoKS5_W,oNlV9d[R!%]:j,(oO]d3(Er]@dY;uhb"**+UH4&tI7q;Y#R(@ni5g;Ag%FgD)@LDH/g$:eY.WpoU&#>cqk8sLDehl*G87lHe>BJ]rjFcP7);Pr`T9DM>qOmU4_q,B.J07#(>:/p1=Qh$Q')iZX+jceB&5BJ=r%NfK]W".mn5q7%j.T=pI"ar"sET=pKXq"lR;\WflEWW3tq;7ojAq9HK-H=oU%DtOe$@WmU7Tp0Kg4$&Quj^,\8cA"C=?9_H</oW_5%E3J.Zqim&sl_g:rGCd)od(OnkT+,Am?9^gQQ"T"?-ZDR)PbB5A-f+*Tf"BPZA2E/LoA!3XfC-4CY#Ff^P=pT$<^6CTPuI/Edj@f\%rlQJRp!^Y*n*CuYfR*S(#r5fM?9c+DWgC9J:\u=ePO4/hB,^O@BkoBbNQ]e3NkO%?H_?Su@jg1"-eY59E3%k6-W!D&p!_bYA\-7%%Ieq_;QakXCqc:Jlmc.6\fC-6HpeJNS:C9O>X.RO+X[h:7VnS]1A%BgsIbG/ZfT)MPYFfEQ$JIFfW@Tds>Q*W.YG^7CVnGh-a8JZd%l_hGT=u@PtaF!m8ZG8l/$"rB`!+7k-_dkmu@A7nJT5i[Ok?^AZckLEk47PMK,>[i+]oVX[]EcidIV3554K2)hAP9srG2!qFf2$a'%/"aT&X5RdeqIuSb+l(7^hS"Acb*?FFZoDR:Gl#hH]mfg$lk9'hC#A3"RJZdO2JF#AO72/IFG/?5"n)'DTIA-_O#t&6n6S?8X8(0r%bR+%?BdHurrSi+aq=j_7MALcChmlm(`nVQ]HKA<(qJ!Q%U<NJ?me%7'Xd"Ndb'eZXBAolGa*2DX96RAnH2$hHc,/#`F/<iZhl4`e%Cej!Cp\IJ2nDI>3K]N:0qJjVnb.%4U4*LV:IbGa3O9^,`Hi:=Lm4?:1QLgo"X.SplV3GK\Hi6^2<uuLfT:-5-\,'BDpL$;a<^58O%o-`G]VgYV<a_&=G'[kZ09Sc[gO\`L=:]"0W*Il:X6EK=OI\MYX=nhc`i5;((YFfQ*U'2OSfsNm8qAIt)H2bL+g4KKdNlm-4amRMG%"4,I%#Bj?3f^Zc_G$,oAr-Cs<jIolK9Z+Y]DnMF6/Y[%kOZ[Jk0eC[3Xb*5>P1<RY9$@@$-GZNE%EtjSb>/+1\q?qG.54Hl@?qAh%Y&A>[m(#hPdcMaR!qWCkT#]E4+`)'<3roFLK]Agg-2aa7S0sa(NI.gl%mA8!Cq_5hV4R`jqXGlQo'Li8=T7l;<[TElE?A>e2>Uj3%q=RH?(R$<$^'hs&a4dU^5&I3)A;AqlaNd:j:HnY::@cC$j<EK:jsKoodJY9d&&B:^)=0E*cTC;Q__@neZ[H%*R6@tCQu(!\+*2<?%;*/k+*d06He)?dUX3GB(rful`^O-]4]<0hn`fc7mXjsT0fV`e[fc1MZS<h.8<XZn6c/DI-GjXW+!K"L6'5Doh/jZIL-6&'t5<ddl%lXUEq[ap<oK^BS??b5(1FOE5/bP+>t.j3Ml";?%uZOj/;a"$h?&7EQXQi+MqE%t&(k7MAjTJY`pHEMm\/6U9Uk/m2Gk_?/q)p>AF%,;Oq?Ws">6rEJig@Z=GE;!nuV-h3cZFeX;+bo[g:::r>p9<(1=/,MN$9-N.A,#&o&pi.Bgg=ckbFX'<L!fdc7\1J?E@Osch?.gcV%G!gNBbmg%`gOKGF_NtXj$1D0/9"9@&JC;8PN0S+)I4"?4G10'o$WPPb/'J1u$I[JN-L1ee3i?5Wmpb3ZHUE(n^XM+Fk8-kYahZ]u%7rJX7n`>cVSc/Wc$&t[CrUr$eK/]e_N:4s[lTtAFornr>:*9Du@t3&s/-oVeG,<Ua2bjRo2);XGf=/<FkN@%s"a4moRH^YC-pSJc%"Y"sj<&Cfp;I!)8-PXr'Q_t6n:^[O4_"[]NE<T'o0DGMfAm:@J9$3-b!A*`>(jDh7'rm0H=)*3"Dm()gAT&Uia5WiN[m,49n3E\>%_9<PnI^ZP"*^CgXLp6VXAM:.G#%%!KO/rXEKeZt0lS2e/R\4G#blE\RHdTV:IQepZDVR7'enZsYf:E5`]8qL<Q>6jZo`,-o,oPps%I3O]"E`bLka%'H``PCEcT(lVPT$#Z]d#Z7Y@Y7kKhMWbah!C:FHg>[sA:DO+mp?,?B2qe:>rT%cGcXfg3[Tp,g,MO*o1D8LQf@*#%OnKL&[XHh3Xjq+:U2OJZX#C=SKFc#\2/N+3MnFS>d1uHP'O\n/fHmM*^#jqF145q&f,GQUd-5e7?A!0K+ST^m66Op`SNe6Q4u@Y>%TA9MEmei@2^3p:82?`&Q4j@d(HlNh8I1X5D\aOjXV*FEtD(I:1AH^\O?p5?b,pse;YJN+oDWV`i92$&"8XK/Z2!e\'nEHhF3tD70%nN&G0lhYn&,?@oi+!aj[Z;0n+5]P]$Zqq8AcjtZ@h+pSm)F2J&]^(g<Y&lGQnX8jgT6I_')HDF`r\dC*<'4U9=76_sWRJ!3DS)]5%BD?(eML%V#InUcM65L0Ehog@+N-+"n_^/\)T=]cWn`"*Hk!"@a)6O$FRX$/`ZUL>PXmY)>/WD8$>emIE"B%C!m"!OFS4MboW>RCX%CmDgiZuS;6n2LQ=jn+1tr>d8S<<q:\q[9O&LUEH;Sl1EQm&g3t[Y&a6M0IJ>cuJ]P_gB2#o=>^)Fa&9Sc'ink*onjS4'&pi$LJ$R%S]:%_n&(kIJ0i>X(g!L7^oh]P^@`\.%K/ggbAG%YNcqFVcZsCZZ)Vr0$kI8bCuU`^[."u)<V!m:coKuX:t0IUoXSpm3>Oed9CXf_%d2BBcaDQV*fh['*?BqLiY=q4^PQ2SGIFZODZubtZ=o916+G?FGS_=A;0&5tpXpTX6JQJ36N[EUeGO\oq'$12j=cH\Lo:HIb"$K3-%f>U/*1@`pfchY[Mp?RjHK2T9dNa'BbEnpLF0"g(DWlb2uE9[<EV?=3[?/aQ=33%Yc:@;A<J/*7/+5\Q[PScK_24H#m^*SAb@R'Th%pin;h>;Ic+Rg\;7[H24//hX(blRmjJ1X;!72V95_7(rna<4Gko7=0j?Z7U?60@S]dkF"n:iljO:h@nB%DtTf1)@RVbd`^9*7;<%2%`:d<lD!UfsF=%(K'ABi#5/d@m(]F@!kAl(H:1]VJo*9,Q;*7u(3,\GcpNAk]$UfjTK6C)GDO0Wd&*:M1l)\:!,*kXq!H<B@bKla)%HNCIpVTW_)3Km.k:W/d9[2.X"Q:`G\cTN%r^IL)NVXlsNAq8tZPd-ds+0+HDdQ&ap/LRZb#?jc$g.H;F?f'a9"uD=PCggAQ1YIe`%qjUkmR9mGmX]fbin*<#B6-*7-]&,[o?/-(]NZpKlXbo@o'DFgX+3aJ?ijVd&Rqs9t]>(g51ps$8ULluPoFhN9(<.ceB*asJFqj15%KElQ,;<0,"3)Xq(/uEASAS1T2g:+[HmK]"<0Ve"rQpt_+F4Dt\!973uk=]nS)_]0"h@fFBpdi-K=6[l%dsV<u?:g>4)q]&*LdHrf%E1XAY,Tb5*%[HuD1UAMEnoMk:Xltg,[\sErmi,7"F)2fRQp/?!gGY8?!5Y\r!^YRCOWpLo8c#FT/h(5K-Q?EkPB#Afjbk^$\ct[0%1X3K3>m"3S2<tIdE8r]#N8hlf7Phd%4"UY+Z*Tr977OV-VWb>^(ig,j%?3#qW'5uKP>+WTcBPR9Dp;fSfrh!`g#1Jc'c>^pi"RdR%:S/U%d;a5Q_Fp47pnu<+V[;6bW=>bMFZ@"F"U.'o#/o4TAd58[$"(pN+eA.cY]9qDqtTsgPVG(2k.jK7Z,_.GX^L)+LKd6ZX>,mn%(0C<D/,NX*L;TXoa5i;f=F6%_JDP76Ze(VNT8s9X$9\rfg/\WL^QdU3ic;&YA+!$rS_I*QoYDbLqM[8/8q%I8I89'&Ug>UM,,IeX%G;f7Tm2,^3T1n2o[2KtU@3AI9'61DR"=#1)30"413RiIeA%,n88V,W0[JFE_)l<AC;=#,q8S&`%&&!YX^k9=Vs.GA)A3573E4gV4%kY.LcIk3MUeBBB2rT%,0;8Ng`(O6*X*7QfS!"(N%H=n$E)Huir0HGn!HK)9G'S;%qiWBW[%5<sX34!RO=bOqN[m.TX%nOS7]6VE>%/=q30&rn)/_Y*^>@q1GqE=a4GqM3(W;[i^\\#)AG>r=OSS;Xp7paj[rX5C]?5l]15j,<H$Fm]-W3kcRqZCu8FO'k\&JVE>jMqYua%G-AadK/(`O[q$_Qko_a#/CX'G?hTH_3m^70Jl,m3E-C>Kab`(%Kp!o%kl##@lU2?*HPB6dK,MRCZ5ocJ-RoqhV05FGU1)*fE?#FL%/!;V3l?+;q-JMD_FX#cg))J!n#*fQKbB88fi5!2-aQUT0hG;RrkBsIqo5;WcDKOba(GhZP:!U@G3/TBNh0Z:Cq.sTV*]M1Ro0-t;%1K5`&[#FaU@`D[\Q6.p1Se1`#?Cs(LG>@?teZ1LZ/fee1Ep1:Yq8.+YUCiY6(KVlfT3Ec_ffqYj7U@pCMd8)5TgZD(f?GD)`,KcG%PO6:bjEWK4PJdBTrq,aNZ'-AQ4D'fE%sP["p8Tp6pldF7ebP[k5";(a+*1Umr@f#<KKi[2buL"8S/maRH;6II]>?E$4u'"q^E.Qr%@!LtiKqA$`G6_Hr([W5#Wb@e*pKR(Ul0#sGD+!3jI=6qbT!P-l%W<XVEhLaDqt#NRS6HDN%*as^2ZUlsh@c5JLYW3O"[S372M\Um%,@4Z%&J@CJZ&HM;5.A4k7,&pLI!;eNi'jEs[XYUCfp0K?h!q>t\Hr*TlZgqH-JKX1GiPhekB&iOG&GXV+7&\Hf(dPSGgu-%_YhN9%8"C)6]mmEL%=,1H*KOKQC#J>ss-1SOj*f]6a.*bLr+iPcU%B;,CB4UaWatSt6!Bas&r#\0&\L7h.iP8OiH8:V$9^0]Eb9csW?\sI%#6SoO!5M]NpWcAd&>"J2;\H`>g)9>_"U`U4ZT4SUE:_Pd>>.3HF*"m.'*,iH0]m=>#,9jhj`h=mV^SkP#p2tE-f0#JH;"*dp>d_-%k$:D/<Vc.Ej?`DHoO#Y"ScMXOIG9O(iSM#ucFs3P5!_O-_&JI1X*rh.Z1'#/br`G7h(6208(au&m]m-ph:ZH85]ll6YL>+:k4K`O%1fOJZPZ4kM/$<7QKWrRi#]3r9S6!54Ye\,YM0kDDVhS<<HJTC[Z+TDR_qeNqIJ94\Srd:;bF[WmG.ogAJa`@H;TsaP[Z)IVQjI\?%-L>*/4;5;(-@#;lS[r0ri/hG7JeG>]n1t"$=Q&qqp;069>pd(`L^CRKRDQ.0S+$HPO9I15p?E]_%<mXm'8"g14FiOuUWkgB!d[W[%O96Ki#md9]-.[V[Ace1b]a@GP%]p7[.WXHfMR[?3-9c!m`6+Go#a[FTI/n/Km9C33@8PDXP>+[p>i'PVi0.j98Kdp8a?W.d>Z!p$%JTJpU`RaT:Tq[R18soQ&#N9eGYME(VDA`H8-Q`TQHjf!-WdleW)d]-L!5pUK9Scmr#N7Vg)o:mSe&_Y.A=Bf[UA%odnrg!Qf\*;h%#g*,t<>?ML0OC1M&[;W,[5D$'$PHD>[ntD^$79!4NH7`r>#-anatfh_<T""\,EoB_U50d4k5e!PJMV;`)BUq=5Qhr4OQVe#DKUo\%=F`T5%7nJ?6%*UNL/N4!%gKkG_a-j5BH=.kN\=S+TY9Ns_'^+_:[&>BDa5L?2Qbi/NArjhL5Q:%Sie3l.2S@QA[c1mSFXh.N6@9M%`(Ps_nA"%aO[c`4pqHPik?HNTi[gU=_2jeVTPGsF;Gs*3']*oaqqt@9moDdS+e+5Zr;6l`RL>@/j5j#t@2#);7N@cA`25VMr=867%jb-3d:,[YO*-J#*#9^=\5m6/:VL8-'_9HLt.gOFC"_U&^U9l)IA'3u3hR^W/n_J^Kn;%J;Se5>f',Q$a-`@#R\IF@Q2MH)K*D2d.%"Dr1s/UmES*-.;`??*f*BZq9cop>5u5uk$i''G0QI:]@Q%1:GGKWHI#`:2L`3IB(a>E,`3"?Z#@hQ:cUqT,"TWc0%Fd/[SM8!t9c%kM<IP8,#dbCf$Ag=m\$/]EBbPnqEaiIe8J\,;\!u+4#2Q0Ds_q>\it30Ab992O]h&@^,?L#)-!?o!GH$^=J%6%0c3!!c[Sn.3;5J%]PCXtQ1pWtGHSWgc:TbM(0%J-8s!'LIK,F@A\[sOj>0%g+sMr5kXaq9B:OKG([h`.fq/BA?m+qJ^`L3W-h*P`de]P4HM/8+$hE1A%(dKO\N.@NR/A1rfFn&+T579OM6Ls#%P!slK+#?Yo?@q0ginV\QGQ*7U>$`E4%1A*&XlPJR5"rD$P3c;)OGPAnJdE&RfMcJYR*3*K%5T7#ARZON;i1p#TVe5B3s,@fWnHJ<(h]_bOUsP_1nn4k%.!f@*Ek-;DM/bPPb:kpo-6f\SrB]cBod@srI">l[HFQo8cR)eHYnEp:%HN%`D-'qp7B9OmO*M`UQP,69T@4NU+rh$PH)N.%e@c:GU.e'ZL9UI._qjspm]V_JROK27.dqZNJ1R#r@jR6Ao4k_P:X5-e8.ZeE^%C:.0R3#Sj=P:L`dIJ?a&"s;T%G*ANmZk:FJ4_u="?h):OC3`>ZMI0mI/`5=G$<C)EDr1Z2[/:goOV-I7C^RZ@q-bal)_R$`#p4F_%,M?!Vb"*4dIYfU_Y'lr(Fn@[bNlC:=_YdfC:(;:$:#dRI)rIN&ea$jtH2SB@PaJorZM7>c4dK$We-JX]iHZmF\/MoPb[s+u/@X<s%)jhds2t/$u:P*6\WpLl8\]qR80_[1=6f*E6Q@Yk'#M.uUc9?HJH=8q#jL]gc8NtFC^2;iT!2lbl!SMBdS:WrXcI(kfDYE]-ap]<1%WgDI.!-AaoIFZZY(uUDO)pk`^T$r4O;fkFGf]c(K"UVY/_+Gf+CT\fG'd"$=1@;WHZ<pQR)G5OOM2mB'Ts#_H88#l..p7qoL^4U\%8m+-+iWEJ>#bKSWZN)IL'!A0XfQ.u]:GahNifa\!-\kHC?nFjKjqABop23o2>'3%n%`4@n!p?i]5go,U+U('Ln7NPi"o>OqZ`\i/%mpc7+?4HS'7sqO0YN]])*-\uEgb9(J$hPJA9(5N_digo;,-?5b,mq11Hh+KsNS\PnO1Eds5!'tglMc<<Y+Y^(7U:JuI1-HHKXcMe%Fg("b#^copn,[mRn30hgr\cHSn;.a-j_a)B_>nu_-!3StNmRiY^9Ls*r!qcI+L!XcJ+CKb1^/1Wk!0+J@-81F,VgIgU2qI83$91Q%nK$U0KJ63FONVH)l8T<!C*`dd&)Rr,NRtAQd^XW5TTL5$46OW@8oHX0r(Y]/h00DnU[pWE8_0?ObHe]-IbD/j^kK>EF@5ie#N/[:%JMk!Y@t2ihZe:Hk,dia<nI\ZLQ/Vmgq"&B`3`,".\!n7_3e[6Odo8M-LHi&!>ojI-fju)qJgiCE@MQL8EFVGtV#q#^:roUHC+>'*%">eB#!HpUQK>*tcQLHj>?nK&iCDie'^/q\@'?m7s5KAO+#A?.%&,b_`:7mG-G7Mj"PRe]Bf>rU$7g6]B6:pV=r%d;iBEbh]r/-pO%-X/bscbb^cG:HG%\R(ITWs[Gt(>-1e=_grbP2p)=On$Ym;E+IbKuf_"rk1Z_+qUsE)OXH9d7Eu<&SOJ`UF$m)4/7\_"k^>?W8WMk%$]\sDcm6%M#D[KF%?l$CSdPCOVYaAiFZs$.;7u)Cq&#0/WK:Pk1Mn;r5h=f)IOTdrRnFB?fV*.SgF%\49oF6noS(#AX_<lolXku\%'YQ^6Yd[.>7B?-^=L1>2#P&GQa9P,96,Nf4U$u&Fn=-&"(>tg9Idsl*aY6Ho:ME@ts5h&X5<ZZ;juW8gYBSBV?.[3["2C;W6^p0I%V)8!_,#kpj<YNlKi[i-1?:oiDO=qD`a1G.J?5E&<rUNYW&2O>=n?P`4&[MJE7a(on8WpB0Q"2T_#1j<8$,P3s'bd_4"0M2;^T&hG%[`?H]JX.9dpSnV$GjD;A?!1;?.P3rNhUFqb*<=fldU&IH!ZdH(%016Cdg"4S(siO?!:1<RkE+)($inZ(8pI;rH"<R(/?uTFQ&M]R%:`8&g:g"?!6)[n`NZ_4AQt+0OGH82:aufZ-%R@[DcEf4,^>)+r*&H@hXWaIp"u1WE)$'$>nfT:6ZaO/8>LT.+?isSkP;1seW*J+8%,O*dJd-$(JDR:6uDcE[E'EF6F]A?*$Z/-EQ4$?GVamsdYEaijgDa6S!;Ak\el5BSmB6AM6\Ua0)AlMHN;ge[,BS27RF%$[$JrJ5d%M3UoW%$SMtC3=b=lg;s[C&En.U-BjNgG]-9iTNtiOtD=(Z`FYJP\K]h`sJ:p9NA/(f*4@OBQ7K@hju2-_pqLAjQn_@2>f=@FVI@,%%6G_e:?#?l)&G^bSZhGmb^AiqflA+p'l^d`X.n]%FN>soLIh))]Sml&7si)$B^p*&MW`B5/pA59jNq&oH*eAMNE1^$INIk[:SU>p%9.HQ(Hbn0Ed>Uls4PC177VbmdO7n1'dGd"k`UdarGT&0fg7s$:m0-:\jUX:54HK2fVpYKNinh*+Q6*RHqZZ.I4:%ZLQXm#IA<UgI%0e?If@R7_"0JnSn:RoHD=jD*.[U_bPQi-R,.^F9)C=RV(Sj<oRH=uA'H^uKd/Cog"Wor'uHF3\o<hn3^q/JRO?_\Mkr(ieKnNX%4%d!ZdOgY]TF/,nX[RT04<s8>%2*Qc(pRj"d1lG*4_s2.c5rQQWn*i&PL4D%+Z/aX94"('%:rXOgTrqHH_+6kH"I2.?emql<oTR@$5%3Bo?JLEuBhA)*QlI1QAPc!J&Dg\5]M32CruT=/,+T?gbuhk"i$J,C8cGu"/WrZ`-]^H$!ZK'QS/ojKX+[OVtM$Yn"WOc]o'miqe`%hnI\9c[TSe"TDVb\bu(!=`^._+9(H\`@_$Q^[FPi@U<i+oXa.To!oO^r^X_OFTV?-s5tJQqZenI5>CD*s5]OHI_CL6p)CaiJ+BLe%nR)=NIg4j+q="@&?iJS/s7kLMh-^*Q\+DESDj14=J+(GJd8'W>p2T"$s7lWjp6uEffRN5IO+6tBqtRjSo'JAbrkJBf?iS_BpoDa@%qH*^]QiHKWs6eoknOGh@B7Ki_s61VQr9hW#$U9umn..^3;eEE8>gW&jDrL]ek;(5Qj"p8Pci-uEj'TkQrpnf%-R"!7GOdD:,lcmh%argTL8(p0+fuK`bS*f7nj"L>P\"(pB[IZMmr9&O;&,GCNlaEXbf/&]anbq4idppSaRHf(cWHZ@01$7-C@k4&HfiIi7&2_gN6nln>%Yh$Sap><S)gLEIn;h1]_V4Q)Qp[`bPkrb#5cFTPmqB03[=u=ZC`/c;F?f]!$7/kj\kF#nTB56V<D8#4hND9<'msWCBUUQE/EGVa)%)'i>?CWtD>\ijdgqVLtp[^P;,0R9j_IdY8OlIRuJg6.mWXgd?PcS[pb46hBn<T/V7De[rJW=*Y*II"2kpFo*eltNZ"Q<nUL886s'%Z:R2"A_4]j(.RGqVc)h]90"b.S4\7;/=X&>8LRHn_pn;*KPJ&`<eOD%WTA,9-.ScV;g..`9[?&>>_J'8V6T`C4EgOIWV)RmK5Y1%%H,qa6:M7t.r.4A.<eW8>.uo"uPk05=q=%E[fo!%Z@'IQ59ZQ"$2hW/h@:V$kE)Do%\"bcf8p_Q@f($AVar?/MbC$pL4/X\E#,69L%=P3qE$$*K2_JI(*\X^u7$DsGVPY4'uoEo%(>F=?Ur9:[TY93F)-0X7T.F$t:Z0K"\SAjD3^.&AaL^;2YOY-d/_fmf64G8g\m,sT$%ko@Ei.HdHI?-`"tZP&nJG;)O9j@qI&4,uN"T$Q@WQs(S7Gb^V=#tL6L*57&>16tTcSQ0oNX79>@"*;NdjXBlY!;XGkHijKH,(!/J%&'Mo$PP>b6oRE+:T19O!$).[fn/[JWq4i'mEFWnV=a^AcT2e%PDqbW>_@Af9'ip8s!eS8'%J:AR$U5(,7f!YQrp8Am^\t3OkJqN?%f#Q,9m'[qq^OH'p9cN(&^[3+mo[`#.RkT?g&egX2msO6K1s>mj%Ff_\qX&bA"'EjE=QB9GCp!(;AKVDqli6`Qs7e"3*p*9K"@1hA%Ij+jij`?';R,-NWq"WT^%JI&/a1DTod9ZjgIV2@2OseKB1Q"(?5\*NRhg_q0qY5\]dlENi/KR1mf``_+9dJ\`W_?BfrSBIf[)s^6%;[*dn=ljHqZU,1p_[%HCFc4Y&dRt,HT:;dTde5./<5_Fn;,Waq,-"$C42-6o/Ec*cRm9C(SUD/oF(Bu\%Q&fKd:VAj9X-6s;hRJA%4q[kl6_pCQ9?OZ=Et%(`Z8$7"DBcbX$4uCIlG74'".8b1Ie+8)N``2O,jh<ZbojAJ*q>*3lW%2g\dQ^JYU&E_U9/SVkNoU7^.UR#%;>5h.U:&Lk.C0^%FY"r6Lp5s.6k5`%C\3.WN8VBXN8%a/#k80PLDc(B6JP1D-%:>hC-KE2DfX5(+?EkM33.RiXr88BX3),2?<7Bi%A.05+5P-/FL+q,E;6;V1.>eb<<bPRm98ib1G-OAU<U_m?;MIf1Q&@)^^pa;o(r2qQ0Z*=U@HCrDKDbPt2sdX6J@PC/-HrKm;Lm\R%A;olVr(Fc*=e:IhSL>)TL\@g,K\%FS=m2tk#@CZ7#lEd;4.-<>K./;V=j4<]VF>aR$pr;2NcE!c5IM^Ir)Z9u\FoWbM!b([4o;#H%/3>>VM2,::WpJ``M"iI;BZpKg)8Z3f(r+6N'B0^0:V^m:(#iDk/91[4oCMdt)+-YY/;(AoM@FD/JSVea]cKYjVBYtM@7a]n2&JI<%/&I+PQb=(@onm\kA%dNRZ/3:o_W^_p+0EXMgY'NQfoJ\#$RS0]<H1(L3@@K^*l:c0k&KI*D6OV9Je/*)_A'V8M3YFLfS#/PXG0,c%'3,2[[\S\"-YXY&Lm8($;`o49??,cuYju9b3"=$+oLbK0KN3;5.PJ5=_PKM_$NaXRlb/?M#Yh+Q5`rHZr^XJer[>SC.Rp0/;+-QG%W!Pdjm,&D@-&OI0pOt>>F(li:+1*#"0Hphn.$9eir8hY'<-a!><A*;ThBIaH<2IMM/Gqn<,itedI:o8+:/R%ge)rX2)2M>0*4"Mo%&2=XVAcXK>41K_W;b"h5#i8(k3/,7+nOe_k_lAcsiY<k?ego_KQoS0,dk'NEP-t>j@Gr!^VbtqIrTV;ZX7Fm:@ur_o8U`M7`c<XL%=V&Tr#i6Q@parA2&=_$m!bN[W&Be7_'$n<T3M15[Y,T@mg"*2UU$Y3L7n!/UqHim:j!II`E>+3lmJudka.5,pdQf(+=3RC<!hki:%UR)$8#)Jo&cTqD]Jkhe8XsCme!:a`QEU(Ke_WrFM"tMR.L!tuS:9RoJ;clJdbpnq@.n1]4?m8(>eT`r@23s%DX*+q=(^p]D`C'R[%qH5M!ppC55k39]Ul=nD"rp%!uqDgg(I`?Vj)@8+/n3n(sY`li5.^V>ORD>n=OTdBLMeYCXGR'%4)[YO=$.$O?,@1n]1o?.3N(dBX%>f/A[oWoV#T2<la/F7+b*_)q'?o:t<7PqB]252TEK&%RYmBN8io8-gM`,2(qbd0O9TjOF_cSs/$eBfYd$kZt'g)V8XDK\YJJ_36V%in``[nnK%/%WjDQ4.'ESf9fnN8dGDkQ1CNs`:0iSle8hg$+\d\'uP-\Y6YfcqS57hCpV?"kfn<*4B=MUJ<6&<%'odgousY?@V8U]%]3%N!IMUlY3=MlM&e9C3H?pP8a6J8-Q9OKf[po3b[o1@>7S!h(jhAIV"-[:C#tYY(3<H/Fm.Ed&<YYg!2=9TAD-'XWMX:NIdOFGa%HnL56o-B4Xd(=E\E?[KQ%6)::1$:ogc\sUE.&SK%ji!-u%\+;3I:?1"F"<.\=??-1$DQMiTIAK^W^g<TB/tJ]efQ*?n9i4)`]/X6%6+=OZY'k]ZJ8''I[SVa)T!:<=VH9IK&D\gN\DXG!*F";6SC10rg2W.UHY&Hb+FNMPY$)ZH@uN7,*uj92ShY9A?Ge$00j*?f]+]T=%h:E^cCHYafkRiFmgIo85o-/9e.4TI^S>t_3o'_r='%J5T>BX:"#H$rteY^G""*#1B/Vo#=[,kKcBg)n`M,ZVs[<FgL"W2n]AWPT)%B9)$&NKGfE(K8LeM7T>gU52EXj5t+n'1aD&0p@Z?ajq`j+,c0#PI0I[X6>hZm7E6pm!:pE0B*/_Xf98`?5TAY@CME3SqZ)Q`/q8G%_iQ(uKGR'n,A1O+##pn.o/Oq9.Y9Z7:+L'd%Rr,Z=:cK"He*;$2Ak>uN=k_Ya-%%S*`G?AKB#?D`9e,qpM,qSXC$-$QWb?hl!2G]%$/$JBFrWbE`u9sB?oM%"YpJ:kA$-e5K[P]QjOU!T'iA"_1PCI`6]Q/#\PD*r=B>19RQbb,AbSSR2SI8Orgq]"CZ8PLF<<VA5dQUF%QW5-Ojc<XXE)Kmm&/8Q4p6V6=o*oOt!o'uhIu$!VcTA_bflrP1f68?\oa1+<Gksie#jUXk>82D[V2;uAinHO[JljY1p:uM7ol6-K%Z_!OL.eI3%>fGWE*Je/>\FTtD^]lH%]PC+Q+n(^t'DTX:'CTTJ=ijaCbm?L]_42_97)J7EN4pLuKb6!q&[12he]?uncTIXE#]aaB%KX9Qs.jr0^PnCYjN:C-=-c0+T((7I;-OKCF-S+fdX-<-sqAICM^W^B3L&MX)Oo$Af5q_#^bP&U=[gnWFS:5$.lq$+\hAKgS1FEG6%:/UI[*5931,XASl*o]=]RKe&H[$X*@'1p9o-F/fD*h>%Sn]OMK(oK]>eDP?f!o^BLTp\mK([uannUNVaZ9G]8:o,/o2EIK^,6AHJ%(r+*J'4MVY:V^d7'k1=?/@#/s_t3]D!P?#D,E$%8s%kk<^ni.,'HD1#3QdI;c5?8&H)u3D_-!lqp2XFCiP;%):pA*>2W@c/q'+'e%SR93WhSJul^+Li_a;lgsS%an"5/_2#b,hUf8RR<f68RaS^dPN_g!bG1WR`C+a*J!.qok:P#K($lebLJ/@:4;FEI$,j9DEN\hS]9P%A_/AI>)bVhp92NT#-^V&"jDd0_$#KWKclsHid3i+>SLRhLqD)q9g"]V*"Xjj>\%bN^gFt<`,k0EPgnA4!YJ9_E^eft4YUd3/j]%J%D25mEp(7C/r\MQ`C,?MXpLlF8d7?+aQ7%f[N*"`'^][-V$Gi$Lpj^+]"OV.+2DB]UhF&9(dFlhrF2&X0PWP%0".C@6"n,L9IQS)G%kfO1f*QGT@VMPkNcuPN(La9pB6rrIG="!0F!]-!6i,a5[fKk<%c2keX4\F9u#j9l"'5Wr(\/?+BLmh4%`jUlHMq3Cqfggu,p5q&c%<hl(E]gqApX@Aokfq(T7Z<sA:k,i#ZK^Lhm*dskL2S1"p'-Y3^C-<\<&^Jn^3$KkT%\<u_H+Nk0!sr(X8BpQUc%1+m<YB?id=_4Z%BM(Deo&P24EOme"pCtGWj(<--T(N-9m7pOcCf89W4i:dCK*fPDNNr3G/k/8!3c]l7;O)kQhW\jd`@s56%KhAG<jGf4J8&%p7I8[=%,l]kWEc?G+K`s:HG1XWWqXBI5"GCu#6PQ9UjD3O<R'Gl@&&^4@;2$8^JMs,_O)YGH7mhP;:;$gH3?H/"&Ptk*0<Annd2\>oNiGhf%#CAi7I,FFnBoV$A=*Ce;BdW_P624c19]:<'b)KiTmQo\>&Gi&A5*T>e)Z4dLpC5",CG<K_NF3L>@0%s9:Pk[]l`X(-V8tB(-a7-=%17G^(=m_%6&LQb+QW/=Z)p^1V3)qSKeFUPY:&::a4q*ZUR:';J&E:pnDJk9gor<.2Va=?'BtR[%$U:%a&fE^X%0^0L<W5Haalfc9%GHV8RmUi6h/"7mHT4dS)SWiHH8`Dt3XERr0JptNt>j55-]AdhSEAP'E$%b@Al$'n6`m;\7Et$#7H7\CD40FlF9"!oLW`,4>p(5bS%B,7tg/](I-kFVD$&Vt#+AR&ZIWc,rlk8q_0j:>cPgf8OZ98WqCo`0",R2A>:6KfrQ]/so=5ZC/C\#'d-&YeHt1b(Y1*N*k(gZ1'h%@1rfahmluR1*DZ.$uqell_'O)7BC&nf'IG_MG8bk_@[3'jI35VB(6UHY.Y@$%gPTu+CVqYIam,)Ts/`A-((>V0;JZM;V88.e./d&%AM<=i1O`^Xb?igQ-<n)HZH5C?H^t_!eP@$SQ[tS"C^?.nRr65W''*1i@&q[beS/,^%\PLuH-4J#iLUcDUCc1$@NtWhn-gPj&t?Nm%q,U6BpZSj^&4]+clbmpe)i0b-5WDhD"SX_G360-)7DraS!9(RsGH:aI2grE6^OA5D[:]UTM_O2=p+Zr("7@mP</XTN\t'H%8$taK%GV>DX>/L'[[.Y=Z.(@6c8:jBV*46$FL4);brk!CY&C/S++ccUg-SN9FkR12)7rW]1*!]rA\6or5Q0_T+SA5KW-u!]PLZg8#^<jk%%dlhmbY5rUr2!n[.H$u(t7/DFQa`j>ZN8WN#N8%g1#]U/&LKTU-_Yi]@auo^hj?/E17T*1nj4T>+&tiA%ReQ)V"Sf[6l%)-r@Fr@W%\(]ec"V=4,fP6SGVog`T!"nQA@@WA=R<Um<lX=YtC#V!6;jD0[k_ON=""2dV61ugj(j7cc-G)q-N)m9/2>+q`3_DC7gB.^o`d53O%,*7>.nU!qc+[2Um"PcIG@@m.VAZgN*G!=eC?W1*cm47U[/??8G[5c.5TM:o:E4@l*J>&?10\/=Q@'%rs(Y:-Gn5t=tAg`(0aDN5p%.pt"S%:PBs;[n-YfVD5-*,mTCrC8oHM^!u,\#PhrZ7RBukT=9-@RG!6jWd($&2(8'QaI!Ql;O3?b[r%I4;4E^ll^%KNL2f28":ah%nMuM;NH#q<NlQmXUfkWsaQbW;mgSOROu6NC%,AF"cVrV#6nmKZa@\:MJguI4;_,%sNu4cW`\OUmY]&^+<@!'!Q^ibcQiVfIKJ9d<%@sI!hiiSW!YHhcWcCtJ"im(C>k7g_$O%1pr_-\1EVs9R2G7/CfZgWOmX]sI#@XMuAoTWh>UEPnK4M)\$N[3@@BJC)5=9CdF2`9Hk%@bI6#\pt-9$]>)FDRDC]7q%@ic0?Se6DW!eWgaE6`u*SVY1fT-Zg0se7'R:OWEi4N76(7N5K`g@?lZ'bQ]KT0+-)d=GU!K@s%M-t%p+ao(W3Kug21MI(Kdk;\-ABqHBK_+YAMI0pG@Sg\,t+t%!QONtiB7_2Pf&:H"+DaQCs$!e]QN<R^Ndle:<sUhOE[[@IB[kg,3e%\%G;29G8ACCo)A.!XOs*-[mAZtA<>.-F3:$p/@+,;;A:hlRX!@r_83Xm1HMHrR(j<r'PD?KHY[DC5es5f)I!a%[^B6/g:&O'XD5`K-%m0fb'I:;sZK!/t.RV/r%Qs-_c9lFVZ2Xj[36.2C&/0fCh(dko/fqQD6S+g1iG2'*`(,0UR)IX!q&ECN'5#>0lWi=gg23QoeO'[Op%VOA]f3(Pg@Tt#3WN$r_87=YKNOo2gLH?#f[)i&mP![APCc^&[<r=Qce5&Xn[hG+2i\c+]:HG84YSc1gEWgZ`f9n;;&Y`,<CGY8qW%&OY'&:GI%r%1m,U`]+GQk@kCPdR72QpuV9PA5`liY_d_1``/dj#A[P$GjsS\=$2!%9K\Y1lg_X1<$?_bKRIuV52S>%cT(D9r%JoA%OPV>R6g_=l*iR,tZ!`XP=>1tO=R[7/D.K-a6f>ZFO*2HMM(r?<`^eOmF=\@G_OfF[d/ZNe'eu"Ojd^<?mY%GRb?X[KrB3i]/5bRa%r7!4=mpaquB/75S$-%:Nq1Whi[Tr1:D-V>hEK54RX6:]"^mJN\1tFaU@'%rs(["&Bc0qpP]'.i';3O!)W2@8r*ef4CY4?;;;5/;U%hu-iO%ncS%++R.BLpJr@!!hp/j$W/i&IR"9C4]hXdDXoZ&6UGQ6(8O@3q,XYp.%2u+K\_OENCbN-R(Gk_?6S.Gkf-N,8g.%%FLuG%)hT-)RYI`[F<s>Z4,!-.lmKYTig1=_RO8F5X!]Fhr2Z%QN.3OEY:_YM@#^),K0<^8$+H/R]\0]D?s)\Ps+\G5YgcN+<tbT-TYQA$%S'NFdJSdjZqa_PGA>bhlTUs^JK_pTUFD4")-0Hd>B&86ZBg//SU4]gZPo=g/1m=Jo7;+hn[OnpW5SUJ;CuCH^98Hu&#Xb*J-Gk/i%<tfSCV[;srV^qB;X4-\9`X-uqR-W5'UfD:#P`1p8TZo7tm!F8^6H_5[N5n#c";DD-8"#>R;m\`@bc-K>BT)tD7V^"I)[1Db,+<e&%=$*7UejGH"Y&/rh-CE8n;b=%MhGjRj@37<;6L:PU(9n_:&>lT"$D*)N2k^5iCuZ).7hEBg"Ao?1G2^F,"ame/0P128o)<mPk8V'a%Vf`%*:qg-Uq_8;#V+^WS_(hmeZaD8@`Xa6K4P'-A/DR*V$:;B?3Ic19.G';$VZ&s+g5TP`omug.@+a9knYI[H\)]%lcWCb)kP1,Z%!CHKj]oa/l&B;4*_+]`eN5Fm@<kiI0ib/BW'fgFpU^62L[ZEGg!CC[D)"S<fnp%S<J_u7\=Hd2WA;Ca8CA&L@YGm\83lJ(:_1At;%@]7_3:g"aBZ?`Ng9pg[M[)hl=Ws_m9Qe$sfLe'EJ&7Dg:;h2)teDSM-G78Q#_3bGq<7\A`%OTq4cXFtq$-)-)$c82PC:d,`6uN9.%/.r4-5ZD`:I(Y3XQR*%H6oE(]/_QXU?*WMZjKB5Iaen2.KW5dD'j#tm!!j)cC.RCNO#L.AB)DW\@?4!&%oV^A`[0NkG^?S:PkeYi%e0%C>Z.I]G*k'48PGof5-X<sX7HG,R_("uCY;]59H^O?37gNg%:'JZVg2(IS&J*Mof\RqHK^P]c(bk@IX<sa"blQtgI,;d=@a*PZ%jeJ)tAR_[A7&(=u`Tb;P):s;K@Ld&.^Olj$(95;XZFtmI`hKlUK*g-.)WRh'o\Ji8CkI%Y(@;48*Wq)?ctM)NDXoH`rY;MlosFfA%\@M01!\q7L!8+C=QCMc!`(!b],0VAX;`7-e3V=mq^PK$j9"]5-ggVT'CH9CmWM_>#p8MRYSTeIdY;VKjeS"sT-o6#\m>a\al4."`%Ktef=b_1=f-J=)iUZH%"*PS.t1JpQrY)XIMPl\6P*oa;>RKdhi?VJCQSg;OaSug0.YE$p,/t.m@VVcgR)-Ms\0hIjUY(7$6WkLUQ%!qFEB1ds2%7LU(n@TSa!:hS$Mcn9oXb@r.2K401g(*J3goGI3K[H%%M^oOj&q"90FD)r8-V)DD-OXQ-R53BBi+#AZhVg4'Z4UtJL%^>`oGnP&l:FKh?[RZ9<-<=m_?-94qh&Ae?"`pY\-KK7#T-fR'\($8[q=m#W`kNDGr1Nlnt82i>)'1>?.X0qgf_A#]WRh#X%+/<e,%-j^KHgLq;k(+.eiO^HL<Dd]g2:[:_n#"+>@j8`XJ[njkEeq6;TK/JOuM1L`>m^Cg_`KQDG@.'G6=Sioo,s1BXooZPh1ZC25S]=.Z%%EpIH/&69$3fSLfj>!g`nSkjpgO`Bqo-P-A`EWjKPUA5iXDn*hYS.QSL.BEYq]5"][mGf\NYBDl()([eeN^X;R(e8_%d1+R_71-p%Sq:;Wo><V[Dm_)IMKqDN@>nOQ^XXJ!GhHj(-_>IGh=W$[5(O$MIfH;0bff<<Jfr%,_q@6.\C1]"KYW_eZm;Y_76%0pjB#1[m1T75%:H?ZZgZg/#^;js2hZemS;gNO*NtJNLZh6*dB@9t4[%:PR7[`G\6ks+RRQY*RZe.Z'g)WN$0Sjqq0XF8s$,2QsmCaK5,b+NEnT'N%%<:_pqp=YQUWr&4Y`<#nf]()1Mr$!=+o;#bhp#KY$IsGQWCHOknnD/<4W/Ll8&Zd45VWaq9M'h4abo.kIhDsroppL!Y!dlrfnX<tr%OO)E7&;2JEO3.IS.ffF*2pW_KBJEB7]oR&^1d3l-R/t4#'ACe_^rIeXC[e!j"Yf8M\#1S@aNT&uE2"==&+8_"QJa9_^@>K1j6!U0%d]:@JF3VMICck3#oG33jWK(JKa;Q17CBD_c[588'%)8*a]f\TJ8Nfq=d9iK2cSnVK:Hu<8h4.,*;(^1ZZ]n"RRgBbnk28n.S&6ls%I@PNKe0+2>5+BS;*IY&4o)0M67,ISR+eh*]/&3/%,Kkh;N%5UEm$RN)k_cVT<tQaslrMbuZ/Ao+g3s*\qoJJ[5qn)!ji`"<?sVb!%Mc(SI45fT%0PEV_eCODPkkkpFa*Ihtj.OW56IEBq)@A#J%q1C>D_G="ZFTA**Yd:3JhTWSaAU1$[T4O1h[>_F#r&,Gaur[l#HFK$%^-/Yg&8&>$[=sTBek78?LCGBq^3E%RC[kKI^i7aF,:-HL[rdEI`_p8t\t=7D/AQ,&+.]onQ9^s/6m1nC65#'g4=3;$Z:)&>l[,YI%b46+PZ34SW,-mJV:lc-qZArJOHY4^Wp*R*4Ih+H`,L?R)WB\@C5_B,N;7`$;R2&h-OH4h7UF25aI0-"#Sf&]kn3B!%?u#45aKhIq%OF>!h@4TA3KrcODCk/2'@>s)OSdDY-XX@L5U'e.U;3k>`jgg67/W]^-m4HtgC%9:hHcoo.H],YWp/^f3CN&0T`[IIcl4^9D9WomZ%hdK;3l$M&<O84YeLODs\P8B^,+F"m3a3L^2=bIY_;gL`O2j7j;dU^VQSo$c`<mtW,+-MnRjulAWX&$XuW1&DseQTG](RufaJ9fiA%W@$Mn&!B],Qo78+d#L+fa<!eWe<PDmDgKqB`464!!*k==$Q\]!;Y=!_>Pe\;QUt-f3tQq4k0Y2&!k=Jo#]ffF1.u,A(0&.SPC<"q%3B0_MpN!q)6^\Wo_(:YE[Xi/YRpKpSZMRc:-SFQYLpmFo=d9Q0rO.25IjM9o2(-8rr8d2YOj8(YAUf<&QPVAKZ[M6%-GM3^<U(D)%&iR4Hk`mY.bn;YLn&Yd:#a)6EXG:Q8XA+R,f@H<::/&@(c[\:CC)OFrMQU!i:j2>cB:q!sDS9TOgF*gAR]Qf]+h6[7,?O(R+FCOo%H1J?KThL%Z-*:F_)>k4]`b_]A#qmMhU),Q@e$\,IhV$g(V`>ts=TCjX<;:uC>`EX_GsaFjLtZmN(dRH0[!*O)*:>[JOdftBNA;%`%NS6;fY[]4R33aO2IYqTr+!B%foaXD]dL98%X3AAX^p6*%:Ps*3p&q_QO&2O\nnYBXC/)2e+'t:$YH<K/'71(Sl3Q*;Tl-Vs`On5\%MD4bICM!;:L;J?&n:Hp1q./rb&VSq$'dd]$%WW1^'Ng-A>YQo9%9%Or'l6]rg*qb[F+,<C]'U<N:+rbeerlHfoEq;:MBf#8KsY-Y%^q.5B@4QE)L$'&1gIklsO,kVS?=U2Zms5U@XQ)o@F[,K3(]\KV)kX[Y0-]C1:C?5`:JU'GQUg1nc7d:cG('`acCX=922RW(7U=MI%?9)tRMq3_k$o-qVK)S:JODR2SQ(iJ>K+7I/VFKdu)IV_E&bB"#ZLc6pNh,)!E-GUEq)sZ'(E"2CLPVI-q?jcY1_FaD"-H;1V^Dh`%Xe)`tJi8B<[)"R4AeDeLLs\=bQsDjdRH7eIS&"hGbcg7.MIe$PHFlh+"O8Z/6K^<&&im_cQ`Te*XL2h0'm*)RZWt8G]s:hfBT]d0%Qi,^B7oE+Zj9!mKWq(8:4GN6.:A`s9XfnT$W^\.;>,WS/>mjlOdN=74#pY+[D7h=9Qm[A;2_@`8.5IJ*H5GK'L*6-Ib7DK*]^p"5%Fq_Koe7=:][l!JIMV&Bo]Y-c?[Dk?%rE$:;@amYpeLI&aYC6Z6S7=-I[G3O;T=,M5!5_^CU9K<Rf6C,+9`U[S0HSa5e/Y>h93?VM%,r;G0N2aC@;P*"h#md<G[I1(Y.d.*jT#kq>bFi[[WZH`fogt)b4<M(lLhs*WeWUT_DR]U+IH<0)OhkjRNic5^WYX94`^l==GG.o$%GOO]SkP@.IhM^EYB&b`l_OiO%FSc=R1GO/c5ZfsIcI8>#Ve>M+:Q7R6Z;@BTE)/LjW'ueR2)#%"#]s_u]gZ,*\LB$h`*`ZY?_bOs%_L)NSA+PP,(sB3iJ<:.BTA*ks&Hou'Q5hLjKFdKMdhN"QA.,h#ZO"F*Y6\R"H6\_;Ft<>BPPu!haKKgR#qX#@osf6Qq+,eH?G=SY%9H"*FQ[+)cJ9e!.4Q$er)"pYL+/q$p/(l`aTB"jcm^p2."(IB>RSkA/[7M&D9/\8PTY:^BTJXBTalWY)eqF.T#6!*7jPRqP=\k#L%=?f?]Ps'3>5Jr,oEotcr'aljA68>=H5U!0N"CQU=#YSq[!+E_eGT(qlJ1!gF!9oZA?\5Js0bl19EQI9?A1*%_X'SO.U3[`comOC)%&]r%-&!tcQMoI_^i,72a\W4QJ!Fuj4>jYgh0at,(6KAh)M5^0EDb1N:Ei2(2D5"2bJbMPgZ$roF-0E1AUt,1=?5LJc>ounX[Nn)p%YVoiYNXg@j7Zeo+iQ)U+Q&Cd7aO/t0Q_MP5jII0D,"LigrR8"td3V!+_O+*g-T;]9_Cm*A0QLH`JuI[g,U+f+&i0s`N^j57,Q8%(%95#L`F:"8n,<&"()u1YO\t=7T/:b1[O&+OsM[4Qd83rb<j<SVmH";@D3V&=gL`C[G7uj6<<c`m<7n<9<2E5a<%0[h63g.M\T>K+X%*c.K>oXjc7O'e?hVr1Rj#%&k4#!jIn3'Ob&;UbMX_20@sO$alY'ag#K6n$,CX5QU/-OE:i<g![%dZuT,D_'.c(k\+eYSRn)R$<D!%N;iCT7.DI^q,QHD\3@4;H8o6l0laj^^VoZ:kY"-f3!.jhU^8-Q6<rF7I90(i)BZKVEmBmKc8uj]l`*C*PQSfWa&[$(1Q?)$oEW6\%0d`>ho:Gh`Qu6YsL-rWTJ`HC(JQuYF^4W,Q`533K3GWBJZXLph-.(6_qsYY]$<kgp_d>1l51h,+#T5kL:JYn_lmM^ijJoMnnNJh7%#EN_G0kbLI*I)>)IO.6qrq;iK_/h2:bf1cCL0)ukNBu>-0:j%cJnMEj,teg$#A+AWHl`l&K(Kd5IqU$:7/=681Q88@brA?ho38R<%%cFhF%F,sPV]YGo-\>i&:IXF5QNuT,"sB!SR`>UT6-/<li`OYcaE5:VqAOko$p\3dgc/rZJb8+D!2\Run!s2$N+'REC]XrZF_Bu#%'+jCAU+a^bC(G0sZaq)lDZcT+p7Vn!H@5DO&WmMn?QkVg-:3G#08Ie*:D>_G4CJO.CefM#)b`'X%,t>%0q"pGZ`9oRZhqp%':=?(%nTkXc"l"t;%Uf$KlY_/QN/O;gN$?X97bl,WBEMX'^BXa+O3]P<."bHqXg_`Sj>@rVkIO\4"er*"#K4/h"sYf3Jpd\<Qeg%Z:f7</%40"`&"0lkU&-\5;CNK)tYV5?n0u`d81"j`8<*[?6MJVkR'm#k?Lp]&X&H0>]:R`kK<iYJ#nMN#!$^*0f<ftBLlRb^(o`L"\k(,RD%CO*`-iB"[U(o6's8"\O,T1n!J>I4I:k+_rb.aE;>7WAUpU2T,#rh*$('Mf?pBi0Q&\F*),/GG;Z,)NA0#_]<N#E,nGmS"k&_Tt+:%.MEDiRef.9/)$p-]:<=L:D72r@l_eD^';@/U%]IdFBD;\f!e]`XL5G"rS^#CC"^nEW%S$I&Sl)I74acc5<u`9UVNt%96>gSls?O1%g3sIFP8jQffF6K-.\a(7+6F'9"Ts<9Y<^&aNbP/d%(Y6k.mpJA[[!cBGlD)Ae'/4:'.4;d7U=VmBF<ua8fcCL;jsf$iTU`[4@Rqf%;j.[1*,[oqhspF19GrE-51X/kNe",&nC_"0!;*\!*rr6g0pV2=<ulcnA>F&"f[sfBK@;1@"Kl4B%X5(8YF)cJ>I,nHF<["[Rm/aG%Egkj6Mc$"_-t/!T>PsX4g256M?r-Vpm[>,A>HM1D+S73T*>RdgaB!m4rfRj1\CGV5EF1ZUOmL25rJ6`bf.:MV]((i]Hdk*r0tl"7%(Tdi@;aOhMn4/1m+(oJr[=[;Bcf>?dk$gsG@EaC^ZIt-r!^m2t2gnV%(#e0O8m1Y(eis=LP?/Bp5>c[O\5qCIrB:#U=BZ7\Is`$,%8WsCLI+V[i*O+h_D%-dB:'HH\<+]RW31K'8!e5k5mq-(,.KVk:3ACh?EcnB?SHg"POINr@=&Zsha/BRb<L3#2s,'>Ni`b1M``'4;%,%/RIG[=+K<Q$E)YUg?$C4:suf&5/I$Xq7X6P[p_+h>B>p#7p9D6#j&\.+>Z/!amXAXiP?&],h(.;"il0^%'eADoork>tTIR9YJ$%MCB@B(b=CAL88`&c(7KajXCN*q1]:L2*72i.De97&JQ1c];C[==,ce]4@W,I[6.\H3"Vt>1_:\8J'T;#/u`5)<:W4S[uD8U0F^BK%qH0414mMlKDiAa><P#go;uMBe]H8Q2Q;gVR)J2!!`eG]6P&.(Q]OkE.0hc^W@*B?8&C,J2+'`DTEZ$<bJL8SlH4V?W2SHChTKQ=i%WsIa*c1:UeSJ<8jS"UF'9\,^XecO[m@&u[^fAl8M2;Y83CM]4!M40<'"mIqh$^3iVKO5,"Wo@A0maD5?.h8SQA?Bk"@GWBtk&"#[%f6,hNOh];VTmbQT5p2\EEnL<X@BX7cN5b&b[2a+#EpS_GZg+??pUR1Kobc^/%_mCHUH6Zt@6L\:9oSa1dUP5D2SC5f*aE(5!jDlO%LF@E`TYHKW]5m*L=_k09?ulQ>mAED5k8WE%ku.g;Y+<nKl&<K\f<=':Ao2oc(e)NUrM#&k`*V-?/<^trNpRNf+@"sWLtUB,%Z6A.%\f[U3:fW:,Q$g-QML^.,,COg*$0=o/rf#H-'<L@Tb*OTPN!S+\MWh"A>YDa;e,rR?NFOT)7bDH;\#YlO0[Gun1"k98Q)B3YU:hDm%97]PuFJle]!.uPpT_K`<$$1lL80m"JcpS5*j.,rpiCLb6auf1&#"%+7/:TEZ?iord75`LNi%iEh:9RR1;I.(6`n88<Y,[!dE5K9@%O/E^9IYo,gerJE3-#)r]g!3aR&?=b%FspE%nCPGqQgVfS+T*Bl1=$R\+,[krLbq4N[&=!I_i=aaA>7/ZG,=??R#:\(-'EfjAeVbm%8fd3&Dh]9V36h"QG.b-6-UQVI2#D?SEU'+f3$<Q"c]h0)9"@8rGt^W9FjF,,;BQTmV$@5]@#Q;i2K?(L@HBp"&SpYkLW)Dihch+^%RoKkdM"BK_CBm-q23.B'Z_-p3Q`5eO_Jq-]BM#(W[`%\NYrfM1/`Y&`;SIK3bdc+X)`Nb[Gj?L6[ca]U/.d/k;a,-l(kH\RP'-"3%6's=E*-Z\n'TIdUVK'W2MIOM=KTEYtB"$2em1"S"MV'C7klpt5f5<[-GS]C(iuM*)/H/GnOQ=35kZ$N&qOFWm0OD<5-a%i+7;O0&%jj.Odamme)XW4MCbjY['N'BHTBn"#5T6M,?/1t;sqM+0\XTC01XNjmd3b4q)dVmHU+B"Q*cH6AWZoad6eg()R&&Q]^$'AK&!Q0__%!S%X![Sb%6&Y%#<8jcXi,a(&mOXhQ7G,/8BH-3lh-2BCV+EO24A;d,qfkCISW])8G3Q</?OY5,<<JZ\'%P^EnK;"g^3b;o":E_6h%'a&kJgee'QPr+u'.,qmei6diZ0H"nF]98NJEqFR?1>1q@@]T\EIM%;SA_^e6.a$p&*b.)US?$-#]iW&DV&?<@(oa7=ntN=_YJBiq%pO1nqZ3UmNF9&AU&p`1?J=K&'oW2>l!#3\F)oTT;Qn!Db:"OTpCBP6Tj]V@sI&,W,Q6WA_W[hO+bhS=(q1KZ3]]O%^35Y2.PeLKA%P.JOh(q4`^qn3O1J'GpR:I-P>87G0H`1"7N59`*>c4)a/8?%S;JoT`J4C>.n8s,a,-]R7VT3!rrb`O__/]rA]SnpYm5p.kD\mA"X%hS]Dt$R1PW"Z-b<"^'$gnG*=C*8(<R!`]s?5LK_$AA[febKFZMQK/UbMlAk[=PE^CHD'6=dhVQdUq@mJ14>e6]>NZe1*b,VQD"J8%.X^77D10oT)4,EadD<H-qlW3s-8mq&^2.SI+HKBNF^i):l`@*42eq&YX7!`\Kpogd"HK*Lp\<]K)XPk+[[KGUL^+nU&dU5lGH*mH%)RTTjOee]Yo2QnaV#urd@`bkA718Nu3gV4k3p03_Go*kF>=1_V#U]t+Ncltka]OrLO)FF1MZIeQ\l<[kYdk3E9eir-,:?q>S%+\&%C6?\=Ok4_=eCnEQX!2#>6oamK-:M8R_'(m&UYMAb&0],!7Jk`6i4WT_EC5>G'VXDjdYn50n[([SQ"sfHN.JfVN;-j.?%E!87UBOq%!9T`(_Z738>d(=n@To,<!qhqa^bXu5"G+\;=[Zdb$9/.o$91G@A+@js!nC,`eM(Z?e215?._%$88D:aaUpYaRDbi/>+`.4'LW@%@%MAWW)T7[Tud6fnkMMP,lpF<mlF>SklL_Lma%<&[-C1AbS32H-B;A3N0oA+)q!$RT*UO157UCjA[e.M4)DM3O*.atd?jZp(?d5/[0%/O)LN"7#6P4fB\qIm-G*l%Y5`Br"(r]oCWsf?;5XR\gQUp2=kq0fJ/D5kgh$1u7?4G>P+R1FPRlq%t8Ub'q@j\3LM?$$$+A3]_9-%*WpCuX#<,J%A')[g!4t7/[j2U?s`Dg@t)X2/S=fF*W>.gY/URsI)+pUD[,GVG=#bq`,'rH0rp@-Y)4ZNap[CGd7h]&]f]=%R1Y/c%O14#WF[dk*EABjr-d;B_cJhFJSUMYP^FX]:>UDiM[/G@sYl")/jqlLr>YG9*<:8)1!T+-tG^1&Z9LLmq>=[,^@"eEcZqaPA?PC8+%3+PkEMHM][R#-SPgdkB]R'rlnKErGQn&Oe#(*P"L?1'TLM?oSuPqg;?qgm%=qm\EW;G;Pj;V#HL9BLp*[]^JdRpb=dkGdk`E6-o1%\j*AE%:W#*gpc1/0k1jXIVkV7Oik5kFmE!q>,4:Ks+!?8L.aiC6r2fnccc5@(D,qtN>q\u^rTl4en\7']TV,(#q>4]jj3Q@+EkD5%c6MNE1L?,%OhsMmWub2.Uj8<;k&Ga9@Y?:<FDe_(J,lo?0<TGtbJUS.b(X(E)oqV(&9O!3]N(Q+odOM<?'Sf01Dl28I,L;c`-WA?%]Y&@g`0j1<=o2dfcjNF@bqYCpkpnj(>cbtULq_faA03s8Ahmn5^Bg\\.R+FElN89roeT&:"`Zls*O?8=&JjEb--Q8rh<<^kB:&dm%duH1!pYChd4o&7%\V(t6D*'\44Mu8&g6uWe$lRA?"Cnd$J3XZ`6u<,pjs4D!?-DmHc`D1-O"j>3#_]-8c(;JoGg8s7VQl`")Q5>R%Nb96(4NBa]luOqm@N(X$S2Qn#IdKZa/gj(:?%lR8B\aLk>!h-b6^pd*lGY_sj>k<>F\HYQ.[329XLZT&;QWsGbPhngb')=u/SJ4=%bs"q5O;CK.AR4PSD&')5EYX>F&X9WLqM8'\`PCj\f`QQ7Zu+TEafqh62gd$eL'S?2M#4\tS=Y+YW?SpOHSE0ShYu_0WL.[a)+G>N%5#u_5%X+I'^,,X_0\H\?bR75i.LZM91X=jp&.-:oo9%W1#79;NR?KF&nU?jI?<jJQWOOuu!cc;5HTfNq#XaXOg5Z]FFMFPaN0k#f%c7"/g_;p`X%9%]!Ub-aM&/An]QVjQ@[O./F>"*M&SlZGR,&KD6cQ1?MU_1;_Z>l'Q'd<S_n*:/;9NB3sYm2uPP0`s[0jBbS1T%!S%l%"neR"[]cRcU4/j(;cE`?c$-<AZdXH1;NpG'@$K*])qfYJ?oqm.E7JgG*KB.js]OH5gXK3\/*'!+rq$k"S6L58U3RO4?N(&_U+`%!bQpo=6U$S5ELLp/j:=LhI3CM19S+f&VGBOQJ%YJ%T!,Y1.>a/$>Cc,*se?dit,]M$-sZQnW&G\@k&GS&fd>P'mrL`@Q4YDlFc!/%&T\nko\(BRGhEdj;kQ7U%_.B-(ZE"HbTXYXEJ`*t3^SMhQC.3kfULo'$rXrQrM>L^$Aq*hb<p>cJf*O.k%T*#4RK^/&k+5fopL)d%_^pD??ToEa?3Pndhlj7#?afDo$sr7RiOEfa,8b0,FHBdK*E7D<),;0CLTL[;/0$U@E7!DJ$mtMHq_1B8pl,=mFEN`.kWGXu@LC.,%*]5/)9B9dq,P#]"ab.&U@^s]%dAdsCc;pDX"M0-$X1Q!JgpdM%3XC3t\K83ES_Q'1:\<#Q7d5QU4t9He2qVl:5r&XD>O3qn=E_\@%o!9(tb]"7T6cAPOA*@BZ\JdmgEgcch,W`%E7$,IA1Qt^1h.JSo-!=RqFG.9\gA2Rq?ett4J@L!/f(6QM9MB"0_YJH=NM9%^bV)gX%'%U>EfBCp96j2>MFbZX7cUX,X/#K,$o"5s^r[\fcKBdhJ41icRC4u<D'1_,m_4[D*:qtHGF"S;p:SfekE#6[k@D<=';[0b[1!:R"%]UqPe92p;MB@T+5TM>0'OYp%pK_hg9Ol7#uO:IL.IsI(71$Cau/4-Cn]VZq6eH?rjbkQcBB6TKSMY>Sqr;Vss#q8Yu?>^,4.SMak%%4c>SX_`$ldsUMV_FBKmR8l'f3PlJQH7Vk`h2!!l*%$l-ir:9@JoD8(%dkn2e$ou/l-Cp$VI'p.<L0[obFPCf-cDT-Cd(:-^Q5]I%,&8WFikHUB@sJifR,P<'=22dL$YALkI;@?-FE\-Ki:Fq7]]^([$emdJ/p3XGXGE^:Z_-O?]o%,a]`p$Ac?@t]RYNS2.G=H$!L,s#%"7WXDQ6ni6:n6-Q"*(F4"<b93UemCnSe8(fW'8UtV^r,JAlFo5Q42:LiJPF))#NGGRYe":'<GiEa*LDo2#/h7JB7#=ie*f\[/$6F%a"nQ@"r*0+.K4cA+RF.u5?f8s'*)>p8grEK?;J+J$5DQOq@UU5@>(nU&C&.6'<d1:P,[G$Rji-5#&d6leM(@#4ahCgOCIgr_\;;h%!BV(oTI4.4@d=JYLXa'`kMtZ24bSXZSD!sQ1[q0-*,CP\E'=1P@RQJr?3s)cD2:>][W/fA"q_nSLC"Kj+,S[uc^'uff??b&;iZp*%Vga<gHPg3#-U]bqg_?m2o416(bLmJ=mHKH#`ur6ol7cR`@J"P,b/**j;\]1WN%kj.^bd(R/i-e,GK(oX2PFboX/?^UdeZKU,UPpc%0+-l9cII:TN-Q$<KT5*FAfg!qk/og>h`nl0#hKIrUN@cWP];8u(p(_;ilr7EOKXQML$*fXS"Ut9J#cO,+-<ahY5tnn/1a0iCJLO/%gte$3n9_T:kuO@8H+56gh7_#6_ERGRp9f;SE6kL$@sI&b6?k[-K\JZ9X!mW%^Yp8$7i6;f^>:hTmpUYgULdeYA$`9Q^.4Q$le3c(%4O?]$MPY?)G*oR'8Lo+T8)NT-0:C]G$"iJa^e%l:4qR/3,uP$Qq)doME:B!dr6bFuGlV--c#6=jP:$q*m<p_a=Km)M/-pG5P[%rh%3V4p%eH^"hnpY4+)!(1)-=o9a-/A_1pB&ieF:/YLn$!C5\ime55>\Q,_b+4=a_11Ji$[4ECIS9m?Q4d4(NkIr"!2E;0ok:ii%$HQ%&<me\_6^m(6ZC*d-!q\1cSpmL37+SHXop,U2Ulri'Y>sbBEI.aR3q+6UBup*`<RHrDbiQ>Pk2'U5IeV\,>9L]DVr?L[a#$fc8p*/%2J!jB;f=SW_mI;]^hM"eH`u:4%]W7XjZ3O!J]ofZ:?X3I_=60(a49DKMCgH&ls=0K9%ZW7?8!R?_$q*e[K=6kLCp7@F,r'OnLQ6m%Sih2!Q#mg`%"BUmm6NHQ;_AF`?VIH&2?_*0c)tk)s%\a1C'<B[#3"t8"<5D#ep0@4q`%c!gcY'Yc<1@0ppr\e1*dF0:3b'?.jN%n%XtU-0"YiTT?M=^F#ksqH<O/%U`j0Bb[0QBsq%qn)iIL='",\=@AL`j[="Zl*L3^At]dUr69/BfQ0-,=nXJ#u$[T8/Ac!"K-lJn#7%<X02M&sbhBEN7QG%eDP3^5a1mFSKTn7LU]^QT[TJRrW'dNk)Y<A&XpKVlq6*bI9nGf3of;F;r[)q>nU)^,0'"j(Zbh2aETPTAoKP%br[5YL$\],Xs,%d52^4'e2naM=4F7\@T!F`6U?ltlc"Z/FM(E6^-WHsAs2ZelpO%lI(i$"7SS)R9R4V12;e+\"i(mUn9]eJ4OB0Y%mmH+U5";#S=nMAnc1;5Q[RunL[1KT`ll=&U9^Sma(h9!8KsN)b06M2/7L]6<U4'<Y&tdQG[W*s$f$/IMJk4IFC"=dObgc(#?spM0%$>G#:XUA?Mk:kFL2B_#k;mY+[.D]*Z[8JJ$Z?F+oKRT[dG`cGh2=eV*$6Mr$.BBF)9M?8Nntc`A,g;Ph4.)SI[85_^UM!=lil[tJ%KF_H0=>"QKZ%K4A$@QL;hW1Q"Sr&1-^clH&'U]ADb;fo@TqJQQ^OYj4pe&ESBh/Lu34`^BBb%d7L92sRHp4r$g6sLF`_a,7;V!0q%pYu<Em(SfcL`r2G3&]H%)G*#R\N<--b<*>X(k9PrY?`AmGHig2#c7g"+L6tN:a^Bc$F[h0k%apiO&^H<H_tkR^e3\Y(rThIC*VO+%Q-C,>h/&iJ4f%JuFCR:;=hZUSd4Ym&g,`*#m;8h/Xf%&%Fq7!PlTi^nLeDbSb>WnYAW5$bIE=lcK=/?mJCrOG#r#rXgntFYeT]c'%:oA%G&o!'.!0^f6cdnu,K9FL!&pK=4h5:tLOpsB2`7uF#:-Gd^`5,OOZ=38s*#n7Y3Ou^&ekXn8q=$6<R4U<&*`K2EOWjpr(]hXT%ra7',_htrCZO^NLSn+Cil',;M,^84dPYJ;9,O\F&o"8dd#@F0l![E(`-l?T6r>0qeAJVa59*$KYMh@W3:OTqh_D9db8+j$fX6B@b%0bd*_<Bh!.L:CG0%YVAK3K=@89pTNB0$XUF3]n-9=6fWAo[4#U:>6NN1gN7qfNbN3Hb2dV0kFOc!mrHl`L8rCf\+sa0W#50cGYq_%71dN['J0$^X$6YJkHbT4IZ]Wf@FJp+#V&7!="T"5`#BTi^!BSPY.F)"Z@NBR+-3_Q,orjWp*d,R<[-,KS86Q\04g(YD3fD1"4"=H%V2Xpua+oIu.:]0b=]`e51.JR><Qo%!gPC;:GN<6F_Q;@WR)If@B@_JcaY6o>bX>F9ea&E,<jUu$aVjfi.8!t/=:g6N\65;\RNPSi%WgTaA.QG>b_QpXm%db:KeG[[/0+jO3ba2d49f^dELF:enqlL#-eiaVb?:J?I2Ir+YaR$JSE[?JO<.h`lD[8?Be>4\s?UtbqgBPO*%OJ;*qDJpBU.ud1ZgD[CHaQk?CGF-g5KMI$KYu]oI".<CWDnL\.EK*B4p49IY;mO]K,((#sBkXOQT8;-)q%K:PV$Bor'c5Cp-E;E5%`g1C_Xr*f)A`%k;@9jRKF>lV_MUEZfj>m;"DguVO3LHg^$`]B6EjW#X%S:9E!c0FRS=\JOF/m((0)jk6+Mm[CfER)Q:RaG<<ukq@%1cDY2m<.PFN#[Bh7WkSfpUH*uQuhuW46Rjoh."V8ao7I+CJ)`p]iZ;YnB@_0TICf':S#Rko\CJ9f`d\'dVS>d?,/N'&6gp.g@YF_%+n(l'-pLkf<igp.f0]3s2EK97kh!:p6&N.d.AG0h[s)>;950(g>q:h2A?0M9k\[tZB`o:-?bO-^^X6;??f.d@BH02lq6!(>_<Dpb%S10Zi6EBr<ho2F;i'>q,'qCA0"GrJRHo=qLR7?mZqpj['I,b41Q%X-;CYb1j]2O/[N4W57(e+3@3lqp=J&U/?-6i2`j(uGNNKmsl%,lFe4DR<i*n0oA$`cq[79M@8p>Yf@ud"j0,C"Etpejcm<rUI=86U:_h%UC5b"(FW<I\=,p&(=;i#TFuM-+D.N&GLh[_O`Y]r".hq%0Z$p]Lh:+a.9_dFabVF4Yp7EF_\$_2jtt!!;u$#$AdNC_lL.GQ$s(Yr47G/s`9T']RPRG2ogcK/l/qp9<j^E*,/k3Q`+Xi,B3$7b%*-b%%Z^MKF\*+5T<fjf<Ec[(UUW:IpBlCu&aOP2'=HBedX6\1;Wn?+mk45/`V78AiSB:ai$`UakST^CGV&sfib%s=e\?1%Fphr!-%luhJo[`5ksr^OJA0C%>EJLEGHX19\n%0`EmWg3#CD[b'qMQL3@q)U4;qW!G_@*^?l_'@JV>IAGqE7KpBn?!iJi0.]QV\:50Ta??!%f[GBkZ4](tBZE*igM-lIUsNSe4rEHW3KVKl2LDV8HXd._hUQ>rVjD;NhG3jAq'`+S:^oh`Y.53;Y6<V/Obo/hdsP5U]<U/(2JW5q%qu.,.YmB-hf6_45[8a6_\mPG.0[>ap[CbbIes^f^O="VP!WcfCR\3cPfu_7RNtYiQ./"Y+EBM5f[IHp]eC&XQrTMr`Pc7Pd0S_)]%D4il@T4Y\rNH*`+2qRq[3Mj@K\Ob<J*\4@=GEomoqZ7H#TpZlaF;_1CE8@4T.YjA27+m3@-e]Y7jec=\e9']7!($NP(mHRXq@//b%B<'<`fan5iZ%>hf@Q(tWWGeGe]l`sd3C/"jG4DE:dO)i4Y(\>^]+:Xq"t7gcdf:)3:M<\s"[PFJhn'*TJSSG%S&ksu-@\t_`8<'g%qY>l=>oh4N4*krL375B;k)<(mn&UZ]p%GS52qGe0Rl@R!U3WZd)P:^"'6iKCrceqd-@DP5Vt;F1C#1#uf5>u#,MmXPWgEC!VKq(p%*Kg4+-)UK3o:@u/kqgS2p?<S]e%B>jkf)_QoC"ldg`p'a3I^\2K1h5MoJ9>pHOfU,k!5<:K0I<qKTP4O$^/fD*%o8OR(EM#$lk]U%F-,26L&*?ACn#p6la+esjUc\l$hh@]qL6`L2*O60&2(qeZciU5;F?&>,eINXA_p;I_Ze5r]7<9/H`C7V%S+jSTjI.3jQGO+IXRMB%c8QpTgFSg]=loe<mh7KhC9u,-7!rUU^NUKQlZDEubTX&K3^O>,qSB`"5Zi)bZcr<dJP;\IhL3MdBI%dUI$Qc(p0_j*3AB%6pK?WD%N-p\.Q&7ATQ@JWHjrVA7jT35/r:2CeehF:mF,u_u5(a^YpS-1D'&#>9dK-V-0P+F?S*^7N8]<Z6em%cLiLO<<YU9rYA$<T0.jR,h%-9*<lZQr5Sio1IrY8A:CYM)m$OL,P6D%oEas+52ULL>Ui`\=lCR%"\SPXel^3[7CX&C(`G0Kus._V!Z7BXU<VYua<tUtI+=a=ZjL%c.lW'*lW@P\(n#tT3:$WFp+FLr*VFT=l+@p%d,Xk4$?O33T8=DpT;QZLoF,8,>S)-nc95m>0`;&;p-D&i)@hpR/5>'Np)D3#4ebT%4o)T0hp6Fk<p20^TZXAdn4DRm#V6X.C:S0PB%8S`"cet43\IhQB-0=ue8k'=XhJGr^.Bnh^A"VgJoGhne8iCt]>E(1OYO-+?Mo.6%T3KSHc7P)2,ZC.]_JXG<Hh#AdkE\I:dd(7e_Qj^6ptYF8=mheahWYc9cRnUtRV/)u3m(c-BJ4CHI'-GHQONMOjMN3+[iD<qpR(Y<%D5W.,5.A2RCDEIGhGFDoFh]rE]PkMhO39oTS%fU0WTB)seE$sG;p0`r9&6D2A#bh:3ON*G`H/F]kQ]Sg"`dLcV`1QE>)qFD.E1qE%jF]TP'B0'g/Vj:CbnQdn#ANU)fPPAKKV88M0K->/BAuk5Gs.\Sa&MT.j\/gLXNgX[.Gs"M%_b4P"@i.t:bW5YFK=U+R"C_S\+p(H%<YW3(7X_u_Z$K`hrYPC65EUF<@^BZp[8Z5>KruMerj.%Nm.UYPZTn8_f=ABVOZl0f5ON:bRX&ls0(]RR#r<1U/&7esj]28,e5kS6%hSJ\`mpQ,a#kkO`@JoE^J,]^U7=Y63IsdJT%AWfM"Mk',mE`NFo%UqUG(0AODghQMc\.,S6N6f(D[FA3NkJ#k,-KR,Md_1Kr+W_6%dJ!p!;PCWbHQ\;s5N\.-5X3u.eG`/<QXG*0<Jt2d;.e1#2A=JkfQLRe66Ls/dBrW8Rj"kkOq,O2h633p2X5ClQEVQq9m81-oXHQp%dQ*0rT@u>T7halGb3_Z*Bb.S1mB(-a88%Ku$C[TF^d#$F`#or9c!Kl8YoBi&QA.]@LigCIbbjd3m\'=qp9p1cRl71UC<>cjA.3?=%`,E.<2L-M1s)+jIdrONE#O9d!\:of2U;s-^Vs=eNDue:-dir]S@+n<@V4I.4_#\_/kps[s)c@#3'TG#2B>A5KX33OKIbbL#>!Y9c%_1H%;#h-m-7*lJ!@8O^fBo"oJ(EW"%mV$*!C4Q&+ouP^%isf;:V@EgIFh**^KiY9YdWQan2JQ9"h1.E<2c$:"e\P'TY/pm9pEr4^%f?i]?m6Ka@Zksq(?ko)DlW7Cjn<I`ECk/`Jr.a86'F\'\Ioiq`[a.4s4N%C^l$(g#OMBm=L\1b**=eE<CU!!oE7k$>N!PH2a!=n4%<:M=#Fb'B`^g1f*h*L?-?Q@CnX%Qo(Wh<-D>c@7'"/9TuoWR%%96l"L@NI7oYrnK-#%'rJ>B@8T#9puRJ!Pus]<11A0\>&`R]N^c%>OL'Y\t3fnQB58^VCbTs'cf$4^nN(90dZu2QYi\FN8!QBG#D5s0"SW!50<QH5n`R@+Oa.69*OXlZkE5`3n1]GgnZ<T0e^R6eQ0?b%9^P^/Ann"8[arIt5,qMuNOoO''*bd0f@.?oRnA:O[2?=*Kft.4AW@Hi&:5-h,@8KP><lj2)#'m4.WU3.k!L9rpVKR%csS7Y&msCQ%7$(KGGn2]gC$rsB5+qLRd7PPUg%Z^10]SUtM<ZNW#"/CVH0NWh@A<5WhK4&G__fNG_@T0e=W9GVRp$m?,,PbZ6[@)/_i$4bB064P%J4+e])WT+[Y-q@pk258b7Xp2U]h'%HB9?a#l=2f2I^V=b0o)-JB?ds7(8]d^aV^8.1pom(KFf(H?giTSp`qUdXp:O`<0<3Io>u7.%/?\TLFR`<$bWb_9)]2cY$G!1$6.<Cg2+rVdp-$Y;a'rFnMDX1NHkl#>1D'X?b,<N#)eZCHKWrp'pA=G#;[*+Y9iV0h=MK^*4Wa.h%"tMgTC5+ITF:F(e4)3"mfo7/eb.J6A"?;Fh3LVWEi-+"9%]*hj;euLd;_bK$oE-nBA@ObSRLtKTk@.YaD4n0YPbr97Y%]ZD9)/#>%C443[L`m%V>UZsu;\u6D)9$[aCo-KflX^=^Yo`Oj)!thQ@5BB^0V3PHT[rMa+'0nLP`qm`^fX+rp,Kj#YfhTJI)QB[@>5CDBOhQ@%gf2s\>_T11f$!+T)2!I0/@46i0hXGgMViu$VnE9O,Am0Z`qh"dm5\^teL)8GUnQXq'K'FE<D@1dPhY#,k"Q9O.;csAOQ^Mq`r';Y%!a`'f_EDhG"%p)d*YYWgC=*"KqXP\^(/IkX!trlR2+He.`I2!L#!i0Eb:\s,p8@a.@C-'(:qp@76X]K=S4-H!I5bHDf0[)jL249s%@J%KohOV>fa4lbhh]Zd6aZ/+d]#F;3GM<u\3j*!T#VKA)U'3Q)F+iQZJT7]5nWZa_:G9e;jZj<gG[((/"f8OGh;;g>#]9k<h+gRJ%Li*(g+oRK+KID$rH+F1)YQMblW?Tk5,"-@/qq.=9c5>VLX<mX!gLt:mV7Po:d6!\1AW.aBP=>k6)$d8>_uoD07LsNIE47(i2D:rn%@5">tc,;+JU's!?",*k%jSr%E'qmg/:IbZk>DtYp2I#JJ,A6ASfc:T^3k?17]-Y]+<6WkU)PmPF6@2u?6Qi+Kl97^96r2p)"p7`@%?QK).B20pK5:s"@@-!1:'K2@#2@rBBoa(RmUU?fcebrl75bN/57?Oia`Z4CIEc\)BeaVDHhX:(/-7cq8_?;k^40%>&Y),.gGYF6U%MO$VSf9%oa+UA`)om3aQ*sJ/':1_,M$,2"S+S/<&Sg)N<'heC,(d0U9ju5CD>Q^<CWGF9&.Fo.`-U//Ilgo\l#gocOS\A(@,Y#Ln%k:ke@nRaMr6`;euL<Nm[D&%;i\#DPY<Xb]Y)<Y.leRQ$amG$jB3!,an`/]#sRq_g6@CNB#GrV=?)2GHGV-gD1>"s)C`(uJ"Z[RE/%CLp<95+ADQ>NcXY&E\;,Sb7rUJi6af+6-7RN[;;cBFKR\XpBP>:;e\4@^YXcGc#ph[-K=-co0U$CID%\J"F)mKQ+d"cYju(583U'%[gC]5N("EJf3L<HioE=r#Ur*]/"T1Z[PZEcXeh"#0Kl7\'K]87fPH7J#TZcs9E.%dYOqr-#l2*<OYa1P*3Z_M!!#Jn)`_s'MQMG*%dTu!U>(e^1B3\t$5N94VSUE$ObMkB*?Y/Tchp/I&5+0AQ7`?>>2XFN:!X'AgGE)54W5W=fDmP?8,FjZRT-mj%2G2e\4-motO8GV_%BCd<]<p.oL%SD5-^p:P+99a%l4_07G4Ejr>cZ+mZWEMr@AJj[.PJpmC[]#WaHKR<nTXta_/AHAPS?!7c`PE0nl`D-_`!O7,a(@DF%JHiRHZF`8GBfgdX@:-#Ll;PkN/!Mc)Kk^f.jA3<<e\qmGPgH8?4'SE724KT,:uo!cq<;^L,(BXD]>PZ:f!oN\,-)j.H+\IL7oj:j%7r=ZP=Rqo6_d@+;EMEIc99-,N4K??SW9`/ibtpNXPSNr98n0ZaFdoSNAnZkeAgh0%)2aj?P435/b@[\:mPMBWCkcE<1:rc`4'aa3%S#aHOAgm5&^]bp+ZgM1.L163PJ8E7sU5I/kA:`Q.Pa0HhjG][4+XDFGXAF=AZ1Q.uXADW;]//jW.hilD`gn8'PS%_c1<*OlR*#13%P#]61g:?*GKN>$IP@_'0BlV2lAi[(;Z%;5)MoZ6BY'gP)V.idWE>?N([_N4bAm;El,9mn@M:X;#?4Gb5XsI6(#fV/8j\\?XKJJ:A%:qV74`n$0c7q@9^[^`=M-@M>Med07,p$8$m#YqT9.We>,e#U7iD5Y,Qp?!Ug+<."F!LpX14bBW.(->q-X[BS=B3[qb-o7[.6'2Zb%Kq".N\X%)/7^*=?@;[$k];!hlK6GkE5-dKEC]Z688/Bh[)q8M]ZOQ3WO[M*@6P&ME[6eDVi]4btZ)nJXm-&:_*1eH,0![e5%Nh#c%iXnoZbhJem3j4ic:e%Yuar#&L@OB1k<O4fYJIRJqi^HUU8P)"03?+3*[C8GUmU[hu&Qk*_[45C+V0tfkW'=D^&WsjQD"Q*YG`PNp%fMOUb1>2T<-Zg[`c4qrUY4h*rK!IE":!f5]A+4@j2F1,DH/3U;eL6N16tS[D`$\lfMO;!sV^nBq.4?rp?Mg9W'EB@jA:=rI5-lgC%VAX"=BmQ]Z4AfWgW8A+j%ZN"rqtThP"V.'p&b&Z9+Y6oZTiM;I&nYSee7%\u!okC<!*Kf$\@m7]&_)DXG#Xi6D^kg\%8RjRb'+dZ%5G(IuR#4CXFe2`.R6/7WpEL`bP5'76CU,f>)+--"=j6uLPc(=($_i%`q`Y[DItThE['eFm_>mI&#$OR$"W>iG'JW[lgGC#cMUENO%UaQf$hYA#Q]Xjg>jaF>^gr-WR&-Yk$CV?g!@`K'83\MG&&;/_\:eiil)crg9;aZsif)m^tM3rOn_rE`r&:#_u7hYMoc]776:6HM$%cCC,/5$rMu#_C^>@PJtZG#c=f%.>s3e&Z1'5Ib'/8AGK3`\BfcYEArVJ=q=>UrSFuq327r"SCdiESO%+D6S_"KGic=(U52Skbk;5%TfqGK_5FJY509*&3liS*>rta()KJ02UFJ%)?^VJL$%f+[61fc?epnDN_48:Xg?("Wf]$>R"bCGNf;DgN.i@M&%%d#PrO@DDHJc*K%a"aW1'd]^Eq0\8YjKW[B<0q>F_El0L[Sbk)88N8fF7/)2Aa]0gaD6/,gKC[=!t]DscKbp]TG`iH+sSJK9FQ$`jP.;1BrGC%]<u$8%QX#sse>93]LK=TRl/&<\Y]-=r]dQk1Ve(`Fo-!Uho)F)S+8Ec%q)fiQ6@<<+Q[('a:0._EI2C,q__Vc)`**pUO50Rm;PY`_cWnf`%a)M`Od&-r!EsN2K\6AHE,`<$@aCiL=JP[DDjUpX^f9$bf]giPD%93^FR.K&&!2G6mAgUe*?THJgiR"+^i@(B:pIn!mb5j3#hTlZr%G#sNBQ%Dkr(i]eaDQQ3tADNi"-`1N)k3g\.j3@*"N)P*<LqZcW6-(iB[$\o*V-pYM>U;UAq*cP@9)u%@DXGXm,cVJ$fGh[M8h=F'%UQVYt':oIa#q[K32,=is=AMu[q,\s,F68;_81.o]l\sO1H";jdg]hkkGIJegFtM8dbQsTm7<#Xi1Wc<eN`ic)X@q<E?V^mG(,S%7%a-Cib+G,Ru%'i*/SBJYRAo_QIH?er%\:-SKm29lcmE(ZK.%p6i&pH.iab9<f[,@0G(_10np<u#D5"&aDFd-Oo0h!nO*p6G^3F!&/%W6-gR<L8-V'giY.SUX2hkSbRWG6/3?1!PCH`%NLt2GY%L=\i/^qcB]Yo8OFW/;U^452=@56)7?MiB)9J45Ze:@R.&b2$oC5#qR?3%W!!/.J*F+,<<BFk[Qr[5+7eC>5PF)\AE>F`*>7?-3909dZ.2AS,^jAU?N%N#?sNhkQ+I\uTT=osJQB["Q+9oSY@N'p22d6D1Wd)O%HaFb`q<)<S8<\YrHL8B1R0IaZ7'IhfnS4%r64?-&$/!<4Kpg=%Q5TPLZ$>Ok7^?>fB^i1X("h-LEhfg07L6k9i<Or]+Vj/Mq?5e-%+]8>p[+.(_PJ"tH7'Mf,nS4%rimjK)%]]US$0`'H/*S9BAZXG?Va/<FRLg+E\_AM3/2%T+X.B7W+)<_Jpq9jO9Y'.>^%gr0>MHqs%+@KUY&;IP1c%NHm?V\OUSg_gfT!6H3YKkGV)s;!O2%aRObB,m#+'B]J#3gJf+no>kIQVH`JTMlS7.]9OCoI1S4JNBAJkj-aDd]g2%CXoa&F4_,#5_oXsIe\<TXY48TK!McrRKA)tH^`-p:E9[Y$b#TnGNt@a7?3b@i7QPAa7juYZW?Al_EE$bLsLTp*YZqfU-6=h"Mq)M%?:_D?[>0RTGbB0N2U-.Di6?Y[W`]=!nP8N[@UQKG(O'P5PnL5)WdHC>!lT9>,S/K>&Wh"YeTunI^&fWk,)0k3be8X;#3W8J_70R`%*eI`,o8@O6`^5^G;Asqjn3+WBgRqQG;*8b^.&%\j9LN%_!_:X4dKpK2dl$js6kts6AU5gR_2o3_&`nFZr]QI'"TsmRL71t-H,kQ]%,s-^n;-hVHO!jDniLV984;eu7b_P3"5]"Lc4_D/YMC/W7MC/WGhIP,u]1VANk[b,h@)/pspF@*F/W>T8"!NH,S`<T;38%d3#eZ,W%)^$&@Fr:oi&QdE#+C+"^mr#26!b2m1&B#;&5$tr)<\]S]=_7&]_n9;e$e(R>.t?W5%s$2iaF%1uKY)V#rL`Y^<fLNCe<)<X\f5g7%%A^h>Xmh?R+R$4(q0YQrr2O=Qrk*^0O+4Kar;.QMj=/.k&]uYac`#J+@=j(n"kROqZ-SR65p;f.0KdoJR(rIjkISaLQa/`VH@dbj%XcE9A_OudWLlj42p?N[JB`Q.4Rp,,DbU#8HVr$hD@=+og5=L#efgiM'+ARLSo7<c>VDql[`Y3L)[[s[#<[drFmlZCa&3$Y*EL>hk%PP]V>%4MQLafk3Aq#aVacHdK-UAQ;"Xc*ri72-.b(,gsl9QObMoN>W*#0f0sYQds!$XSLp:!pr/(C#g0V3GU1j&)&]6M`,f?/(&?%!hutN3Db\GpLJ'QOD9tDn@PYN1$aOpC$8!(>t&"(>7%%X>*lq7-bc%T[:H!6+b)1FjNQo.hI8Ji=(ZhKaEhumd0jdS;NuI:Z9Wu'%c-]dsO^47-,@;RHKD&IJWG,'=g!M>`@UqNX3h\;sOOSNa1*.Sh6k#'($-c>&WjUOV"+5\n=47b4&a8sGe%"S(),jdu!,*]XXBUV[%hRs_I_;_i!l[>WSN("@Y4+a!.jZA1#gJV6_&Rot0H5]>[6W"]LjO,9mkqY!ii%#Q@\FK&sQJ+\q<Kc$Mfoh1W>*^.JjGH^#MB62-%3pL+#gC]P!F1<iMW5"?\bIPf"9W)-6[>NOR?NeV%a0Y[rq]_c:Uq;/2<aiN!Ls#^+n#^_ulQbkmC!X8jU.[qXbH<;e"42a9o9F_Y%:7oW5"\'KM1:H-Y)hX)dPU$k4[OL3$)>u\/2+:a4&EEC'Gf-e#e2]s)O^jHb&/!/`XT9q=`igO%OCU^!MO]I3%TsBd@]*G-Q&B'J%__ROKd&7io*H"A1V_hfb3k,Q+bM>$<_ORKK'<EHXj&#=oNr9is_Ku(,%nRA=Qs$G%ZFkE<i3Z@W/h7/%NRqAMeOdi)5=HW-l8OBQ%]uGWS_@*@%nL.e3?.d3(S2O0/Go-gGZ`h1p)%WNX*Y4*Y0kETONmpNb,E_]""h2=dbG-'C&?n[:I%i`!L5?)4\:=>[q@u,&'HoR\%\u<b*Bt]Hj6BE`dbfXQW-,q30-(;j)5/q<_o#I;<MPRZ0:c]fFh*FX9d`9CcJ"Wn5Ad(mCk$ncAA1Q_"9mKEi0Q0CaK-ooJ&CCgE%YFMaZ-uq-@1J)^'*B]F%?&uPSClA8:!sW0f?cii%-HG;JZbSGfF8P!cB(akkr-ZDdjAK*8I@6p9,pN5r.]In.0G'#/B`Bu/O%/f=%"SLVl*X0Y19Xepl#a7(R\0Rq=`#sB=O/t5OW]S.S#h?!9GgUiaa8--W7o'CEdlAoi6OK5>3BNDgXt$Ls(MnXgqeMt,l1XjM?`G2L%(E4FO+!=mA2_dP30d0rXMsjQHQl$LcD]E\P7sr%UrHECiN$$JnFjU6aAg,iMR6+$<p%,>5b*^!IkM;;U&0MI!!Km!6.T\WT'@G41%AV'bpM*#io<XSt5KIe_&Gf)3P`"D1GVcg7r",M\.K7$gs?YY+pAbZ?q^^>ao2YsF0=`<Mh?cS#T;iT<MEIBt<(h`1*Z_$N"Mao"U%IGA8p4@.B%ZuApTbd*,`(Q\@PmIcREf,X8qA5pmsagEc-*+6dj".V;S"c==.6/YL>V!P#qaptWua=$Tin:$gV&c9<K[k=MHaaHT+%FcB"u"2*Y?0&C(pID88oJ-D!LNFDMarpPj`4sG6+oWOtg]2r2RL&KoBg06B,Ij9X<IgJI@Y95SUhaafu7fG'X]hi-A4\+]2_#G.n%#pWq"g-+qTKkTBeTt+?)JcE?Wh$D/39N*tBIl3I>Q]DUS?\J:,15G5rJlV1mp&;-KHs*h#kl2"0e88Ru3.l.20dgVC:YXM_^l2Y+%QndFucKM[@p?Em+,9ss()"P80M]?+E:X`[(*(HWNC!U)cBAgAhBV?rg4GF@E?Nc'WX(D9$K:sH'HbV^Sli/.g^$+P(s4qIt!\lq-%%'1/Q]R)p_qm/dZkk6cd?!iNn00q^fd5Qeb?U7dKmlXr.d_o5>nO3^)AO.4em!I[bK%NY5@#'aiLQscV]j=r=<MYM3UpT>18-+5A%E/Y#j!WR#>ok!(S1B2X'2nNj1p3IUm?>kM%?EYJff5^A-o4BX%,-P(H!nX-l]:?\&'a-;I`I-D*Lb*kU(V0r1)0^<qkk<.?hjjo9%)7mMu9CP$hfnhY,H\i]Tf*d<k9iqJ#(UmK8HEXcom.I+"k^$%E?8!H'YEq!#leTr+(/J7+A[fJB`@Vr?K'&j*d-YBbmG2+(Q_HH1%T4`]q<nY=k[l7mjQE6e791OrUEk8E?jS"2]n3lPT,=*sQHZ@!nHn`l)QL+@O't=%Q05\\S2sa+aQ<?,dfR_Sp(q)J&_%arOH;"uS%SYm3RCil7&N/uig;RhEMB82h*bNSJj4Kpkf\&kB$B["_TTZQIe)-$gN9@$DNR4hP.CjE?C+5YmdZP-=rY;XW%&QkSANITR"?"A(I%#\S8mKWNJc.U%+u;grZZ>N@TI3e\c&_N(k>FJc_$R9e&f[Q7u,9NC;tlBJt>\]1>nGrhjRXNgkfq!:P:"03*S=!=CnV&3@+-.up.%CiuK;n+mTJX\M?ie]AYHFV[AHf(Pr9oaC=di+_RY?gi_M-Z"S(!BM09\_@O.[MEEVpKR[*d,l$#Yl0RW/)ho7&kO0T[N=(k_N=3N%NGZsg\0b7hT&QOj)5(-V5Zf*Q-TQkb-tCm0`CP5m=%<Y:^];W8@jC$4NJbP_JRZ`:)>D2Tc'<30X:5Nrg\XN[5OoSq'q2a/N![5H%&Y0P!FsO.Z<p8cdb"#L2j[V'l?2_j["=6HDJd*')JtCgl+qk[T:j8J%cib)BWIiAA.*gFJV1q^km#'C`-7Dh0pg+AlIXT2)TG\9j%ADj/0>$uq;5C+8*(E\iQ)cSKt5rpS6dfU6tLW=`@h?5,m@"L/RS"MO!rQbC6JI*e3o:RTh5tPF1$WLeXRTcr_-p)Zb0+>f5=J0cK%pab/Y.O,$P]3:,d!IEJ$1,_DNTN_lPQY,:@)lD^F+>"tq[%\'>:r]^?H6DbHffSg3$rE0'[s&8;!^1^nq%6`%a0)NMmKUmGJKFC8%jZO.-O%7WoSE]T4M*Hbl%Z*Ds]A+n1Kaib$RW-]>ojiW>e&PMB!\L=.o8s>/L^c(31%n@:>p'e;69#XC+Cp'>=3o$YT^quCh8&0N%r,-CQane,)Yq*7HO5pB!Jb=kJ7EcFfD-4qsI3*X/"<Q<0+NPLo@+2NE!umlLm._Ao,pW"?1-UbnQ"+Et71P:&UGsWUN))pIn];Vd%Hj[`e;0ZZ%A:O9n`[?eD8Lj5lg4;_\W1(4jhiJ8e_frd)bYQ&WkFK=2XCMsMg&)OP7`s'$]*lm0dX<C^YGZKsjb_7.dX8Eobtl?`%q2(4Fru@jAEaX?*[VGmX1-`&)[17CkIL;t0L/J]e"n@`OF*0QU_i_Eibtg?Q%2#%sG9)*C\&lAc8+&Q7cfQTpUc1Q"D#8.T!Qk[+%5U24F5gf);HLTbk7>$Kjh+_F1*k3r=:@5^Q[g&cRmTNSh"pX;Mqjn#skcsqo2`<qEakjE_5a`k1!=Gu!&9L*d$Ooom*N!*Y>G.g<%Vq,(FKEs,*`cqkj&GB.b/C8ur)r]FZ(oa24b50h]TL/U1]b&GcO5no<PWde6"ML627OBN(1&f>`;CBQj4[uQm=XP]-6#jiG9YccV%m;5\.kuJbqV<.LJL35MFFCb8`'mtP`b-T-g-?>cpohmDUn;;I<6@bIi;^iQ6=p=kNs%kqY@Qq;9a(r@=)#62W@&#WQBXnRH.tOt]%`6ej"D#jaWOq(\1JWdDW,oQ6P<Qn0Q[,<IE.7PN%I&!IFh=J1>QH;UA]:-ml$7PKr'<V5d],$[;nXaJ0DBIKX[PBHr8_=tMD_Wu@%ft+\'*572MW>ZL?H%g$hFh5>E_)&0QE7;>)%l#(^Xm9f0[4>h,4;M"<f+o:B:qS9nJ^]nZW0qlJZ-%$141+*^R6n7e_#'j#T83];%Y83kA+Wk/b$62(E@(<Vn6gt[MMsen,<b!>/fL1!!aAiB+e?>&/;pWcnrItH`f!>&87BFY4R!=K#662cRXDg1SU!%N2jkVeuIgZp/%!b$luG+[G^S,cu%Xpj>)F$`4HA(ebGj[0V-M#2d5b;j8G\nDc)WD*ZIVVI(hiAb[1#l_tdnp.[FE-,;g-";Q1BmQ_SSG!hOo"6(N%;l$%2+[UE[?juMqdJ,<09+44oC[X]%]n:km4D-\9d97P-e9L>d+H0cK=YJq)W0`#tYYRS^/5ERiEJ9[.YjX9QJ>%@1VDMV+D)7s6%$+XCPI<XciGG@b;@^GG86T()*XXefG\a'W(Ge8B"X(p)u.'7/$M!#()O4dEq5pX?OFB=kLV=(KJo%-pXk8T]g,nmcIj5m6=2d2NI%8KtT36PX(c8`k2Q?ipuj4J6GmimZrCh2*dR&N9KA;MDEKl,p#jaU8;qMpJ/WnpeI5]mCeKHmRGU;Asln=d;Jp^)A.Ede*9R0gCK4%R)?B,eX>%t6UY<nS+98%fCbe2Jt.h`[9%fpn#XXFF,H&6mZapr)<UePFJd9<QC<bbHL%q$%e6N&k[$I#<t9FTGU@*1dOlnZO4R<-%cs#N.FI<62<83KYTI_7<r?4j%6>2uA8ftlCLf7tM!P]4HLhhjQ`;-TscW/GLO^?I`f,<7L#YCdlm:0m+<GtlaRYYoDdE"&0&B]sd%QQ1f.[OZiT2C3#b^,8D%$;P2=/iQ!["<0oLPbj[[?e'FSR1uo4AXoeO""soH`W_It[.HPd1dS?<<)0#:0Ktl,'NjCDjRA\0B2dh;%pr`"GSa]=9bE\.>Ze:Z7!E"rNo.7V;,/Os:fH.oV-IYYE;.r)n]6UD1c[*_hhnM38T5U7(TN7WW?pS%.)kMPXs3OobjsPC.d$#8)%?Bk*CKaeEc/dBLiK\Z^7ejk/]l]ljj!#`TlcPS=40b^%Sm6s1hZaN\h'F(MAp?Q.p"3OZ3BW##tJa27n@0MHhY.9VQYD`qq6J0[(%,a_0.oe+/T*+IVc'/r7X*4Fm'5ZpDVqa24(!-op0.C>[shhWc#[7"0Wr)`(EW;m5B-pU23f+L%o#Wfg'=3.MN5a[)_p@=hE;F_Xd%%$L@1HVB##gB,jjWg1N>OV,E)'#k;oSr"9W]H1)k6krT^6s3Do]T]Duj[AkA3iuh&5:";'.l!F5B)<^*.SqWLapB*MmNNAOci2Th%W^J=u&:k06%&lL\$#p<S-f?pZ($8[q=m#W`kNDGr1NpIolKVa6F_`i']\Yu'O"_P0OM=iSpLsfYrY>Wsm5D:a7su3qkq*<)/;je+%1&Ded>g7Q(h,_K1gOKHMlYUs*]5IPrde5a\$,m&,8$RZEEhLIrJa&>c`[E6PT5Xlersg8;"3NVp6sL34nON[m!u7^,aME'c\C(qM%fe7c*NqVk.\"JP!([N/'(4j!oS4jImlq$^ZX.^T\B-^31N2ls`!/NF+#+?$Q#aflH;^6tUK/&>&"T6b/If0lmYW%R7(<2oRLj+>3%bV-?S[CbaJ2\P!m9Y_@?]C^FX_f9A0pc,W'O:uTY:59pU\cP:2RmkO\o[>"VSKKsd&K?K@7)Abp5'*kdJrE/c34SPV1e9V:IFA'#%I0H(:PV(.\-B:Hg"jiEQnI`a6cf;9PM]HoGEG.YJ66eZ(*?feMRPDWB(F6N7^)R"Ur8KGDp/P+<XEQ?a*87kldQ$l]CEAGdPeuYB%G0\Yj,7^9Il?Bbm4&HJW"P.hC1`l=b8Y%:+;;l6U2<&[d2U.sl38NtI"5&iJcqdC!Z%XnOiB#G-,uWO]BoAMe?bp5rOWde0P.g;%%JPJkW;^D\j/'Q;->#]UuI'F8RfK_"G<RO';P[;>nIp0@0^*/#SICk7=p4YnJ?C-]GZ/Nr-WZoj2'n"D$GFR0rqq:Ft.X)d!nBWk9%Vh">I?pBr$1pCCpA%o\=JpT7mbHL1umpL0f-9JB;CI(q%s'96gmJRJ^aVu;spLd'._*GtXBE<6N3VO#\MXu%/U(11"E,"\Nq?A5*%.RZ8lW:L,u#.6=LrRe9q&oV4V\kBm2Ro-XqY;Y6&i#1:(2m)s*g+Jar`FG5T\<<NB_#uj!&X1q/B5>Y60H!m,HPpa,"p8Y7H-tmD%b(tBPKA&6F:.51q7mEm<q39eH820'+q/'D\5rC,!AcJ3dL=G(J@B1%"f>ION;NgV>pRIhR'.Q'.qJ^OShnaD65J$S33/6leODqMU%Nc)@qOqsY,2_Y\\RD*#4-6L*kJ:\0>B*6gM4GE63:ul)f)\J[k2_\o,hREC<@sA@<_'E!Z\B<FTpnYWT5sb-)'rlp7oee"[a0Qo"%D?LusG9CRG>OH`&E!5'K`2@^Id%"o=E,\,S1kg@tn8g,u4Qb#-"8D,W0-9Bf82(\.C7WA_M!U1s\UXBks7iAZ\b4KT,^qjFB6?Gm%!NBC6-Ah5(Dk)jeelR;glLd6tf"FPd2^?!Iq4mt^C[,4FPWo)AfQtTYhgQ4fU\PCD+oPf<4=6i`S0cDJ1Q"(?5\*NRh`$liS'3Y0%*46Du0(+kcNn5oi.]2HBITK4S_f1;a,(Is>oh(P-:C[>\)dc'SFSq_sE%M&kjDqbc5`!`86d2q3?%Yma$oBcTEjsH%!D_)6OT9n]%gXj%Xor8*fdhbJcWcfR7cN_<fTo9a3RaS9\XCe:6Ji[M@StLmagG/W7GQ\4bW/5tIq?alf7`%eb/l)V(:_n<kY,0ls*!&@4Q0R1L%4s2<uJup2Thd8S[AeDeJJBp>LQrcFRRG2)>RHp.e5g%K=S_n&qL7YQ&W7R;(^,&4p/e7&F7eM*KY>uNZ2Mr-c\^i[rF]IVLk#kc7%g,A-0,l-_A@m7V9<L)]G0*;H8?lo^(n:9rPrSj7'*JTXc%suh%iUmJnm-Ne+6PY#,,!21sm"6aFCSSN?D2s[F6-Q[:O3,p?%)*kd%_leaVJTkA&<eJ^^M^asJ-=VE3):K"X7!'_CYWIN34n^[?54Rrq\BRs+H.LE/\c1.4q0_4Mbo<C),YLjnpW`m_#P#knkX:fA#ZDeR%1SE..@'"Q+_-!lq2Z5?PGc:6#@2UJ.XKk"SqXfT_gOYrd9DSmOa9+*QT><Q(ZLW?J/.`TH!\!Bp1QqD>?rglu=$(jPUq,hY!p)qZ%n/@P48P5@.,uE\ojM%*,7]IHMi6Oke/PtO6qLP=#s4*Jc=q.JXa`@!sX'gNY/L)[MQs%m3;b$9%0ZJ%7T*TLo?V\CJSg;OXSug0%%Y>3;?Pr"S'q1/c0b8gfq[>J.[f=Qtn#@\9`#@O6cg,uWZ`=%>V#E;/o7=pj'X_2a7`&o8rI3abQ3A_CI>I9teq%6UtKb@rg%7eI_%X)^5%Gr2#eJM'/`3QWh--;rC'qT7h=kj>lB6t)f0LZ[)nQeqgP)%d->_Y?j&R1Q.?H3/77WY!X*_@kb@4?]<TS?QYGUNa2f%E_gM%U&IdiN-oN(M1'9&@\9,%^Ojef]BePmW+eBC7;oEX)D(Hiqb&g&?`<5g8khZ94Gt:&J]l:<k#03DQ/^sm>,f87dmOSI*Jp;^?tiO@%2;MW>l2F:LpG^TDJ#T<kQYMs$]JGN:g\XlCdrGLBH`<m!XN^"6:<ZX21Qp:1J#T<kQYQAE6VX1+eb&Z89f"!Ga-UP0AjRDmee@7)%U'bU)U+C$2ka6WQh-[/Gr_cJb2q2r!WM]Pc29gqB!5;F]1_X=4>#2qO6ks07:KZWRQ`'$<N>$L2h"'XiY-sHZTDL1JMdbZO1PYjB%*pXh?0\1$`0*Hu%9js8I/&)X>IK(YdGSH[j3g1*]o+b\c=k?/6Lh"Ggho*lD)9.aQ'$/!tqW@p"g=`,(SF#l3/"^>-8FtPqX+`(L%K,7#?j*n<pcOANFQE(>s&Eimf#A7X[bC](&X!@N%\F"ppDa9ZsVn:NI>)Wk4\t!>rm*Ns1*'1ET+R])FC0.&>eoKt.NgrHYP;]F5%&^L[IRYJ%0ciuH'S4?;u#dNI3QYRS%0pQI'0U.:l0WuG"T"AZ7*C=9clnt`-n%a)f6KD9q;"`4MaTrKa6%n<e%^+Q%R)C3R$Z'F!%pa`<4D/PRNC<kTk!FeR0\29BYe7oO9^T%A#3/H[W![-6b97#BMMRZ1m7(KK0#Ls<b)6;"n<s(okamA\,F<&0=\a;11s#sa^rYd%8%Sk8"r8O98#f+f2."o'l\p$m.?egT2nMinn]7JGA6eoG^+W)ko9d#jnn)bi.mN@be5asbS2\Jc]7R"-4I4P6lJZC-A2JGYoY:d7tZ%V=duPZGEPlJ]N&+P@7h\Q#6U(0A6k&L)>,*G@trh3lBqml;Xku3^kB$YDomh$SZgUKP02R6=<KB@1]7S_W(O5>/g^O]IZ:N#":eE%r>O,$]^l-Cn>pMg21NsS>5n<HLA+99`F3VoVY(4eU`\b:YPRF_NiWS]Y@[*Of^3NBFdDnt<VcHF3ZWe>d-E?[>jluE7p\Dg6Ed"X%jRib6pUu#qYoY<,\=Kr^;rI<NZWe=80]E<5gHt't!DuC^)4(bnFDD*Ol3]SL>9.T%_Z2r6Dh)gkWh5%?Ed8tt.l0>Y_p'J"5!*Zk%Hi?Q@`S@n)%kRJ_;Ho->nIn2I)GtLRbVGR5C=%NED)]9f&Hl!i73[]eF%fS'nD5k=D(n\;G_DC#CdoZn?6um4^V;feQffG5an*Pt%D&&;:f[.\?0p-n8@j<?nX<4WTaV=m^07g9hYjB^;@ENbT;]$X/I3abm:jFDEalW3"KP%6/LRTaYSbDQ?3R8eF\_gG6E+9Es-77)Q%)%td%6gbqtet\C634$nFGYAkEN`g<!4^J$TJc'Qp^V;T1iXo?c^hH1Ii`Dj'nbgRooD-DjRU1KcGeCZ<":MmAK"_?]MuD#G%PZu<%#%P?!$-%:NYrD'Hi6[9=ZHZ]<jITbEg6-BZJ.\VaXj4-.47?ST=BCDS@12E$W"6-OO#!bfK#$!eZ`Q"F/&4QZ.dZ?5``-^bLL\#M%iI,<1^4YCLd*fr/,]@+[NH'H]Ynuk;Id4qR[.[&H39+iPH;&/PH5,,JN;+-(hj/(ah8o:YH'Z']GRnVA[Wr\BgCs6Jq<Kn,OGjg'%e?qXu>;h'mfHQc6b&Vt1i6<qoLJ0^sCg[h&P.aje<$T;FBHNVNJiTsb8RL.V,_[RsWnY_'Li>3W='Qc"EfaK57(U!tk('Uni%8Ar%gJ"%A0``k]3Jg9nlptYuQ@<s1T&qULft;2!X1/TSDY);i\^9i!odSU(UB@o\i#U&<k^htBLhu'VAH"8,fLNf'1Q5p4L)d<C0F*Fa%A5j1QaY8^7g&Kg[fC%@5*7m?iI>@ELJ-<elo?fACPPgSO#7t:YM;l;TN5-RE84pZXUdEK9o_,7ah*"]EW\4%+@+_-u??`9E]=PU<%=0['u9^K:JVr09!hnp\ld1#`jpF&D48ESJ1ZBJGE/,?f%@KR`5p_^k@*/5'D,^`90Cgfr1aRZ]-Z%'3-*\V?6U#@'HYMHe/U4s&]%3(ll/Bq5hL24"$?="qb.Smt=/X_lP(8$M>02[;MT'KJ@%6PpqZ1Y'gKHSP:G7.%6"6Ia%),2>i]^o[VG3F&TAks0p[lum.<gptmu%"N9^q54(K6F87bY;:)/*Hja-Ud6#4(CoT_&b@2=dr2fJf>LSNFV&XK(puEOfeK/$,2PQ=$]mScPb3'4>G37'TT1hXm="MU+r%T`*%6c*Sm+U!W-+-O]FR#W;[@7l0*-X5WBVboD=&#6!nXK;M;gI)&uJ)6;>hhbC@(3JT+=sWKMKllrYFj>3p+7?9C7'TTW4^MuQYKcrl%7H-d%ch_sP&'2a=69%c=N3s!"$>NWX[lEn,$g#t"HYcqP2]I8:!_[dhFr#/Vd&ShhR6LANdA-*mg#\[EV'RJ@H8eHafg`&l<r8S1%dqE9C*^PmlSj$Zj">7lCmG-//I^[j3RkrLl:ET++iY$FqdeCg7`ZoJZFAmjj'XhUe[#inm?7:^iL,+AR:mhfrBpXIF*Ec(5+1`M\%O<OXoS0A@a&_fM<:=ufbrIf&.nLm(STc]"JIt=1PL,3*/$YO:#/[)$s:FZu^d7""R#+)&Y^gQi>:7UMbeO.0sIPHK'I"&4N;]mRH%!Kj>L!Q3S('lhn!4>amM+&J/<Gm-V7`U(E!Dlum%C5AY^g0b/m>%LYEEJ""\Vl1^fbN>-!QF*n/aSHhV=HCb^.FIb>>E"K[aNC05%mJ!9G'$:='S&$&I*.*0]#<cD'Vgd=nZmkB6q1T1PO,-AU:B;2'd3IXnhig_t)lpgL,go'F0k5_>q);%Yjh,j#0`ZmXTA0oAO:(#2%(C;5N]*(JrPW04t`5Jj9m[Q6aj:dF"b1^Q7S>bHLj,0hR1C@2^o.UO*,1q;.jBDsmJqb-lS/rJY2'A'i#oHuV*_;M-rgZC'GY4^;%qFQ\;rbU0pKf;:%`tZPR6QqBhU:SiR1@jQ,aA)'/d,6AR`q:/X%YnoXIBVqoZq(bM+pJH]O)ZFm`Q%A'(Nl)Z^?ssnZGquD0[`%e%9nU_Y:I3!_qj]@'M2[,SF0s&Gc,gBX19n,'-8m!0jU%<Ya?5V6./Z5r\FHXgU#h]%ErTtM4C6ZKrMmk#l..HV9Z`RggTr5uTEGq@%:<C+S_'JJqNq&^?D%YI5HUDlJY^E0Y#F0\'(4kA^+qUklE6VAANG/0Bb7?T1I[3u:TJ)9A6bd1kCH2Fss6"9QfpPACY]C"h#+;Ps%,T2?\hq\ihc9;FqmGpEi#efG;_N\kc&&h-%CRCG7?K;LnFS*h??KDQS//a1i>po3X$ERL5?+^EL?JaN#Ca&j3hQ8)pe-H<f_iV+4%4Gk7&6kY]>(k#U4W!VXHQh=_@/Cu1#X6[NT]ODs4M.Bai9oE>e>7qaE!d&m_78[b4dLc8q%;5[fHUm$NBA]pph&KH(J=rRb"Kp(_%j$AP^CmdnB:C(et$5"D\/!>FH$BC4][VjdnaApO*UKgbfMtaKa4mOFj%5_ko@(I!ZOr#XZ$G_&P:?M<[\l4fZ6aO2T0`-OZ)kG)=%*#)nBP8OqROsClJfRo0B+<3JTi"H^WaV,S(F(\L1`I"ADR'oOM'<Y(H]c8r#4Mck[lpLqQ*P5;D6n3'%(4U;i(Er8&8Eej#`uM]!%JUUB)2aV>p/Y4Saf,-HpTCAPUGOBXkq`2pTlXD=%o`4p/TPAN5Y]_ODNGRG?%&e#4F%OBVYfA<j)O0!d`=I#F5FL'tl+5)7<YftL%K+\#PARf>i,`s`>if+kG#jDut]L^DA>U[+-RPoq-Jt#GN)(,kUQo?a3^Not$Z/k55labBZ.C&^YT9O]%W;&Kje#Pp;"`[kdE^^dr%1tj%@!YcWKp0V_VbqM>;n9R9NP&Gm4l#I3L9PhGo.[eNaiRXg<LG31()5h6i8A$)/CUebmhfmor6A8lg:4k'LDq3deLoVGd_3,DN%_=Ek>%81E*Os'!OX3\5tj+T(-\T\#PMsfCajP!&s/n8qr/u,.f2^/n/Y''!'-2Q.tVC(u=o$EBAn>*!2@b=EKY4(qq*itdUd7c6f%5Z$A"*H!5hKh4%l6aCWF?HF69:2>Co9XNX9*5@(shXql[Xe<sAMpIuQIA.!fi_>5rACTRDY@-A%?GMZc@c+h9QUE##i^:oJ-pl7+%[s5`u]7Za%"c.b_GV:%]@kTXlN;G@;E`>OooYa0,qolrCK&8_=:#`hsF2B)N0Wi1a^h]//0@2!$[^AXIZH#955E:B"puGophaT#^%P!^cA0r)2UXt65[%>\P7!esdD#82`D5:;RMSrtM)4KVKATBr&jN=g[q'HqCqcI3LZB_a&%-0T%5=N"N+B-oZpGOuXu/m<0'#f>?K%_+bp^aXRK']?J/`K%iG9:ZB"tZP#S)@:k.cQ0^66emp/#EgLNlqjp$J0P>ABa;VBI_WS#7p,#IbijIoZ=p#sOS:Co=m)K]lKYJfH%24fpYYWSs`kb%43a7IQ@1o*S%N[L#RAdrZb)-\0h#'n,;8^])FgfLD@NG+"`U\u8/9o_"3Lt.d$@=(k3O^N?o/f[S2"`o"eW@0@#%9e&RdLs,Z+Lgq'Efe>n&pB6H@Qkr85J?Qoh+ass-S;DqCb_fei4sP^IrE-t]ng_ZP@Dq10=[4!3JjN/H=4TgaU4'F&VOAhdLEdAP%0Uq4'hPH?n!Q&Ih$DQ7W=uq"jC&u9VaK_h84Lar#pA24*(-d:1,lj_%adifB1.:YhMX<P-j0K6U8;cRR8\SiD`n9<M1+/Q3[Bp]&%H^cm]='ELPFU4,P$Xml-UG#A*G+[@[U%7+D\r:@oi'#2@d2@+l"G1T*0+b$S)4+2BE/bm_2l9r*&-n,$>_3k*]?>oI3n]uJ7EjU#%OC2+-T`F&8SKXCZ$Od<Eih=%G0'#H?kaL&Y1HA*!0Ksb$-^@=q5s^K'>XV?j(L@0[HOTR8FOm!jgcs67]!S;DVX-<jZ'XpIUBSGX%f+lS2IstH@gd?Q0Oc+8PN]S-:DGK$O@Mj]4`,DE'b!Wcf-h#Dsn)SQ;)9j41rOT;+f_qJEC6<h7Op"e2T07mATc!;jp)ml%?eD9[%@9OPo2A>sdZK\iP\ijRW4FL1$C_G(?or^sLHQ"/sVrN%3o5,GSo?epm#+q=D4\=KG1!'/)7A[u>Zj#$(OQuiQ-<]%sKEt9Q[alJu%2,*_HnEmDeP*pcZTn9254!P`G5G^RYj.3iA.AHA0U+Xri>/^sW:IYMa_\NcUk)Ge)NeNY?pR0gn:tj^X&.oR3W21?_rC0<:Q0M:p%B[5A4m4[5g3#`)kI?p,!I?.*Fd)&&C,3cbOlN+DI:<a-H_[*oOOE)#,,&2mS"3$C=jN>`]AtqgPEDAF>pZ4Prk)1nG]I&H=3W[-U%Go0,;'E4Rsg3?YmbjrtI\UV&7XobSY/=r:"6V$5*/;EAD]BU8I_lcO'&H9t4"%(m/W5mA#!325mmfMnC#Jh*c't7]%-Yu@WJk-Z?%1&DjGj$s0_e%^[Q#K#m"L#T3#Ud9Zj'gQbm5&m2,U?uQj5pT67:8'WYN`9Y`1IlMW-=nBT4\dOQZK2C[YfJqi-n,!VRCMdg7%r_1%NIq1HpH2d7@7,acCjBl#)e.[8n4/4I\`Nd"og6ZGR8fT@+KO[FI*^[A!X=.Y-G^KP0$L4!Q`2<`jfL%PF*O7c3o>04k+<X"<cC!k%0&77o!F]1>!o^\X)"ED<a,jhP'AY1Q.:RI@:.@SN(YrA'LJ@.E(AZVu=3=@M$l&;HMQ!cF?%j@o**W`MHetAH!C7pVhVp8X-ugWE%QS;:Bj1AX6cpg[Is)5c%OX]n0etLh3N/$t3C"@PL:YU?t;NHcJorSI\>MpL++,Y'>9*)@On5[PPGA_^6/&G5Z,JVspW<'h_`gYOp%oHSq`!r5jf_jm(moH^dMUAEZ:p)_'j4qT<(7'n\PmtL3B4cddD_lNjuq3cM?Qa?Hl[BMgqJbPg4<i/H(/2Zu8T!C'U?5Uf(2&==.%C`I0tZa*GN;4(Gi,cehEYf&AW6qlfS;IQ=L8OSlA2%f^uS*+OQ&Wu/1qp8nre_pP(?]N:\?*Au_&Xud:en*G`f_+&\?j)B_X>5Sb%7inkt7n[">KIT@$;0gdTctT["s02JG=fOi#TH]N.f%.W#4<BXgXh<>'W(uG?6=*r\=-kfAWPH"J00EGEPIZK8Z?6H#\#=6@)4i$B%Jc?]2a@r1]lt^4q)\-pEOj>B"CHs-Q&hn2<Bb\\+e$l.46PGUg+\c\qaNq<4j+T)VUeMS2_s8Z3a5N9NE"*%GH4;5t$J07n,eA;7%mo2RP06`q8k[)5K:&>@$F,u^_%+?,gXR!$[h%d9kaPptP(Gft8(WKI.N=2hVH"idd5e*15QIYN-.)K`.D<_!J#)qYSd>LrS9t&@#%*\.N:D%;6Z`=IcRES;6uns%DjOTFF`,kS\=?bEUWYqFNl;d5:YN@0LYS7]2!>nf^YG2jm)alal@PMKZil.(5'M7[9E%GF:OoQtD7%Xu:X8h5f8gm)Y^D!S@Rs0se$tMfsGj3[@bQk3*";P68k@O?@+ET"7ohIO;q0a-F&9'EJG]D>$IaSfO"#0Qa*f!jNqcj:)CXH.9"<%h>s!OWc&=:hG+5i&Hh(!&bM1!9fr:@R&<rt[G<@?K<o4*d(O<;hnZ`73'G4Y$<HWJO(JD;g(&1AmGo^hRkhq)qE;"5#&\bQo`]qO%PQZuLSCCIB8at:[V#@W:"?%I0*L:)\B=]d[NUiIspBVsAl.rFWgo;sMlpfK]EIA\OGF1US_c,L62D+rZE&S"5\$JDN[X?NZhD4MV%jBKK$]ss/@E`L+32,CF)pQmS;g\#-P9RoO)#aeSb8=gM0MY'JHTpS8YOt3^WRQYn/HP5L)PlZIj_-WW4o:BBj2mD03>qT"_N!m:r%R+!^9J![hQJD']XLZ_un%?l/U\E$<blt`!Q1PR8LkWC`6Sn+F"_'JJqNhOJQX:o*p%osQ^gBUFA98)sIhMj9253Fcmec6A2,gO^[%VhMT^'#`oQ#)TfY/ue&_U62PDh$DoE0_Jm1/$o9<A7fIt9n`2-\Of\<.jRn6f0hA,\n'7X+ZDtJ/)Ja<9Ip:/eR;!Ni\6<6-K/GI%@1-!H6oI_S&Gp+0kDS18*&oX"8gF<bRC=MNJdV[:eTL(c7gMTF)XmoC$K_P]l:BE*f*j!S[jl_$A$T3l0!b3p`E.Qs_rMaa_jn9Q%4SdWt%AbaeP@KYHB&*P%G>3Gh3@BtuOGb@^(ikid;aQM1A6K'Z=c\(>$Q2DHej"OXOJ+?U5n:f>#$HD`,8,c+_#/[CClf0]Fh(D5%1B!(b\UG9c'_SNn8Pet/PR2[0Ni5#o-I]0lq=@1+%YO2V[p*<WVdcf9m>DnS+scH"9_GI"h#d")X?4+IahE[UVjB(hB"f=obg!2T%bk!?PjB^(dhaX(XI!t"/b@W/3(=/tD\Cb-)Co>k.aJTj9]1a2aMLkSPY1#Qk*p8hUnce63bGp]P3BH.6i=k%",>KtZg*J`<J:OmP%1V#@"&3JkQ,&tOI:E`4J^=[WgB1EpQlQu>XFm9rdAZL3KOp_^)CV.UD&%-,?ZYs/+2dG$ZTB?sEE0*cVPR;:fliCWhXE%CGgUq0:%3+.[kc9=5cliQ=c#8[r.%k`,7q;@-r@*:oKE:EEd+.OM`@7,"Ll&PL>'KP(ciSu0D>QY$6kG@"DCZ^/b]K8`]_uU+e7a;;"J($d(%\fub+%1).1:Af%G"AemY=0E3#?\`tb7i7B`hian!V^WUK_-[?KOg7@q?:5hf/i$og<5>(]+NVkF&BWKq0SbS+Kn34\/h?afRbDG(%;C]<S_Si%;mQXhq66u!.j=0/="2`k2hYj<9F7d;\hi_maMH<f(Y3Wf]GN;f"#X#^h'E;9gH/8K)?:^D<SEP_/PNmqFPCe7N5)Jo!%b4"/ZMB`a=X/a+<+')_l)DLUt-KL7S[opO1Ebp&F^PGJ<769KfS\G(=?WI#;:;?ML0kY;!JCG7P\XYIRVI;Ve%mB=)X5qCS'd*aA%#_oU;PS`$8<W_7X#XAs![jn@XNDO(p(C_"1$h+2UP1kG*=0o2a\sd4r2G6:FL_"5+_DMl0!h-[T23":i7G-D4p)8PPQ%somANGnk%"#3.ggF_(AIAu'?1[A!LV9Ic,4hUF+Z/gZ?Cq[Bp,lq=]):9^;o8AepA[[I!&B2kMDD5kJl:??j)DEdt*Z0C5b"Olc;7WE4?MCS/%Ifb:ZQ->%*mn9-OQ^+")2Lha8]k%S^Q-T/B.T#ba<ngXjLrH3Ei5J`^"QHSBe21^,2SV%kD9&rA]bMk86kH6F58]4XdA5j%,&:X*%>SPNVPTYst058A@k/qP*^A1[7qSZG'a3unh@4X^S<X$&qIb#.M`8VUf@>h]2>2A8jSA=Trl4[fe1ZSAa=SEI_\%Ge=lnMGM:n!#1%W@N#.TiW\].N"LlX@K0gM6JW')=ge63]7m,IJ:mcrU^Q3c'TL(n+H$%EX7rl(E)#R<uN`fkcil1ED\]^`UaK.n\QUK1ao('$QJT2%N!2morrW9dosIsC6\%uZ)4rMod>5^)2(k<uYmS%>KP3r2p,7nt.E6W187XG'L;;[kLh3J<1f)7n3D#A]G,cM^i8nB8&edj.632UI%,c(76ha>59A6+(?,FMX<,cehEYf&Y_-mnjHRBZ4G"Gu5CNC*Y]l[1E4&ruu;,SI9dNY:Q@kj9CJ2$EpX,Ue8dE='HSe#.R7c#Vm'%FYnMHL:*?0jbPW'aN80-`&Q''-jsC?^m=^tnVg1AiK`c$:a[%6pW6>^"H\Rq_?fE#:bX)]'aeV"1E-nIOp"H\9--Zd!</K^N-J6p%0_3.OJUY$ZP.4&u&>9V\^opQsl>j<cB,bjbIl**7=CVaN4t7$FpS/6)8'olad?EIqqMA/S,-c2d('d8Bl`UN0fae,2h?,.q\a2h%%8<l?WpLFBCqFlG_QWa"J!V2h)ng:)WIk9P:&16^C4WTjA=+>F!)"<jHXS<u5m)paLbP-a2_.j\`g78AbDFOYI53n\6I]"<#5\rWD%;o`9]/V1-ro`-uESH8*uNfYMMK?E.p(p86m&;P,1L//tAIUJ\^SP7)b)0pc%X!@u>N^NK:Y;FHG];s7a-Z<6>Jj7:qX9M(>O-MCg%]Jfu6S&0M!00q*G$3\4h"]g;iNj@Jk8TD*o5e,Zc>kFI0Llr,&@sP.uH-?u\GHmCu>3eA$pU_O=l?nhpYkFat>ocQc"3bHg*>K7B%-qhP,o"Y:b=sp=<>;N1ja)s$8`jrD(I:5&Z[[&M(V;M/!ihLSR#rW'oD`6f4QR,('pX$SUR)Nu+l81-ofARBnaTb^pE0Tg;%,#T'%Hd-Gb&bINTp#*DXW!`^t6Fck$PC*d/Z?S]:c\iL7F/;Qh\00lLQOLY+O9%fndoeU%.ijMGrp\Q"?b3>.Vs7=ap"Oef=PD&kLt>@b%r\(Phh($nt<&!^33mJQ?1YP5jkH6*h5hOFLr-dZ`O;*>ce^?ZSTAoNpSJhS1iBq;U_QabJVt2o`L4m;U$LaZkO4Ckf=qJ#sB/^`]%]3j+D7>jooM/'"5T!l1a&d$_dW,;['"NQ>,;+qrWHN\3;ald*uVPe[QEu2;aKg]nN/Nm*Li,A.B>r\7bTMM.D]B]Va3`\C(>LS/=%96Z7OfgoVGC"X05FHpsWM#cRsY/-(2Z)N(.#ss\Ub6JZF8ifET`=u85_g'9Z]HBO0FtA"YJm8uc*Zp<D^?J$H&e\hC=FY?fq>5Li%n!@M]3L,7"]kIMc9f!K4J%T1+]_B,S\i#H/haGm^0L$93'mmsa(A%reLop!W^94&)&.$n4[;U2;m*&uq$)0Ij7hDgm"@if)rNi\e%C.HnBn&5#[+nVXO+^ZK$M-QCL<?!C([FJ2n.&d/mMei!030'HD%<Vikom$*5_!4jOOumN?7nOr)6X0rk#ZZOV`Gql%FX]VdWknZU%`Y:GE8mQe0%1q)4Y?$6<-5=:2k[F$YoRjj&*&Pa2[8c^E[5==5@hTl)EBM:`k#tE"?,GjQd!33$*A/ZsXB$D\aGdIU2p07662L/L%DO'NG#D0%9NRJ87IIk<Xr)jP`cb@H:GX5Qt\6tf:]dI3XM:_/0(P6=B60:l^j"1R*U+L"U3/V^n=YH(I[4WJJD\XBAf1[i6>6q'\%QM%1&l>nr9SfNiP(Cj9jKg\[$&V8C-.h*k`NKAW<B!Il2!M]paT%+CHLrd![a,hH&fb3njhBtgJ=Y*d\,%SsmUMhG$7*a?qb#3mD%5oXQ_/Vstpmt'W<b._M\Ta;f(X)Z[oX(c)SK`&7EK81.s3m.WODEk)*,'"tKE7!SFF1Rko,fqnAXdpKSjR9#.g]<![E//,1nX!5K%'MOsoCgF3:IE?J,AE*J4"d4#O9aZPU/$%;1]tk:7,43S/S:bV'Q'=:6`dIjjqs<Ai9=^)/'tgLi([I@L=?iFPj3)"ZCn2>g7Ar^E%CV$I$<nSj0mu8<jpP,ru)YI[_@C\!8@1W]ITQ?U6Wi*QM-^"d&:=gt.9IlY#@gSP$fUMV6%q`=9Abqnie1OH8O@CK-e\023[3K3R%kC-O?pWOuQY[NjRkl3DZkM:ZpH#H)]Q[XH<MV(Z#TnmAt-t6#>&^sLI,*OUr0NYnlpT9U\SV@I1]GGi7n!Q"$@<a$9(>-+h;AeM>%\_t%IFM%)t).naSFLk912<-:CAW*Pr8[dt@W.=CoCBu]\AKCSB5i<WM[W0#:!\XR7(K'ug$tsD72S0#A9CaDP%VKJ&kMuoLLHdua%R,0nj[hA`c-*gQ'GbStP*O.X:ZAV_Lm+sa/4^d?j5;2sJ(_O>JrEHZ?epfAO>N?CNcn0e3VFk2:P,&!tA&UBc."KLpgC>Qo+6<)_%\4H>WeGi)ep#lHRH:Ic-Kr<#<ZOF6S:'35?\0hj2<l?m9C)p'$g9&_A_kX];Fi(sP.b?t)>H/3rS_%EMEYlnZ]8llF5R^;%S86lV%kP.m5jCT-:j"/eTaD>Qic3G+sDHj?Ekq^=K&($7&3Per`iUllmEkM9/jASK75IrKOFO>,]bgV$52WYoZE$s@/(AG93V-3V0nG<M4%TSFuMFGQ3hZtuT!$OD*:\$lL!>FBT7If0X`,I.BF3-5[1PbNb])gbe%:Q\:Dk4CG%q!?39@JA$2$4`#^]4J$K>qYEp\f:EuUEUR+%RMPODf"26!&=L#8f2/o2R,3tYR3dYtA(No+):qtPU5o3oGc5r(XIkJ]0UD%E"QJj8OIWP40\mAiF1SI0R)tA&J]OJGEuB@iiC0u$%N.3Y=.0.H'WE8^&Larn_Hl^#XA-@6;Z`@jha/bF'c<!:5EAp0#7(<Qm.Is*Pl)q`o(6QidkLZR)`g_Kk%*=agPma,+\U$qeA\5^r%fU9iE!6"Aejk<KrB+N\Uo*F)_3uB!+Io6(T7(J0QS$-!p%,2m+Pb6Rkg\3\:CHmpsk;FNC,&Ta=2A5f?qe9<lrgKHp%attfmJ:Sn%dSm0iI8ALao;>!p[e7Fjm)Qm+9e@9UpT:&3DK;edl#&Ee[`%P^L2JX[eoGZQh9n$C$og8mX'AAo&J2UsEmZ^RAa*6M'l;7fa[K7^%j0J/Zn!LN`LC*T3N%C\cV<^SFBO;b!7[&X[./cZLS>hA0<ODeejUBJ-1>`D199MK#+kU6-7S`1`bO-EP;-AkrP)Z9Yj-FkDQ\H@$%b/4B9IrsXVI.J@o+-q@U=(X[b(+rEl?N:YDX6h*!=8\R$b*_ok3K.8Le2V>?e%Nc\]ab>mGTAQ`B$@T[KW;f&jBSTmFoHudm#("F%gNLiDo*,>g3XV&n`+#oO*$H!;l*K^Z\H8])RbI7q<OVZ#ij_"G=PXY!fE<3_/qTiUDN"B+%X0r*lI#s]=qQn/"VZQJB^ZG:+Xn!J%QL_O^oI99#cV!,u"$sn)WEiRW?U-j\p?hoq;BVFm>^LQs&%FB:m-\g(R@-PXIH"4)'4(#LH,Xbp_-)N7hOfE'mVAD_/BK&F[%S2m%NlVoCBD.J&-TGnerH@DC7E.9EemY^\+QT6^e3f8PENrUl+p_,7\`fUd8[BfFEniVJJ*,fYTCZA'O?VX=J$n!l4\O3q&A^#UTo0O]%8","#(=%B(;3Ypn!ih0UW\N,=p3So_qKHcHepY*<NB^j&=@=h"lR6QYk8joc/dHN>H9P[)lb:,eq6hfB<]r^LZKoD##Mg(cCZ]n1%;\A>8DL0k*'$OfY77@o[cNV66MYXRHSXHQ.M4;2&QG_jV,eotGj7GQI^N]M<L38'd^PoR60)S0)%E,_jVZ@%B1m:t]H0`3>\[]/(%*4:tn,_83eSfC5E:h)m4aE\T_QAB5W&OgI`eSFk*fE4%]X^dV`@U=Ci4qP"SQfT'8\d:Q;0u/-IpZ#2iaDKA",s@GXrqWSS+7G>=%Z3Bql-GsCKW2Cb*/4_U'8*Xsf4^pa8#`[eu=[Ba9N-/FHA7l1qMbCemQZR*KZWpcr0[tB^COXtD0%74u,:$,YN+65hIQ+>?G!'!c%jq'BUZ*@o&2s'>s8M'rEB+#_K??$S$Nc<f0[/]JAFdD($T.W^F">.]2qib!!fhpW[`kk8mjD1DG2ma13i:fb=^?l81-PP7kZ^J`X%>oOAV\a"rK"s)619dHn`qK?&/U\l[;]!na)l60?Md[o3igiNRhC';Jcob=?bO;Y,UVK.'e8$K5kpFsSn]cuNr'N!,`de'&N>b%o@%jKVn5'KX9X'tB:LI#'f*9jX+tloQ>+k=BC(e2sB-%8G!9F:QnLQ>^fTO!)@d)(r9KC^W?ZB4olGe>WUldBdjt(IuQ^BQMWV@^<Ir%K74LSGBlp/Q>jt+fK=@u=F5edbB7)`F5jY<<pi<%ecSCEJY#'P]3NL<AA\f=VBtt.$]V5J6?[?cTuLui-Q'D,CGu[U;i5'E'#[>5%BKCQmNc3E$f[dG8I![%\)J$,q#*,6O>Go)42M)3X)6&A,5D&Ld%a6kUO@]@3etObTEO`Yd`7.5[Y-^:WoLT1')A,/M5=LQZ"h`AY%MAaf1dd>KL.At:YCa1s!6B;&&ZQ*0,p"h??SkP=&RAs?PHO`n'XD&7%ChU,b%Edc"iEBgSlH"MW:N9P&m<O?QGVpp[&+)Xg8XG;!%:-sn?L*[4Oobdd"CoX(kg:h6Si1.]A>:Se=L0:JuKde?rON_R<&347S=F:B:H]ntY"!M:THK?OUiPO?]B"N4:V<\>N_V9&FTjs4W%)RF*NZOF+MP$)W/._"3G?G8Xg17gX"d.JRSf"A;i>!#!;"Bj?_#Ecj:>X_49j6?_5G3.G*R7fpB,TK.XZ0ZMSc"64?/<":Qg$`J;%,Ce/hH<H<LZsuK&]3V=OKb?d5Ss&g^>TairQ*P@e,a9gO#7$VIq`JbS$mAhGp4)g7o_3S=d_b'9/k=sXf?p$4dEKXUi$K4<F7&q2%&M91#ZA`16hp9@_D5Q<\q-FT^aJZV=.#j.mUEQe`nA:3XN$4QpbpWcT\INq;*?n(_Nbfd1cgOEL?2H@JLK?b2,Vl[)/ib<*5[V&P%*@l9ZDs6#c[Qt>Z]!(eY%cN>Ha[$Z"9[`$U5YpUeL@8P$(PG/9fA9cR,LhKo=LR6*q[FN$CHY@2M)Y=lh(L^\X?Z?qmNY@9/j00T%1l*:&K".#Uqo4`hA"AABM9Bp`!E.uaai@2*-+Z"@b=+?bE7GKe&91de-YoWtiI/3Wn=)HM">hS2AtNY`YJOuV'mmg.M"L)>IrE#c%:DZWqZ*38:*tQA6\QNr3kX;S%SVk,)jZ/KuTi[ddp"7o':dCr@3,b6#DLo4a6%-o@CU;C<rjk/e2?rL)V9g@t:+h6;PYng^'Mqca%c,n?-i`Q%gh@:Q'?Glu<D^r=-<L:bRds3_PcA'%SU\AoH+Lc5OFm[pl0Ogp8)M%*[XuZ]5D]umRNr6Q':?M%M>Z_R`E\0Sjfc5Ct%-t/<Uf6LnCiOBa;s6_e.j(Ih(bGE.ho-Uu%=m_+GIm.a*Y<2STbN_Al3P%Ec8q$FZ[G<.tQ2bb@Cg,oAfl6B0T&UT65u!b1?n<nL%rTp+PYk'Dm>h)?)=Cu0b7giNr0Ffgn\6UCGh*Y(*!cj;89jhcEYp)lD!tY(.:L.>r0-G.I$M9uTI?b0MN03&kd@+$U0)94K]On<%%CCaZsJ5$W2j8WU1d>,Hs=K\NjGGF+Y?Ps,V=<\$;Vj\c@WbK[2^5+9Ya^XQ=PODX@m9Q6Iee\'F#3*!fEdY/J0mt+W"?,omk$9^2%:\>6:3k6"UN:u?'\E',TcL;9!G>aPuSG`R&ehFq%,U=TXBaWa]aCL['+PC18rRM74@t/qigO#k^8Kc!MJYtSo0Sqb)C(),:\hIbs%Z8K-34DlgTIRk($S$j3S-fSb`EID`Qn)<QKCfY^\!gq66l^!a;%l`!uE^6"6PD2""E=ATO6CiLFfG\2\_Y+>CT-1uhAf*0-a[esk%P4&]4REQ"0Fu$D24-K8VLif[1k5?TbB@,#"D'siIF#rVGYBSfB`3b\R=#:=l__Q'\+h&Uq=%oMa[P.!"A`Pj)M=\7qiNBPT$aCnM%0\'rrENKYWla:6L5Tb&Kf7L:(lDC,_Rai2Gg]T]Y#4/%dkTF/)h/8OA*Z^?ARXYho:mGoClp@$cK.b1s-SU?BjWZ.)d%'S]Fs\9/%T$/(.*=U'1g't+]n.jUem7^=Kjn-AM7ul#E5KHod5BofhSLL7`Tp"TpP9B1L]jl(q+%k`?04k8sH(n`RjjE-52[-]`(+baZd:\7X%dfBOsIe[r*CkqS&)8;*lF1"N+I]tJ%,i,CpRj5K+U.no7=%XHIa`mNJ>Qr"Zpbm4OI#7RV9''S%:QF;YU%I\bH]6,$%-^=54qr))%'K1-%Foo2@c=Lhh*Y1P,+ko4$lnchq[OWd$1pDo9@Cm(HKUsu1@Vf$"%#eghOOM?*jR/FV,3;Ba']tEJ0j]Qn,70-Bpn!Haa!S-u%;i+nPg"glB8_3(op$(j,[)rUgECNO!^(`CeD7Na_GESlV#u<"A0f'\=TbBK_S>')=aik$S&dU_=`57f+W\]k#=Zoh`ZH+O0+9b&&%&4,(QVK(6p'IYCSkUJF?eK=_f4e=]FiL6c(g<SOjh3f-$`U-(WUl"l4N!efn'LO/6WECa6bIZL.od%iM95nn6aLM,de3/ll9E?$D%j,FE/hm68Rn\Rk595sWh3M[utAGqX!B$\\u#[a>hHPIS--9n3<Vgo>d#rS+OU,r-0>`>g)gO<$m#p\Loa2H_pT5mW,rQN4W+UGjK%B@#>`?K4(`l6eY[OCManR46hWQm-/O[1*=pBEVjg:6YIP#d8<RpdW3?FQP$lM7AS3\QE+4pYaP-h?!"$`$W;'2[@J+W5RIKj@Q.t%&5CkLQBJ..U"Tf>*Btq>%%<Ar"8Z_[\j[\oCh)W:5*4)u3:k\FBA`NI@pJ2(Z%S0jg\Omq*76I<hZf@EX,_i.<648`E%="bOC1$g%PmI'hnu`P`_MbT@c(o[bo+^/bY;R$1,kH3M`d\HXf'#8Hf5o1&qktkJ0V7^->[u1M#0B]Fn7jn>[o8>+SJ-DN$&2EHM/jZuRm"G%%'4C(+GaC[kaN?3dYcAa*OTiCREURY0?QK^h#P&\CdlI<j?+XYc)SfnO&3k</d'*QVoAbO)$j\3em4Eu^jQY@NEH*EJ-&*A/P^hm9%/^7CD`)m!gcL3F!jYb8a&_2_$A0`'83JKttcE,L$B[e>7LG$Oi61C%+`8M$=hA&C=nDX1Z0\4K)1`h\;:qi8+qLchN+IkpNAqY8T%_I00d0`7GP>?B]G-sd("V*8G[.KIEAbB+KKQ'2f[(NMt>DlMUaBHn\c6b4<RiOq(uZX0L/U,\)K52d_1#hg19oT?ADkYU9&2oG-a%qK.(tL,%CU7D?6P9h+l'4]q@/P>r.E+P=A6OYcB0o[1?)Qk64hme+.)Klq@<7mqGfAf0uCY<*>)#A8Q0g6'NAot#30L4/?S$I:3A%54s45bu*J!Y6S!XYtr&6hb5A7e?JZ:4CCYJn;NPMQa0Ec'T3%ukh\p/hD1`")*"8AV_/74B!P52S6/.954s!ZGRaQ"ce17mME^\H%K"IVp0m/Z1`2A(0Ckn-K*<8m"b<GS-_1EX]lr-+N4#-W^n\JOKN'?ou3C&3m*R!L<kCZPN9C+ZFUJLgs*7jIU(NC\':H46'*GCd<%4[ZMR]eZd?E%9BLJ7YXi+MuOH:A&\f%^,.t5FJQ937UfhD`PhMkYsbKpGP+`c\W)LG,e&#oQ"O\mjjABi?L70:\<A\=^g3+S6>P-%a7Y9qkd\e%b)VY%mdTSQAZ'jV*#MA@13nnJ0Tq(ea3"&q*#&deEq#481KtAJCubBAp?K7/CqN<"K^%;a8qp`!M\u/fB*_C4_H<R7%*T-4RN5;P)KKMXtR\%J=]^#/4EpLZENqHh)Y4JYpf'S)o&q[tj-!SB@\N*Ub&a7Qm>,-#-%_u_tki7Alen0@.D`&iKFf;C8g`W(9%m<.9G2mdN*K:U6OJ[GIJ2YI*<hu<;X]t5[J=YEc@>Od4tp`/D2"V$KP'm*3g.omkV4i,@`?5;E]]BfGZH.OR6jBXEHIeknQ2_fm]%Jai19WcIn+]Dd(+PPgdFZg0ggi1E43bGXenrV'+NgTQ))p94K?PP@rE^Ye]ZW$f`6<[]pZNuoIRaIY'&Zh';fOI^"),38pQeYaUa%6f)'A2Dl&(T?7?2JE_Z./l3GN4S9t4D>>Ufh-@+/A70"Ze@/J-QN'Vg9r.gHSYNSEk\;TC<iD1:@H%OuGn1TrdHqkDJ[Xq)Vl7r]%09^/gW&mdMOj8R2RO?3;[-UjXrec?&)ZBnJj;PXOp471^$u"("oum]/Pj:\[O.K-oIgofrV3d@ifh0fS5c3AhaMlJncoU))$.[`l%.Eoi.B%OP$6it5q:7=!eGLY"iD<&bm!YW<7)kXu&14`b8PgH6srM$)rXONguaQp3Y@l2@+KEdg@/0jR&5nLqIJjED0@2SCDCDite%g3$24nU#tJau!e^AMY@7'm9]<843$=Mp/odL2$Zq3Qd@_"k7miT>X-nVj,h,gPF5?jP*]85fb6V]<46]'$A)HKpr+j2V3i@lr\VL%h!c$5DPhil,-#E7&"gf-OBm"_N^KCXQqb5g'>n+tL$=qJ??$?u$?@G'Xuh\rD@T`dPTZ,@`Y^O2/,RsQp`:I_NmP[gU>kq*nCt+S%&uBM$5:bq(%19jkLd@E]\U;+H:A$bYI2LA@Qna3!Vh!=?&@MTo6WG6$2_&]'lCi'YXle-BfPHpmoR!U;##DB:&__8r?.g"R$S:%A%N!Z%I:QUp/UCLR2%sPRbbFnOG[4&)\Rc8KR=AM<3nGZ!K0!ei$FWnR`J(OR2m3p'/En"b]8m?-X-LEXh?qk:;!=]m)$<s?c8;8/g%`e4Bn:>j<c5?#X4bH5_p5Ssp+S;>L(=:5q?6]+15E5Spr?aQDoYMd\KcfX=HN9[>FUNGCb9eniUns=?VA<T-N=cukkb+,5J\>^0K%U_amqHVS"_kljacY?@o+Xp3G@Os8ja[Rn"JlRkAr,/Y[ei<al4OpUAoN8LuG/Y$\:iMP'cpNkNTljfBh,m8Qt>E,8hH'u#jr$le]%1$H>mQOF"Q=Q\D+'IC,\Jm9)cK$+nJr(D*n!$Tq??I$/<Duk$s`Jp[NRHn:eB^ZM[U&/WuHiX]'Z$0i%7+BTU/RY5aauR+NK5Hgl%0r(f4\bBk#1\hfn^UE6&GRMiR/<=l.n=9(?`J%a=irpSCVl>'sB/u=IqWhsm0Am$k)L!O,Mmeui]j[,f@!:>%V72gl89G)2RChFV%:2YPA2ajWIYEJBe;`L(?6&>(o.Q33fj*eSURLb3J)?L,gUKP<D,j/S]Q6o!GGMU=4^UESk#,b459"MXfnXc",Y!]1r/;$!iX!-]i%P9_ak!?T?4-V*2Q6$NjfY)fE:*bQB)A5]fN2D4"t,6lt.Q;[!B2R]-IlL?1EFFH+W%G(N]D)3HOY@6-S.t[sRIFg!:U,m+OdYr+J%Q>l(G9N]oN'JD_WrV[`-Xn"N1jkaQm8PY/(`\D/MajYBF9_.QSC9leJH4:NO4q.5j82fJjQuBAfXB`t@F49eNitDO-Z\j-@(aYEW%=kQY\2PE>,Y&r9"jN]p@&;OGL3Z':<+Ecb5jn,I0DAnr-:9W9J'$pm:og`B%]a]E1d7fjOmF3EH+503,XqFlgdS6UF]>,VbOVg&e%[,`\"g`dQPaD'#K>)P^].Q0Z=U#n]ie@uhr<Y9luG3a5/oK"9IYX.&`IA[@]]NR52+=Ref8S\V"ElN_)4oKDnHu!S1R<&VWN"FFK%2kt6)(h/TBEd$;%@*mq-7'5'\/,,9bRGoWq@Y^;uf_?ASdq\[0J_9)!f"i6QepkR/*2]dLCbL'1BCK\gk^%5^O7c8_IPaWt1<X_d%UX?sj<-1c_P8;G1PFI?c!E$!5s/M+qULh+AA3rU2W1ZXf$93E/e)gi?T:$Q/+NYK7dVE:oB(Pu][$oY0kGZDd\cloVf2^cAOL8HY%Mj&=RI/$>F**7Di:8LIKHOlV0)8bsTW(l8Yl6K)JZ?>^P\^#OQjg'FX08hT4aJlMq*]m5+(n)J][5dg`(XSC98rq7hpn#`C%B<XX%l?17mZ!GcO1V39@GDF4('g24G<4'[82e$O>><0=H=l>f4n+,N$o9B4()oK$'#Z@GC6;lgNdWV9.j]:9=eSTI"fB#'DRX\AfHC;l@%mh1qJ&<4S$%Kb<Hg\Bk!'\SY5U#q46M3He.)$1t^$dPi3N]DtB(l4K`h7PMA+Y[3*e;7kN;'cM=T==OtbhYg1UZ?p\`9Yu-/M5>@%4QRn$JmATT;a7\T@`Y3mJOt$k\RU!>K-)JdZoAC8YV32H&@Lq-CHqR5Q"@Pg.E6IERQGT=^0Q)b@CG#;@isK,,`J!-Z>:ku<R96)%e)'GMEY9F!jL`k*,3@H8o9H<&bb5*TRQ=Vj6j+C9IIh^m3<)_!T#M[a-8B0J9&F,MJ8iilrmp.^L*\[#WZn;<4&ACrZhFT`X:k5t%@N(96X2M1\2cY7Jl%A'^f,_fI*T.s,Z[)h%>P=A2J3A$]/r8rlQ$[rH`1V%*'"@^>d;sI#nUaBd'[I-`Iul:cWFCkr6'1F"]h(Sg%k!i$$[^=NTI[oLToO#C!DK"+Hg>>=HnLGI0A4(9r0DWR/KAI[sm0-$9B.mY/kmaHfWmkaFb/;Y8IH25*mcD%H*;/c(,>NG^JuPgO%[,.#.Ak,3lZXMnER&BDr<,G9C]lBHkiKVOH(l*8B;XO&/EYkOBL^VC.Hc&@ekN9b1Or]b!AK>T0F$uZ\!I94]EaQr\#\AUMs0!#2%-^X)&`#tlI:uN]+R[Pi9WZIg4E1]5$V_$-+)koJq0i6]R"0II5f6cN3Uffn7a/9'Hq@N](VrUR.ONL-p7p:!SmJ?YTSi/*W5Q"Ku%_]<jkE)`</(LW/I,,X59Y_'$7"ggY?1fb3@Joq%+<uo5Wlt@?el07p`Rmd`iDVdZTGj$#b&Z]JpJik`Vn"]KhhCU36%rA]Y^XsC0%4B?'C1q=)%8groRn/e?1=:ORA7WR:<_p&T')=F<pSIT*f*N_Y-oqC-mRsUYmU"+Yaf[fn`Q9T?_kgiY\X.`kp]h&8#ftoPDjfp9J%E]UDi+E\BT[;E_/r^BJniS3^NDmT/eG!0Z*ZZu>?Oic/)CX!E4L0j\\fHB)em[7fafu$m_>poM_(qIAXSn?j/[&\$Jmce6?nA=F*%Ck*AA'^_8M6TX!'nkI#.),,N&]_W"=W4&)p$>c7n^kfGB*7]"U$4cF%+3%$HGU,9@S]ca(WCnQ(N7N*W:Q"K6K^5PmTg5/MOhp]c%p!sm3c%[=/\6YWF$Ocb/'#sMt*@U83^!.ZaV>?X)'K"Z0Q.Cb*`NQ/E=-&0^;Q$74m7nI4((VfO\g"]ZP.SiE3E2L4(p)q)<P<_p%"EeR;#$?UWO<@qVGQttm;oJM^=02Km@L9CuQmZsZ/Ybo<jaf=(8$>*:$(@mMdNf@QFI4DMHHEbdOJq;aH_jtZ!e,4UL]+JXG02Og%S0N[.s')kkO<m!c)'8I4MC'Ul0g(Na@PE[h.q:XV_]KiWQ!0[<9sPf,@gmj'6l`o`UV/$_MQbW\/uD^7Y<oS[ldg:6KLk4P)k)."%OJ(pZ+h[l45'auciiZqCGFFi*3)8ZuEO&p2q(NQ_Vbd=n4b/EF:uuKAQrUJtN"Q[K&`1FhN'V5Fb+GcZdBi*nX[NUoXg:/S"l)/9%.ud;o@7Ah^IpZ3hEuXqsm8cWYP]CEZW`jJ?,3i)bkHigFLO.iu4cK/KmdX#%SN$d-!*dg8*+lh/A.=QcI[F7fFpOgijPJR?k$I@l%]Mn)*[Y1/S"+L,j915SfLG5^/<mN%`@W43IF)(%,UU#3IVIcQ<E)pBL@Ppp[k,tVFLu["Co$mU:/]W")9j\KtB'ZTpmf'4-\Z<hA%G5!*$6p+6*m-_ojAW'_+@4TRoOE\u:*c&A]:0XKi)MIGR,)CRRk`k!N*Z:5H>//t&<Gs%4d9bfeoB_nF>PYt2/U'S;R'[In=2]2=%dkV^F+/5An9k11^RUDb.]J'.>q3jHk2=G2m$.DnR1hZ)pohg`C#8]D*eYDXX.'m5RCBj`FgGTF.elR@R552[&>pCjc[gr`qlZ%r3%6rRMH4rc0!i7fIBM^LI/j8#N.OpUENa5PMebVTisol5Il(f8HFSLV:?bI,c@q%<n7nI"$EQ)VK1ms5!:"4@r]VO/qN'U.t*a#[+5%\%Bah#\Wdej$bTTXddBd91ogK/O^8SYRtG65"J2"7l#4Gaeh!o+i:9(A7mc`11Da+*`L,#F:8uHTnp[dmlFQEp"G+7'W[#QM^-HE%+RHD*0BYam^[@fg\GJFQ+f,(ZJU[;&#d7YLR<J%Ep,hZD<8RX%bdX]`dK]htn)aC:0Zf,Hio>=kK6PGg."_pm`Q2]5"hANGWV&:K%RU6L1M`03tA#S=]qYcN8L^MF]j7++c'85tOZ?CGD.7+/Ul\3^eJ[Za-Z0n`p9io'n.>@L".^J/Of"oCGU:fO/,a_M[m^_RlHW"U:%(:qM(5[<JFqqbW-Qb+>baUrLFoN&%`IuhW\X,MPZ[Gpienf9FS7#Ag,!E-9EV'!]u`ru:kPfV1^!a[U5BlgcFh%a?4UVs;qMiYM>%]B2Lo,"%5!/J8c?Lp#Al!p8@l';"0@AN%@=Xb3%7e[2\T*UTD>UF#RgqqW^VSG')q^D/]>DR%#e9F_LD2b2m-oN6COE:i(=dK04B%Gfg'd:^gpQP'9UOe2m?ri0Gfp#D%P'P]cRI6DgGhfAZR'&TkA&JQlEA`AF>#\iLD*3F"i-4\O-,kohj`PVagS'_HonAQR,hlV],#%)CXdC<_r$@HVRT@AB*?FZ;"`.](DU^'gd`H;Q$5!"9cBtLMcRE@,b3NrH\&C,b?OV9eTqPc_FN1hh68p>n'dU[i?5G]@bGVlabg;%S?'K%ata<?NihX1CNR5`A[\Qm0OitD*pn+NE*hp>>I<H5;u<.g-p!Vp9BnBk1aK@;(/Hq]mlO%()FJ`b&a__Fo+dY;1^QkL.4@/M%cfJ]HcV2[[r'YdZ$$->r&In28P]es?n8<iN^ocIk[]]B5(e@Wn"ncdW\>t)<rN<jBZ!G&-rG<:V!VJGWo>5fReZPr9Oac@>\WE<c%E-a=s1j4f/S<Wai+*)DKLZ5plaI_skDB6D:nQjDj6k",$*r$<(D)n4Ha,ImI>1Ij-!j8\+;Kt.:K^`l,&Ogo-Yu5[F^N_[XUQanZ%$f,W?cT:@j9,l^;]VAuTG3:-^X-&n!WN9\M7hZS/rX)G0B+7@TeSc=!16rW=ar+B>@$p2A>%O14]A`JqfaS4ElaBl8HEB:$n0JI2%Xfo4SO5d_fR(\eP=BG7R1%LOk,UBE8ZQ2?\,9*!BONmQVR4*g-jeCcjf6nFcD5Ft$+Zi(#_l6-lh.Pp5#jL@1pm0c-4q6a+`qG<#%+^P$L:Bs-.h<*/@9=HF?DjY"FqPX/Q:;J7,(""9(m%Td@Fdm?,lIA%MR:!EL6sHj?HjWL*j:IVmWfF#2NF\rMJ/Ha8M=g&0'[tT*%`oNo.KqPSd2q2A[I57tOj+T@<IgP02<ndL6WJnW^IZ]ktd6ISl@>]9TaV^>cF+CoV$/0!=eLM3BQPp&_U4.YPoA2pejHM%:MBcn%%XE%[<UHMObJSt(1*.Ac1lWtG\:a!o#C$"l\T6F18PP\hG5+d$940_#$M"sitc%kBdiF:ue_gA=-?^%*f8sEpeRN=;ZL-%[@g:_JH%8b)12KW1CN]A@:4(^](<iHp_l,Krci2T!\X1S<8H\Me,\j"je0K#J=4/MUI]`!56L83IA03Vgg'WqL8<hfm-'o94D:58&cML@qWZ%%<]ejb9u[9:!#jn,;VZg#6N'ncY_\nAR-Msl![X6en?!2PX?%r7J:,l)Oi+*TBT1\s-Ca=P?1hc5fu:KoX%iE1k[)*9P$I7gF?SB%BU^Y!P.+sIVj;!*l-6qt2I7%b5:c?dqkhD*jm'"Y.ZD/iGZj'*=>]#.Jq,0)'>u`O$;5]4fI+;mnU*\A?L>La%.2sG\,G]D9lGOZ%!\KiR7Z/a:?#U*%>/2DjB^26TQL-`&'0<Id0Zgq5_#3ihht/.)EL2(lHtYV:c>EtGXShjSp=g831Er`25mT4>Qd0jIO^ZUf7*a%E%"!EMbM@^5WL/i$s"K6G97Z).>_`CL0!,!qcE=-7@lDX:*E-i0CC,/*><J`KmMUf0"4Z6f?D+_KQMaZh(`\$9BEPiG>qV`@hD+&kc%e"n#m7d"V@[E3AV$_?m*&63m<\MGg<NIb9A:/HOF7`c?A>/0jK@hg-Ze2@A0H^RlJ*0"H*)*g>(PH22lVI[m)e(L*nm8Q6^-OL,H%f2Ru.d4m'u?^%Vi;(>"M2RV(Zd0L1-b6O(19EfD?H[8K+lElOi)QeXQ(S^3)'U1iq#@h8q3u"qC:p@)S%])jb7.PN(5"Gm:98$8>%-_/T)8@(h-g/<&?#XgP]?Yt13^_H70`+XQ,JK>?9>)`Whi7dQUWJYY]77&>V"3A%A1&K]c,Y.G9crE>[48W'r)LADf7Pn7f5(M]C%aA7uBYAEl(,=)lO*F*iN8U,LC-Bq.b/9/So4jCK.rp5GW_tS]7r,S<Em<bA*$T9g,P&+t=b[Js+cTJ"J0D2qtYAL/!J7>%'Mm5<8%%D6A=5`SS&dNt08J!HXQD,6eV)$fGHN\$jRX2$dhlZ1LU*kJ(:=$Clr9M!8,&u'6[WQN6:QBi!uT)t$h6o.;/-P=GQ]B:jo',#!!%N_9P]B_]2u&h5#/5,9N@/97i\B0T?>!r:%qZ/l<VVASLcesjkQb@;d?q;1lePlqTilZ\K$,+S\F]k=pgZP:BOZuIed[127Z(dWnY%cWDhRa1VmR9B9rt<9.Oo?atFCn3+cia;qO#UBBO5<Z5;6^mp5A!RB_k`nAAK/S&kJMM9DWq^.L4;,"l]edhB-j/l*CiOEaT;,:QD%)\Incb(jf^`V,j1B$\Dh["H`nAb!0O/1;<"e1-7;dFm&hX`(-W?i!K[?.pF#OE9UOAJD1O2WZpQ=gbW,%8.1^-/<A>l89ck/Japu%EYC<8'/ma(`U/njA0/uWPS_en!;[JscG4V4E(WBieh*N?;0r.FH$m8t?q//Ph3Z(F;T[<LarOG-AIK&:3+@rGFK$T`27Pkc]JBsU%!bM&.:+6bWhSRr'CmIEm[``]7VE/9HPkg_:ff'IDq*<-GR6^7gf`Z(PLKqCp!j>6I2/[?c4dBdc*2.['5Z$Jn[`EUAL10RPMVl9C%kMoL2Oe+ib`k^HbN.b?q'oZqGLrTmDE3hiJ[Veg9=:C%8!1(o,=c@t]@[\j$^$@BIne2EBlUYuK/B\d:*2BhgQG@NuWg,q/;/iug%ME0*I1dsmbD-hrg!_83>4G,hml/]!M@mhU%&2:^lDq'p%ple<fg\X$opmT*"cU'5JD-4ASce@>GQ:Pq;7C5$[+"#E,#5S)!C9=GQ%KjhnE/2&7)T*i@aLmDW]efd%uLJ!o$_[.ZW_r-o(gj?jW#/VZI#CEtrR7\5=RDXRM*XQWm(Cadj0+]#-pt]qI#'7:fi)bZ\nttC[%PW-pQ<!RI]#cB:$jtPFEn_6)%_SI8t_N?1"UFAWVHT4@E*X8@qg0S?;\7gD,h0Up-SCtfqLg\Ij$)g7=\0qHBD4\Q:0W#inc+R]H%SCte^4Qou3SS]A5@>Ka"Pn!F@,`su6fu$(FlU@I&BD+$&Kd1"3p+R&inQA>.3'd[o35L\>%"rPL_<)!:B><9LHY*duhL*(,[N@7$%k;`Ze++<pC-&XY9?#Ret%g+&7GFj"ZH?`'T8Z0BG/t-$T8d#cR\0t"19onJ`60QoX=ClOj#Sb6O7nZ\#m,8'\$t=XKAU4Ud0a?r=%HuBM\pNk^i0Sb54mdkO\k-3.DZ0\"jRk.jLKT!k%jmKe69uBnAb3M\gEMhU;d1T2BOXsoH[#6@99/o3?9/smM93<i!9=l5r@>ra%%_BkL%0HsMnS\`!i`EC'h[9SVG[Y4>1ic[.h$1#jt>+A)U=S]!lm7]3eK.)m#N8JQ?jB=>q(]qI?0&P%benm4d(LPsFC^*Bt1kQGM%RDD=uX,_YpA4d$>`tb<qAoMcnP9#Tr'k?^2UD$S1@'M[HOiM`IHq-7XDQrUE#`@rDaEFcpgPMEAf^*,RlNTEUV'5gMgVJ_1BC+R>%>3"WHbu0I0QA*7<d6Aj&lCT2\[VQ1Gs'4^`oF%\^13jdq9_Vf%_0XTo:Z&N+kaj04V1\2mGcRq7TM:;>38!"qh,=t$SB2^m:G<\+%UEsTF8;(s2'/\#D6(2G:"O2!76:'0b&NFq:*/Wf<UK=Tlq6UZRMD`_J-jQO0M*SSIi_MGXP=UE@bnE*5c7fNmk;#u\:s_>@HO]te%V71Qk1f(s/D'VV;-Z"U-kCR$%,0kPG4-P!81ErRU))84</do(M$eP?/P[>$sICfr#ei^2nSO\o%2=.u$PeLs*+JrhhN,;Ua.%Z%\%m>^.)`)r05REM7f%>lN$dKej-i]6JA^+N9YG<-XpjuI@KB%4ALQW3R8R&G;i9stlfC7Z:0gr[<7.$JaKq.,iTTBVr73"CI`h/f_=%V$sA6=MdH,4],r?iu\c2n.bL$=RJ$$9HkjVOd7Gh5pBJ3>_p-RlCSY#p!4',ohQ"7)b[8^/kCa6rUXJE9Cu#rGbWc^ItCB:Gs9:&%Z:GZ-PP@L$r=cZ,@38)6cP_#ij2F1,iYBfgOfX/[41hGd$9Eg5As+B\DVTM7"i^K2D?*^'"!UT.,DK2p5o_j1(ZY;].]@_*oU4rQ%G"u"5^9^rCe\ji&!nMh'-E?+JToDG@jUDus!_IqjV]S?a!kJs#D5MhMY&2L`W.7?kc75J_e],W;Wb#*oA^MYGLIMaHbaC*8he/a@%SKg]WF/DH$o:6Cd>VQn]!&%`e\R)n"HcJRfMiQk"0S^E4P`[&L^?ZM-n4(GYHj,_Xi<pL?)-Voq+OX1_cCT1E,4gq,(758<CZX1&%/l4l2MK/HK32p3H>p*BlKb=gDY*Q,EYL*9f,$p`H]\UQRA/gTBSgK'ZB*GFk&ZB`X8hLdJ't=<B6b[c=;;$5r2A6.6_"6`Ip:`VY%kTS-Uqmn=B_dA16@m^do6ntI^q7&KbXr=QLHg'W%#hPMADe%B?]+e<FMDD5uiR2U3c%K4_[8-%F6#Tr:4[9kO6G/OoTf%OUG[?aq%Q3F0lVn]=$&h0%5\7_N[MBudjPL\@ZA03ZnAZ_QE8\\A&s)f:#dTV&V:F7PA[u89(bBqgoqd0=Xhl0,jM_,9nI".n/c4G$VToes2%UpKGOKL)`(/Di3r?SE*Idd+juNFQmgRHP-]CAW.jWtrhX<c6!,OA;q5YZMj5D_g1C,%D/;.`J.H4]cU3kT9):`Kd+T!)3ft]+=J#%4_4*<@QG&Tl^#iVXn([<ETcMS2lI%r^PSZC3<+@grP[LHlg5U:HA#UhTk,P3!UAPcIqX/jU5/.$H\e]]G.@bF_7jOsE[53KAXZf/%<ZkZ=8c9hMjs*4K\!KaVAZ(&r01.;C-E_D<\+RW7"il6ai'#QQ<tbQ3H?r?\3!PoG-=8(%9p\8k0VJ$r6C53)7`@m`qL'`Vl]9N6%72jb;n\Ua.^P),.U"kVmm0u^5o[.u`gmi1r`$f1[Ee6@>>WWLENsF6KE@Y6oOk,ToVVYQ]MV6`,jLI5Q6VePAF8.X6$"<rNDf`PX%rB5f_^?f/ri\T9K7ZtZi>do\8.ZF@"KnZ'Lp=23K?5lJN=+XjM>?1modGT5il7E11HeX]9+Bl5[8'MmC!ZlidSHg`W$a-YlXanF=%O7JZP*D9"=6;$6U$&$hs7L.dFWKA@^n6[eD8UjIM0E]p*TtNEQ\&FR8WtfH/W':>+._9U^Y@,GLdP0NG&e(^mbE]Pn7BdeQ<U6n0%Mn4k\EPr]sl]]_,_(jlJ\ft@"]5B5XL0/#hY?"Cq?)]cL<i2l2oi`I#j^=*ETI(I9C!M-f?<=QaSpJ>XP2+V[!t'g2I4%I=:tp;4%+NWpSAtDWr/3/<.[jRQfpSZT6*^1Ve%Q@3XFAdmV@-\dfrG_A"m=Rs>$F29P@d8@<JK6g.QB(lSKLkhJ@8_A6HoLF,;lO7U%Kss*%$\W:p(E-qc2kR%Bd4hJSBmYj_MdRM8:M<^j-ibWpZ&b$+PUc_h3*Z"f*tnLnVhVY3?E;i+r4OhF?QLOQe@*SFDHtdr=1K..+[+nF%L/is=>iu6;(QB`6orB9l1IX9le9VPGL57Q(%Hg-E'[^ejH-DQ_(G<QgG<)b5GIejBQ"rm%eE5<S4"+:l,feWm$XuK,RRD?`.FTrt%^q$^JHjZ=HM(R+<9`8aCXe3%06PGN,jVsbAh03(N7oWk3fa+-fB78ej,A`9F]Q,(>m\Gue\*^n:Kt=mtkPHLA9VG,BFt3$;W+O5<%&c37Ed21&=)^T%`ah(lrTMbD<%:<P(.E)38#dF2$h(>4gleCiaC,s@d8S3a%8;uDuj'AI94g]2*F6'<)jkq.&*nf$T-Cs!]Ka@->%0Se\Q%hQsCS>,W.cH>hle-(i,%7+gaP&B&m3aA[/#:;oO>jpV\*PFpuU'FZ1%j<,f'&%[<P=S[#Er1-RmeX\rQqYBm>q]W"a(<]r%[pd#$ekO[35WV98TAW4k8OgBH<%%AH#4I.p4*<IF046+p`1,m3djbXDBTH0ffa[fkPJLM+_*d,?*B#(8\$,.#A^+!^^39l.*njT:%2'G\cZDkhm3mZBXn5_@Kfup%:!Fdi>LUYLH]5QQo;b+)t9]JUlr\u^(c"C\%e\,qC=k,Z>).M4[YtNDNdJ#=A>Nb%WPQsm&d)>Ie%JjEPTH*QK[ArB.L.f)NC'))'ZeYSND@.oT0V.fJA;H&72D4\H9I^[X5fg5E]YA(@/\VkW<@bE(kAWA4I/mAPd.],VHm8>ms;U=mi%ETUePGSDb")iX5'@LI&:T47Gc3XXJV;H_;#@XO>Bn=U(3'QQ8J"X'HCp\LMZJ'12P);Ha'ehbUt0?8<uebbG\&s(U;\F<NT&;PLD%YFV=6dSgq02++Lo0lr%M^"\3(=ske^agj,H2g=41;VSV;?(^&2Gh%rZ2;gN19d50[d+`mQ'DM&PECK[2R,i&ims5->rVGlhFDltk%\ad5Vn8QL\[c;aLZYR+geGd#E^A81^Nbe4+pN8AXpGUm.llDW:rE-Jpc#e*Z%9<^%dV!MggZ:[mMEI^F)^.D!Kca?[j])AVOb\m1%Daq,."C3+'!pcKoMAm99f?Gm`G9C](\AntI_YZtC'E%6k/5q0<K>/:Y"1r4Hjf;`dN+8iG_;@V=#Fpb=W,<$[?Sm;mX<Z:)NZ(V'%mrh.+$n$NJDN!pR@Z\p,n3%s:g>@So:4<P](&8adNrE((-fmMgH.rKBr=t9$\W5(p]#=4t+8tTCdu+_tMuH1>N;ggUEV)2MQD;3H%R*`@ENoiPtoXBE.@_6mTA+6s&>\D>C!LD)>3)R!n6(lH,n<Ch;n2^-!*\kKE,=1;^8'u-?s!3pC)FD1N&OX;F_kCFr,c'YXCYO!_%al:#>g1i_+,*)P0qjeOCEcU4R+`)=@f84m;i@/mr@jQeVlg,R$LVPRog+lRH^i)@2..I-+pq-[CfG:V$+:7rIK>?q4DHe4X7IQeZ%7[o%EkVfhRD1R&4P_-X%<OOY>BT(MCZWt;X+mngV>-&d.m\\04N@s+@84SlA&?BlH[iSL?O@4O@MnP<?pB^W*0.n6^+n-7V^Au>c%pT$H6g-/hF\G)=D0)DUl12'E+!cL6Q*sq(7^!j.W+XpJVe[+-H"Z)2!'b"A6R"U[:oGhP^ET55h%^a&"mp,%4eVT.aJ"Nsq#t>m+%HX=0cp%G:E1j[oY/\;r5gU->KP,E-7r"7_536#f.al(ToZjo.2@^&\3./mUYj/V,"RV>1.NYK9?)&.2[4bPhC+2;>3F?@FeM&/RI%P]/pAM2d9P02Ha[n05oNYb2+L,D]Q5Ws#+*(/GYBe$D\3hs0qnZ$ef`W0nFl,K">j5&VuY,HLALZ`"tM4fobN2N@(8AV%WF(c8Bm%kkYLFJ)B!'F>pl(e)?Z-"``01D_V7o2jhpoMeNl--SCs_V[uL:16Rir]ZKmje'FTm4=P9<G[_mAm^%^8"gqG>qmg'J:4=>9pJsi!%`c&fh0f11([FC/alH@'(d^\0VT9A<4-NjGV@gHNZ5:"<bR#N6W@7$URR`>dtX5D>)o@$e@rgVgEq"*DCq=4'KJ,'$/+9232TB/k9%j59dnS$1`,IeDIQT5VLEpra14rquK%+9(<t5Q:<KLHg:_Vk8J;p7DIHf.Y&@nXFGY9!nUO_g_?tcThI!d=C09r$(X&J+uZ(rMh^Y%SYfc/rT8V-r8XEas6f8U^\ci*+-6HspqmV,IuWo1_#GVYHP(T'j6o0[p"SABs8EPds7%2Grp)L-rnZI[qWb-]p@WXer:>tVs7uV_%+$Y2Je(=W_S%#T9ruTM]jtH;KgNPl2o@)#Mr:nOk:Oi6"s5G^&:Bp`tYQ!LQrp-K^#I6ZjG5~>%AI9_PrivateDataEnd