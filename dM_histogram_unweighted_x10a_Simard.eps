%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: dM_histogram_unweighted_x10a_Simard.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: Brooke Simmons
%%CreationDate: 7/24/16
%%BoundingBox: 0 0 573 196
%%HiResBoundingBox: 0 0 572.8787 195.6536
%%CropBox: 0 0 572.8787 195.6536
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 44 8%%BeginData: 6490 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0BFF7DFD07A87D7DFD08A87DFD07A87DFD08A87D7DFD07A87DFD%07A87DA8FD09FF7DFD08A87DFD07A87DFD08A87D7DFD07A87DFD07A87D7D%FD08A87DFD0AFFA8A8FD34FF7DFFFFFFA8A87DA87DFFA8FD34FFA8FD0BFF%A8FFFFFFCAFFCAFD2EFFA8FFFFFFA8527D52527DA8FFFFCAFFCAFFCAFD05%FFA8FD26FFA87DA87D7DFFFFFF7DA87DA8A8A8FFFFC3CBCACACAFFC3FFFF%7D52A8527DA87D7DA8525252FD1DFFA8FFFFFF7DA87DA87DA87DFFFD05CA%FFCACAFFFF52FD047DA87DA87D7D2752CFA97F7F7EFD17FFA8A8FF2752A8%FF7D52527D52A87DFFFFCAFD05FFCAFFFFA87D527D7DFD06527D7DFD1BFF%A8A8FD09FFA8FFFFCAFD05FFCAFFFFA8527D527D5252527D525252A8A9FF%FFFFA9FD17FFA8FF7D52FFFFA87DA87D7DA8A8FFFFC3FD05CAC3FFFFA87D%A8A8FFA87DFD05A8FD1DFF7DFD09FF7DFFCACACAFFFD04CAFFFF7DA8A8FF%A8A87DA87DA87DA87EA9FFFFA9A9FD16FFA8A8FF5252A8FD07FFA8FD33FF%A8A8FD09FFA8FD17FFA9FD04FFA9FD17FFA8FF7D27A8FD06FFA8A8FFFFA9%A97FFD04A9FFFFA87DFFA8FFA8A8A8FFA8FFA8FFA8A8FFA8FFFFA8FFA8A8%A8FD11FF7DFFFFFFA8FD05FFA8FFFD04A97FA97FA9FFFF7DA8FD04FFA8FF%FFFFA8FFA9CFA8FFA9A9FD16FFA8A8FF5252FD08FFA8FFFFA9FD05FFA9FF%FF52FD057D52A87D7D52FD047DFF7DA87DFFFD047DFD10FFA8A8FFFFFFA8%FD047DA8A8FFFFA9FD05FFA9FFFFFD047DA8527DA8A8527D527D52A8FFFF%A9FD17FFA8FF7D52A8FD06FFA8A8FFFF7FFFA9FFA9FF7FFFFF7DA87D5252%52A87D5252A8527D52A8A87D7D7DA8FD047DFD11FF7DFFFFFF7D7D525252%A87DFFFD05A9FFA9A9FFFF7DA8527D52277D7D27527D5252527DFFA9A9FD%16FFA8A8A85252FD08FFA8FFFFFFA9FFA9FFA9FD13FFA8FD05FFA8FD12FF%A8FFFFFFA8A8FFFD04A8FFFFA9FFA9FFA9FFA9FD05FFA8FFA8FFA8A8FFFF%7EA9A8FFFFFFA9FD17FFA852FF7DA8FFA8FD047DA8A8FD34FFA8FD09FF7D%FD15FF7FA9A9FFFFFFA9A9FD16FFA8A8A8527DA8FFA852527D52A87DFD20%FFCACAFD11FFA8A8FD08FFA8A8FD15FFA9FD06FFA9FD17FFA8FFA8A8FFFF%A87DFD05A8FD20FFFD04CAFD10FF7DFD09FF7DFD15FFA9FD05FFA9A9FD16%FFA8A8A8527DA8FD07FFA8FD1FFFCAFFFFFFCAFD0FFFA8A8FD09FFA8FD14%FFA9A9FD06FFA9FD17FFA8FF7D27A8FD06FFA8A8FD1FFFCACAFFFFCAFD10%FF7DFFFFFF7DA87D7D52A87DFD15FF7FFD05FFA9A9FD16FFA8A8FF5252A8%FD07FFA8FD1FFFCAFFFFFFCAFFCAFD0DFFA8A8FFFFFFA8FD047DA8A8FD14%FFA9A9FD06FFA9FD16FFA87DFF7D27A8FD06FFA8A8FD1EFFC3CAFD04FFCA%CAFD0EFF7DFFFFFFA8FFA8FFA8FFA8FD15FF7FFD05FFA9A9FD16FFA8A8A8%5252A8FFA8FD05FFA8FD25FFCAFD0EFFA8FD08FFA8A8FD15FFA9FD06FFA9%FD17FFA8A85252FFFFA852FD047DA8FD1DFFCAC3FD05FFCACAFD0EFF7DFD%09FF7DFD15FFA9FD05FFA9A9FD16FFA8A8A8277DFFFF7D7D527D52A87DFD%1CFFCACAFD07FFCAFD0DFFA8A8FD09FFA8FD14FFA9A9FD06FFA9FD17FFA8%FF7D277DFFFD07A8FD1CFFCAFD09FFCACAFD0CFFA8FFFFFFA8A87DA87DA8%A8FD13FF7FA9A9FD05FFA9A9FD16FFA8A8FF525252FD07FFA8FD1CFFCAFD%0AFFCAFD0BFFA8A8FFFFFFA87D7D5252A8A8FD13FFA9FD08FF7FFD16FFA8%7DA85227A8FD06FFA8A8FD1CFFCAFD09FFCACAFD0CFF7DFFFFFFA8A87DA8%7DA87DFD13FFA9FD08FFA97EA9FD14FFA8A8FF5252A8FD07FFA8FD27FFCA%FD0BFFA8A8FD09FFA8FD13FFA9A9FD09FFA9FD15FFA8FF7D52FD07FFA8A8%FD1AFFCACAC3FD09FFCAFD0DFF7DFD09FFA8FD13FFA9FD09FFA9A9FD14FF%A8A8FF527DFFFFA8FFFFFFA8FFA8FD1AFFCACAFD0BFFCAFD0CFFA8FD08FF%A8A8FD13FFA9FD04FFCACACAFFFFFFA9FD15FFA8FF7D27FFFFA87D7D527D%7DA8FD1AFFA8CBFD0AFFCACAC3FD0BFF7DFD05FFA8FFFFFF7DFD13FF7FFD%04FFFD04CAFFA8A9FD14FFA8A8FF5252A8FFA87D7D7D52A87DFD1AFFA97F%A9A9FD0BFFCAFD09FFA8A8FD05FF7DA87DA8A8FD13FFA9FD04FFCAFFCAFF%CACAA2FD15FFA8FF7D52FFFFFFA8FFFFFFA8A8FD18FFCACA7EFFA9A97FFD%09FFCAFD0BFFA8FD05FF527D52A87DFD13FFA9FFFFFFC3FFFFCACAFFA9A9%FD14FFA8A8A82752A8FD07FFA8FD18FFCBA2A9FFFFFFA985FD13FFA8A8FD%05FFA8A8FFFFA8FD12FFA9A9FFFFCACAFD06FFA2FD15FFA8A8A852A8FD06%FFA8A8FD14FFA9A97FA9A2A9FD05FFA9A9FD07FFCACACAFD09FF7DFD09FF%7DFD11FF7EA9AFFFCACACAFD05FFA8A9FD14FFA8A8A8527DA8FD07FFA8FD%15FFA9FF7EA3A9FD05FFA9FD09FFCACAFD08FFA8A8FD09FFA8FD11FFA9FF%FFCACAFD08FFA2CFFD14FFA8A8FD09FFA8A8FD14FFA9A9CFCAA9FD06FFA9%A9FD09FFCAFD09FF7DFD09FFA8FD11FFA9FFC3CACAFD07FFA9A9CAFD13FF%A8A8FD09FFA8FFA8FD15FFA2FD0AFFFD04A9FD06FFCFCAFD08FFA8FD07FF%A8A8A8FD11FFA9A2FD0BFFA9A9CBFD13FFA8FD08FFA8527D7DFD08A87DA8%7DA87EA87DA87D777778777EFD0CA87D7E547E7E7E54A87E7D77A87DA87E%A8A8A87DFD06FFA852A87DFFFD06A87D7DA2A87EA87EA87E5377FD06A8FF%7DFD04A8CF7D7EA27D7DA87EA87EA87EA27DA87EA87DA8A2A87D7DFD09FF%52FFA8A8A8FFA8FFA8FFA8A8A8A9A8A8A8A9A8A97DCAA8A9A8FFA8FFA8FF%A8FFA8FFA8FFA8A8A8FFA8A9A8FFA8FFA8A9FD05A8FFA8A8FD06FFA87DA8%A8A8FFA8FFA8FFA8CBA8A8A8A9A8A8A8CBA8A8A8FFA8FFA8FFA8A8A8FFA8%FFA8FFA8A87DFD04A8A9FD07A8A9FD05A8FD0AFFA8A852FD05FFA8FFA852%FD07FFA852FD06FF7D7DFD07FF52A8FD07FF52A8FD06FFA852FD07FFA8FF%7D7DFD06FFA8A852FD05FFA8FF7D7DFD06FF52A8FD07FF7DA8FD07FF2DFD%07FF7D52FD09FFA8A87D52A8FD04FFA87D7D52FD05FF7DA87D7DFD06FF52%7DFD07FF7DA8FD07FF27A8FD06FFA852A8FD06FFA87D7D52FD05FFA8A87D%7DFD05FFA87DA87DFD05FFA87D7DFD07FF52FD07FFA852A8FD06FFA827FD%08FFA8FFFFFFA8FD19FFA8FD07FFA8FD09FFA8FD07FFA8FD13FFA8FD07FF%A8FD07FFA8FD34FFA8A8A8FFA8FF7DFFA8A8FFA8A8FFA8FFA8FD05FFA8FF%A8FD29FFA8A87DFFA8A8A8FFA8FFA8FD05FFA8FFA8FD2BFF7DA852275252%7D525252A87D7DFF52527DA8A8A8FF52527D7DFD29FF7D527D7D525252FF%A8277DFFFFA8FF52527DA8FD2BFFA8FD067DA87DA87DA87DFF7D7D7DA8FF%FFA8FD047DFD29FF7D7D52A87D7D7DFF7D7D52A8FFFFA87D7DA8A8FD2CFF%A8FD07FFA8FFA8FFA8FFFFFFA8FD05FFA8FD34FFA87DFD05FF52A8FD11FF%FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2016-07-24T19:19:45+01:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>88</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAWAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9NDzBoBuzZDUrU3gk9E2&#xA;3rx+qJP5OHLly9qVxVff61o2nMF1C/t7NjHJOBcSpETFDxEsnxkfCnNeTdBUV64qknmO+8v61pf1&#xA;GK6tdQUXeky3FtHJHN+7lvYJImdFLfBIu612YYqirvQfKNsVD6FbSFldgIrFZNkAJqUjIBNdgdz2&#xA;75Eyptx4TPkQPeQOfv8AwOq1dD8omX0/0BADyK8jYKF2fhXlwpTvXw36Y8STgNXcfmO6/wAeeyFb&#xA;Svy80vy22qTabZRaTYWxklme1R2SKFfi5AIzl140K05V264QbFsMmMwkYnmEE2q/lDDFA1+NH0qW&#xA;4i9eO01SKCwufSDtH6ht7pYpQhdCA3Gh7EjCwRDwflRYzXxm/QkMkU8aXyym0X0ppECRxuG/u2cR&#xA;/CppXfFUNp2rflBqOpHTLQaQ996s1sIGhgR2ntpngmiVXVSzq8Z2HVaMPhYEqp8vkvyktw9wNGsv&#xA;UkRI2/0eKlELEUHGgPxnFVT/AAn5V/6s1j/0jQ/804qpy+S/KUrwu2jWXKBzIlLeICpRk3ou4o56&#xA;4qqf4T8q/wDVmsf+kaH/AJpxVTufJflK4t5beTRrL05kaN+NvEpowoaELUHfFVT/AAn5V/6s1j/0&#xA;jQ/804q7/CflX/qzWP8A0jQ/804qs8mQxweT9CgiHGKLT7REXwVYEAH3Yqw2787fmDFfD6tpiXdm&#xA;2oXNrDC2nX9vcywRJEI5F5s8SIJXkrLIwDIAyL2xVEaJLdeY77QrrzLpCT3X1bVYwJLUwRqgubUL&#xA;Kba8d5Y+QQD9o9/snFWRSaL5QSR4/wBAQMYyFYrp4KklWb4W9OjD4Oo2qQOpyJk3xwEgG47/ANIe&#xA;X6/vUbvQvJDQKbnRLeKEPG/NrNYwGSWIrybgKDk61r2DeBwcYSNNImhRPvHn+r7u9T1yH8vtEa0S&#xA;/wBJtvWvpDFaQW+n/WZZGVebcY4IpGoqipNMm46Gdvyfv3udLWbQZLjjNHcW8T2frIIkJnqqnmpj&#xA;Wpb+XrirrrUPygtbI3s0mhfVvq0l8joLWQvbQ1EksaoGaRVKkfADvt1xVvRr38qNagvp9Li0m7TT&#xA;GkF8Iord2jEZILlVUtwbiSjUow3FclCJkQBzKq1lYflss5sFsLGC6dvUW2u7VYJmNxIxBRJ0R2DP&#xA;yC8R7ZfLR5RHiq4949Q28xbHiCb/AOE/Kv8A1ZrH/pGh/wCacxmSmvkvyktw9wNGsvUkRI2/0eKl&#xA;ELEUHGgPxnFVT/CflX/qzWP/AEjQ/wDNOKqbeS/KTXCXB0ay9SNHjX/R4qUcqTUcaE/AMVVP8J+V&#xA;f+rNY/8ASND/AM04qlHmby55et7WykttFt1lGpaayzwQwRtEVvoWDlvgalRT4anFXn+rWttp/wCf&#xA;dncGyjjju54fTuYysX72W3IYusYHMswPxPuelaUGKs/8yflto2u67FrstzdW2pwwpBFLDICgEMwu&#xA;IT6bh0PCVeVKUbvXFUs/5VzpHl6yU2l3dyxNLpdnFFLIq+miXVrG7I8SRScpPQRmJbY/Z4jbFWVa&#xA;o2nWtxa3FxqUenyJFJDCZmiBdWeJ3+KarHaIKaH9qp3oRKGnnkNwBNdwv8cm6GcRiYkWCQeZ6CQ7&#xA;/wClf4Nh/wBN6R6fH/Etvyofj9W1rurAbdNiyt/sfnWz8jn/AJs/9L+xfHx39I+Z8vP4fH3Kt3+i&#xA;j5XuzPqqQ6ZJFO02ql4Ckcblizl5lkg4pWnxqV8RlRxmBo7HzYZMnGbquX3UxzRPyx8jSaXA+n3L&#xA;X9kyOIrmOSBonDfX0bgII1hUD9KzgLGoVdgAKGoYKcv5P+VLmW5RNQvVlWSUqscluWtlvFuDcxKG&#xA;hb4ZxfTE+pyYcvgK0WiqbWX5beXrSSRomnIa6F3ErMh9J/0gdTKxnhy4tcsxPIk0PGtKUVT+bV9L&#xA;hS4eW6jRbWWO3uCzAcJpQhjjb/Kf1k4jvyHjiqIlnghCmWRYw7BE5kLydtlUV6k9hiqhBqmmz3H1&#xA;aC6iluOLv6SOrNxjYI5oD+w5Ct4HFUVirsVdiq2WNZYnjYsFdSpKsyNQimzKQyn3BriqV+UFC+U9&#xA;FUVothagVJJ2hXqTucVTbFUquf8AlKtO/wCYG+/5PWmKqEt5pFle3kb63BaTSyepLbu9srI7RoBU&#xA;MA32VDfF4+FMsho8shxRjIg+X7G+WpiQBID0iuZ7ye/zU5tT0e6rCPMcFJWAWNJbapJkYqop8X7S&#xA;r9HiTUy0Oat4z/0v7Fx6mETfCL957h5/H4+5DfmDonlvWdNt7HzBqo0yzlm4R1e0jMsjCirG9zHK&#xA;ySDqjwlZFO6sMqaFG8/KzyrdxypMs3GaN4pOLqCVdL5DuF601af/AIXwNVUCv5ReWrmNpX1C9ulu&#xA;47hriX1Lek8t4l2rXRMcKgOE1KcKEpH8Q+A0GKqr+SNPs9S+rRahdQrf2epyahdVt/Uk+sXEMspY&#xA;tCUX4pWPwqKZmaaYxxOShKUZRq7/AKR6EdzGQvZketzRTaXbzQuskUl3YPHIhDKytdwkMpGxBGQ0&#xA;v1n+rP8A3ElkmuYzJ2KuxV2KuxVKvM3/ABzof+Y7T/8AqOhxV5hL/p/5paV5ut4/R0u51KbR7fVX&#xA;bi/q2kUtvLb/AFZeSyJPLFIqTuQ68SKBeBZV6jqfmbQNLnMGo38NpKITccZW41jBILAnY7joN8VS&#xA;zVPMWg6paLBpuoW95NFd6XLIkEiyERzXkDxt8JOzIwYexHjiqa6hZ6g+oW17ZNEGhimhdJg1CJmi&#xA;aoK+Ho/jmRiyQEDGV7kHbyv9aCN2v+dl/wCXL/krh/c/0vsRul+r+VJdV8m6l5enuhBJqaXSyXMa&#xA;lhGbqV5CVXkjHjzp9oZDPkE5WOVAfIAfoSAxzzD+UX6T1We9g1X04pbQWiR3sMt/IihWVl9WW4Uy&#xA;RPUF45A2+4YHiVpSl0X5IXttpUlpZ65bw3ssXpS6i2ns8zD6lPYFSwulcxrFODGpY8WQbkbYqrD8&#xA;kIUntJ49VCXEVzfXVxcrbskzPe3jXCvFIk6GOWKJhBzbmGQAFeNVxVMtF/LK40jy42lxXdtNMdXs&#xA;9WX0rdrS3AtHtqxen6lyastqTy5fbNabYqi2/L++BvOGsGQXWoWWoot1E86wCzvDdmCAesvCNzQD&#xA;qVq3VSqoqo+Uvy4uPL2sWl0b9bq2tLeaBaRmORi1tp9pGG+KTlSPTOTnl8Tt0AXFWc4q7FXYq7FU&#xA;q8p/8oro3/MDbf8AJlcVYLP+V3mW6vJLltUt9PaXUJ7sCyWRUijkktXV4k+ACfhaNHIzV5etIagf&#xA;BiqceVfLV9oV7oun3F5yeG21OUxwD9zwkuLVliHqh5OK1r1Br7YqyEWetW99fS2rWzQ3cyzKJRIG&#xA;WkEcRB47H+6rmX4mOUYiXFcRW1d5P6WNFZe2XmC9tmtpXtEjkK82USFgFYMaA/LDjyYoHiHFfwUg&#xA;l2u+XItXv9JuJZ5Yo9MmecrDLLA7lomjA5wvG1KtUg7HoRmGyeen8lvMkcEUVv5oq0WoLf8ArTQG&#xA;WRmVlYNyaT4ZCqlH47NXfwxVUvPyc8wSaZZaRaa7BZ6Za2wgZLe3lhd2jsruySSqTcRzW8WSQU+2&#xA;lQd9lUok/KR9W1i8uNH1WQaVexSyW8d1a3aWyxOY/Qt2HO39RIxV4ihFOK1/ysvJhOOBEiL4htYP&#xA;LivkenmxBsvULmxOn+WtNsC/qG0l0yAyAUDGO5gStN6VpkdL9Z/qz/3Elkn2YzJ2KuxV2KuxVJvN&#xA;UTvYWrLK8YTUNPZlUIQ4+uwji3JWNP8AVocVedxajoln+bKafN5WSDVprx5LecajJICJo3LahDpx&#xA;X0l5ryEkqLUEkM1a4qzjzD5C0zXtWt9Uu7m4jubNAtkYRbr6MiyLKsqu0LSMVdFbg7NHUA8K4qlM&#xA;v5faFoNiDYvc+m82l2qRNLQRol1axsY3QJIGk9FCxLdRtTFWdIoVQorRQAKkk7eJNScVbxV2KuxV&#xA;2KuxV2Kqdy5S3lddmVGI69QK9lf/AIiflgPJlAXID8fo+9K2tZbbTjd2t1MkggjJWaQzqSgTc/WW&#xA;joWVOLfElalj8W+V1QsH8fFzRkE8nDKIriPIcPO/5oPU2Npcq5JxlrgOxV2KrZY1lieNiwV1Kkqz&#xA;I1CKbMpDKfcGuKpX5QUL5T0VRWi2FqBUknaFepO5xVBT/mD5Yt7hILqdraR5ri3pOjRDnaBGlHx0&#xA;r8MqstKlhuOhxVZpOv6drus6bf2Bcwm01GNkljeKRHjuLRWV43Csp279t8VZNirsVdirsVdiqW+W&#xA;P+Ub0n/mDt/+TS5k6z++n/Wl97GPIO8w/wC8EX/MZY/9RkWOl+s/1Z/7iSyTLMZk7FXYq7FXYqlX&#xA;mb/jnQ/8x2n/APUdDiryPUfrlz/zkJZzPBNbm3kENRIkoaMQ1RhLHyMEbKamB0qeRPIB8Ves6t5u&#xA;8v6Rcm21G5NvL6frKGimKuK8eMbqhV5Kn+7Ul/bFUtv/ADV5e1i2W20y9jupYrnSp2CcqGKa7t3R&#xA;lYgKwKupPEmlRWlcVZVirsVdirsVdirsVdiqX38LXF9BbG6aGN4ZmeBCgaQK8W/xEtxAJU0X9r7S&#xA;mlYSFmrcrDLhgZcNmxvvttL+3n05HehZtoTbfViCYuISlSDxAp1FDkq2po8Q8XF1Q2noY7m9iDuy&#xA;JJGEEjyOQPRQbGQe1fhY71J+InIx5ltzm4xO10egH8R7v0gd3Kkdk3HdirsVSryn/wAoro3/ADA2&#xA;3/JlcVQ0vkby1NLLJNBNMs9y17PBJd3TwPOxU83gaUxNxKKVUrRaDiBiqGs/Lui6Vruj2dlaqkFr&#xA;Z6hJB6haZ1eSe1LP6kpeQseR3LV7YqyfFXYq7FXYq7FUt8sf8o3pP/MHb/8AJpcydZ/fT/rS+9jH&#xA;kHeYf94Iv+Yyx/6jIsdL9Z/qz/3ElkmWYzJ2KuxV2KuxVJvNVvby2Fq8sSSPDqGnvEzKCUb67COS&#xA;k9DQ9sVeE+aW1ay/OVoPKljeJrd1P9atIZ+ItpSElEsk3rTLLweSNiCqFeH2aHYKvb9a8kaVrOqf&#xA;pG8nufWWBYIUSXikRSVZ1liFKpIJY0bkp34rWoAxVKLnyD5a0XT1+pW7GOSfS7T0ZnMsYijuraMg&#xA;K9R8YiTnXqRXxxVmyIqKEQBUUAKoFAAOgAxVvFXYq7FXYq7FXYql+kWcMdskxhVbpgweUqRIQW7s&#xA;6Rv0Veo7DIQjs5OpykyIv093T7CR3phk3GS6/jMEiXEUpjaaeFZVrGqtyZE358anitBQ18AdshIV&#xA;u5WGXEDEi6ie/wAz0THJuK7FVssUUsTxSoskUilZI2AZWVhQgg7EEYqlflBVTynoqIAqrYWoVRsA&#xA;BCtABirD9W86+frS8+rWekfXWW+uIAwsLyNJYkktliCyM5RP3U00hmJKN6VAByFFUf5V1vXdTvdF&#xA;utXsmju5bbU43ZIHtFEaXFqEka3uXMyBgKUqxPXocVZvirsVdirsVSzWnu/V023t7l7X6zdGOWSJ&#xA;Y2YottNJQeqki/ajHbMnTiNSJHFUet/zojoR3sZIzT7OOxsLayiZnjtYkhR3pyKxqFBagUV23oMq&#xA;y5DORkecjfzSBSE8wK505WRHk9O5tJWWNWduEV1G7kKoLGiqTsMs0pHH74yHziQiXJE2Oo2t8kjW&#xA;5f8Acv6cqyRyQur8VehSVUb7Lg9Mry4pQq+vmD9yQbROVpdirsVdiqTeapXSwtVWJ5A+oaerMpQB&#xA;B9dhPJuTKaf6tTirznXLbS1/PnTXurV1klRJIZTdC2ikmEXFWEU8K/WXXgo4W0/wgAsnXFXpGr+a&#xA;9E0m5NtfSyRz+h9aRFgmf1E9ZLfjGyIyvJ6s0a+mpL/Eu24xVJ7nzl5c160SHSro3Drc6XcVMUsa&#xA;tHNd20ilGkRFeiyLyC1KkgNQ7Yqy/FXYq7FXYq7FXYqhL+4uI3tIoGjR7ib0y0gDfCInkPFecRJ/&#xA;d/s1PelASIyJ2b8MIkSMr9Ivb3gdx7+te+6VLC2e2s4oHcSSItHdV4KzHdiFqeIr0FT8zhiKDDNk&#xA;E5mQ2Hz+1XwtaF1I8YY2IYhZoiQiyMftjtGrn+HjtkZN2Abn3Hu7vOv19yrbXMdzF6sYkVakUlje&#xA;Jqg0+zIqt9NMINsMmMwNGvgQfutVwsHYqlXlP/lFdG/5gbb/AJMriqa4qlVz/wApVp3/ADA33/J6&#xA;0xVNcVdirsVdiqW6t/vfov8AzGP/ANQdxmTg+jJ/V/38WJ6I65nW3t5Z33SJGdhVV2UVO7lVH0kD&#xA;MUmhbbCBlIRHU/jluo2d69wZFe3kgKBWBehVlatCrqWQ9N6HbBGVs8uIRqiDf45c0No7K19rJUhh&#xA;9cTcb/8AHnb5l5/ox/1f9/JoAolM8xkuxV2KuxVKvM3/ABzof+Y7T/8AqOhxV5ZdRaqn532utXui&#xA;3Om6fdXC6faarO0SLKyQOoiAtXmZllKMyesB4EjZcVen6x5Q0HWL1L3UIppLiOA20bJdXMKpG0qT&#xA;VVIpERX9SJGEgHMFV32GKpNf+R/K2k2ANjYhFnuNLtpI3klmj9GK7towixys6LVY158QOVAWqcVZ&#xA;iiKihEAVFACqBQADoAMVbxV2KuxV2KoGbW9Ohujau7+qHSJmWKVo1kl48EaVVMas3Ndi3ceOXx08&#xA;zHiHLnzF0PK76I4gkLpc69rCRXFpJLpunX8iyrOkP1dxHbyxghWYyuecy9V4/DUZbivDEy46lKOw&#xA;F39Q613DvbshjQAHvP4P7UY1pPoEkctlFc3WlRwTiWzjeIiNgyPGUWV4qKFDigPhkxMZwRIxjMkb&#xA;0d+d8gfJx6pPYJlngjmQELKquoPWjCormFKNEjuZr8iqXaZPZxmW3E0Qme4mYRK0YYlpHP2VJ3+B&#xA;q99jXochEjk5WohM1KjQjHv7h+sfMJjk3FWyxRSxPFKiyRSKVkjYBlZWFCCDsQRiqV+UFVPKeiog&#xA;CqthahVGwAEK0AGKpX508n3mv32kXNpcx2cunNKfrbL6kkazemG9KNgU5sqFQ9Qy1qpxVA+VPLF7&#xA;oN5ounz3gaSG21OZ47ZAlvSW4tWESLIJHVF5V2YGvttirOMVdirsVdiqSNdT6lqNi1vZzC1sryf1&#xA;btzCIz6UU9u3FRIZP7xqfYzNEBjhK5DilEbb3uYy7q5ebG7KtLLHf6ktvDcuIYo3M4gLL8ayqvFn&#xA;UUH2GWla9c1xNmrc+MTjx8RiLJFX3UenxB7uSrc6LbXE0kju1JREskfGJlYQtzTlzRi2/iflhMAW&#xA;GPVSiAAOV9/XY8ihfLsUcWoeYIoo1iiTUE4Ii8V3sLUmgrTqe1MysoqMP6v++k0TkZbk2U6yhg7F&#xA;XYq7FUm81RO9hassrxhNQ09mVQhDj67COLclY0/1aHFVC28heU7fW/05HY8tU9WSdZ5ZZpQssvIO&#xA;6JI7ojEOwqqigJA2xVkGKsR1/wA26JNLcaUJWS50++0313kRliPK+tgeEhHFuBlQN4VxVkn6W0r/&#xA;AJbYP+Rqf1xVbJrWjRoXkv7dEHVmlQDfbqTiBaoOHzl5RmhSaPWrExyKHQm4iX4WUMDQsCPhNd8l&#xA;wS7mXCe5UPmryuDQ6xYg9N7mH5fze2Hw5dxRRS+4/MjyNBNLC+s27PAA0xiLSqgZPUBZ4wygcAWq&#xA;T0B8Mshppy5V3bkC/dZ3XhPcfklttquh68+sWyzq1jJqFrL9ZE4g/ure1m+GjLKCDGBsOp+eTyZZ&#xA;QGMjY8B5jvlO9j5eTcMYhZkRe+w91DcbefPonejyeVNKSTTtPuYYgtLiVGnMjEykgMzyMzMT6Z79&#xA;soyZDM2fsAH3NUpGRsm0Ve6jps1nPCl7b85I3RaypSrKQO+OOVSB7iwKTf4sGm2ECXEETlI+AWG5&#xA;ikd2iiLsERdySsZoO/TMo4sc57T5nqO/vRZA5I3/ABz5U9CWY6gi+jIsLxMsizc348QsJUStX1F3&#xA;C0+45X+UyWBtuL5ivnddO9eIIW583eWTHb6jDfwfV7eSQ3SmUQSKq843ZopGiY8GJYgrXuoJplOX&#xA;TzieXy35+Y2cnFkiYyBNWNr8vhtdV9+yPg84eV5Ykc6raRM4B9KS4iV1JNOJHLrXbAIS7i1zxkEj&#xA;n7uSJg8waDcKWg1K1lUUqUnjYbio6N4YDEjmxIpD+TpY5fKGhyxtyjk0+1ZGHQhoVIOBCZ3NxBbW&#xA;8tzO4jggRpJXPRUQcmJp4AYqxex816LqmtaVewzGCOSz1FOFyphdXins1dWV6UIJGKsi/S2lf8ts&#xA;H/I1P64qh7zzN5cslVrvU7WEOyonOZBUsyoKb/zOBhAJ5JpZ/izytQn9M2NAKk/WYem/+V7HJeHL&#xA;uK8JUL7z15OsbZ7i41m09NPtCKVZn+iOLm5+gZKOGR6fo+9eE9yWeXNYhv7ITR3sNrZ/Xb11YTKs&#xA;sim8uPtRSR/CPskb13PSm51e89iKEY8jfKIHuciIhjiQRcj0Iqro99/Z3d7ILW+0i2to4FvoWWJQ&#xA;oYyRAmniE4r9wygChTTknxSMu/8AHVuHXdFmQvFfQMoZ0J9RR8UbFGG57MpwsGM3uqWOja1NqEtz&#xA;arZ6lfQcp1vinEfVlhrLAUMJ/uzVuVacd/hFMowhkiKJ44x5VsfUT39x7m7HORBjQI92/Tkef29+&#xA;25T0ecfKZmaEazZeoqqxX6xF0clV35UO6kZR4cu4tXCVw82eVj01mxO1drmHpSv83hj4cu4rwlaf&#xA;OPlITrAdZsvVcMyr9Yi6Iyqd+VPtOBTHgl3FeErj5t8qgVOs2NKVr9Zh6UrX7Xhj4cu4p4T3IPzD&#xA;rOkS6bbGG9gl9TUNORPTkR6sb+BQBxJ75AimLIcVdirE9b8u3K3uo3Ok6Hpt3JqcAF3cX1xKC0qA&#xA;8B9VME0TL8CE/vE5Eb9AcVXeQ9I1EeV7NPMthCusIZFnLxWqsyiRhGxS25QpVKfCrGg671xVMtV0&#xA;2RIEOl6Rp93KWpJHdyfVkC06ho7e6JNe3EfPFUk8q6Jrx1jXf8R6Vp8WnGWP9Bx26QSIsIDoy19O&#xA;OWpCo7cx1YhdhhtNsgvNGsVtpGs9LsproCsMUyrFGzeDSLHMVHuEONoY7aaPrsnmy0a50i3stIFn&#xA;J9fjgNpcWb3BekIjZ4Le85hBV2I4U4qoPxMAtsqGj6SOllbj5RJ/TFWM2ula5/j+6E1hEPLH1U+g&#xA;/pWnpmT9zwAoPrPq8/X5V+Djx/axVk/6J0r/AJYoP+RSf0xVjvmbR9SbWdAXRrILZ/WWbV5UjsTA&#xA;tuoG0iTL67O/2U9FhxHJmrRVKrIf0PpFa/Ubevj6Sf0xtWPef9G1g+VNQXyhp1k/mCSMraNMkICk&#xA;/aZRKjRs9NlD/DX7W22G1TyHRtKaKN5tNto5SoMkYjjYKx3IDcRWh742qlqOh2B027Sz060e5aGQ&#xA;QRyQx+mzlCEVxT7JPX2wKgfy9i8xQeUbC38wxelqkAeKReMEfwI7CKkdsWhjHCgVVJoPfFWQyxRy&#xA;xPFKoeORSrowqCpFCCPfFXm/mXy55stNDhtfLegafGbC6L2TRzpe3TRPzZx/p8ESRNK4jEj+o5Va&#xA;05cQCq9A/ROlf8sUH/IpP6Yqkmv6bq4WZNH0LSbkCBzbzXcrRsLjiTGDCts6lOYWp9UH7sVb8o6F&#xA;MPLOnL5i0+2/TYhC359K3PKQVBY+iix/EN/hFMNraI1bSXjWP9E6Hpl2zVEwu5PqoUbU4mO2uuVe&#xA;9aYLTaC8q6Rfepqx1iy4wm9f9Fpcx2TOLYKFB5WoC8WcMyhxyCkAknooT/8AROlf8sUH/IpP6Yqx&#xA;f8vtI1waPP8A4rsohqBnBjDxWlQpt4jNx+rKE9P6163p8vi4ceW+KsnbR9IYUaxtyPAxIf4YqxvS&#xA;dCvT5w1h7vTlXQBHCunevHYMry7tI8PoIs6IOQWkxYk1I4inI2tsi/Qei/8AVvtv+RMf9MbW2N65&#xA;outf4t0D9F6XYny4jynXHKQCZg8MgjFHjJCJKEb92eTNTooara2yT9B6J/1b7b/kTH/TG02xj8xN&#xA;E1r9C20vlHTbV9WtruKYfubYuEQM37ozgRozSBFL9VUlgCRTAhmmKuxV2KuxV2KuxVhHm7SfO9xq&#xA;11NozMyXFmtrp0y3slvFZTSerHPPNbAcJyFlR0J5EFdgKfEqxf8Awv8AnOXj+tX7XFr69ul3bwXr&#xA;wyPBZrbxu8Uq+mym9X1mfdSrcaUqcVRtloH5oWGqm7nmn1BEMBihS9Jj9FZ1d4T6rxI8giHAyNCC&#xA;+55CtMVR66P+Yi6F5jt4ZJI7/UbkHSLl7ppZrdJXJd25yPCoiU/AIlUHoU2qyqYeVz+YaXV5Hq0M&#xA;YNwZLtZpH5xRlppI4rWLg9eKwpG5PDuQak1Cqn53tfzIuILP/Djxw3kUN39ZkWQLCzyxNHAFSStX&#xA;RyrgsKVHh8JVTXydFrCrqMuoi6jQ3JhtILudZyIrVRb+qlI43CzGP1PjZiSa9KYqyLFXYq7FXYq7&#xA;FXYq7FXYq7FUp82Wmp3nl69ttMklhvpFAhkgcRyCjgni5KUqtRsynwZTuFXndv5U/Ndra+FxeSQS&#xA;SRxACDULiVWKpZ0jhWWRZI1V4bjnJ6yyOr0qWIdVU68vaN5+s7HX11FmnnvLeJLDjezSvHcFHSQR&#xA;NLJwSKPkpR+KSNQ8+TAMVVTyZcefbW9udN8xQPcajPCLiK/qWsIkghghWJCtfilm9WQ8qORvSmyq&#xA;q/nOD8yJYrA+XjEl3Ct09yySKsLs8TRQoVlrXiz+qNqclFTxJBVR/kWRrmzurwXWozx+oLMJqQQA&#xA;PYj6vLLBxqxSaRCxLManpQYqybFXYq7FXYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>579.668539</stDim:w>
            <stDim:h>197.172314</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.06</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -195.654 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 195.654 li
572.879 195.654 li
572.879 0 li
cp
clp
50.5526 161.373 mo
288.338 161.373 li
288.338 .5 li
50.5526 .5 li
50.5526 161.373 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
50.5526 161.34 mo
288.353 161.34 li
288.353 .440002 li
50.5526 .440002 li
50.5526 161.34 li
cp
clp
2 lw
0 lc
0 lj
10 ml
[1 3 ] 0 dsh
true sadj
86.2203 161.373 mo
86.2203 161.373 li
94.1465 161.373 li
94.1465 161.373 li
102.073 161.373 li
102.073 161.373 li
109.999 161.373 li
109.999 161.373 li
117.925 161.373 li
117.925 161.373 li
125.851 161.373 li
125.851 161.373 li
133.777 161.373 li
133.777 160.673 li
141.703 160.673 li
141.703 158.575 li
149.63 158.575 li
149.63 154.728 li
157.556 154.728 li
157.556 145.286 li
165.482 145.286 li
165.482 131.297 li
173.408 131.297 li
173.408 115.209 li
181.334 115.209 li
181.334 90.7286 li
189.26 90.7286 li
189.26 76.39 li
197.187 76.39 li
197.187 56.8055 li
205.113 56.8055 li
205.113 59.953 li
213.039 59.953 li
213.039 74.9911 li
220.965 74.9911 li
220.965 94.5756 li
228.891 94.5756 li
228.891 121.854 li
236.817 121.854 li
236.817 142.488 li
244.744 142.488 li
244.744 155.777 li
252.67 155.777 li
252.67 161.023 li
260.596 161.023 li
260.596 161.373 li
268.522 161.373 li
268.522 161.373 li
276.448 161.373 li
276.448 161.373 li
0 .993988 1 0 cmyk
@
1 lw
[] 0 dsh
86.2203 161.373 mo
86.2203 161.373 li
94.1465 161.373 li
94.1465 161.373 li
102.073 161.373 li
102.073 161.373 li
109.999 161.373 li
109.999 161.373 li
117.925 161.373 li
117.925 161.373 li
125.851 161.373 li
125.851 161.373 li
133.777 161.373 li
133.777 157.876 li
141.703 157.876 li
141.703 161.373 li
149.63 161.373 li
149.63 140.389 li
157.556 140.389 li
157.556 147.384 li
165.482 147.384 li
165.482 136.892 li
173.408 136.892 li
173.408 126.4 li
181.334 126.4 li
181.334 129.898 li
189.26 129.898 li
189.26 136.892 li
197.187 136.892 li
197.187 154.378 li
205.113 154.378 li
205.113 154.378 li
213.039 154.378 li
213.039 157.876 li
220.965 157.876 li
220.965 161.373 li
228.891 161.373 li
228.891 157.876 li
236.817 157.876 li
236.817 161.373 li
244.744 161.373 li
244.744 161.373 li
252.67 161.373 li
252.67 161.373 li
260.596 161.373 li
260.596 161.373 li
268.522 161.373 li
268.522 161.373 li
276.448 161.373 li
276.448 161.373 li
.883665 .769161 0 0 cmyk
@
grestore
1 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
288.338 161.373 mo
288.338 .5 li
50.5526 161.373 mo
288.338 161.373 li
50.5526 .5 mo
288.338 .5 li
50.5526 161.373 mo
50.5526 .5 li
0 0 0 1 cmyk
@
50.5526 161.373 mo
50.5526 157.373 li
f
.5 lw
0 lc
1 lj
50.5526 161.373 mo
50.5526 157.373 li
@
50.5526 .5 mo
50.5526 4.5 li
f
50.5526 .5 mo
50.5526 4.5 li
@
42.8746 170.24 mo
50.3866 170.24 li
50.3866 171.236 li
42.8746 171.236 li
42.8746 170.24 li
42.8746 170.24 li
cp
ef
57.9946 165.944 mo
57.9946 167.024 li
57.6946 166.88 57.3946 166.772 57.0946 166.7 cv
56.7826 166.628 56.4826 166.592 56.1946 166.592 cv
55.4026 166.592 54.8026 166.856 54.3946 167.384 cv
53.9866 167.912 53.7466 168.716 53.6986 169.772 cv
53.9266 169.436 54.2146 169.172 54.5626 168.992 cv
54.9106 168.812 55.2946 168.716 55.7146 168.716 cv
56.5906 168.716 57.2866 168.992 57.7906 169.52 cv
58.2946 170.048 58.5586 170.78 58.5586 171.692 cv
58.5586 172.592 58.2826 173.312 57.7546 173.852 cv
57.2266 174.392 56.5186 174.656 55.6426 174.656 cv
54.6346 174.656 53.8546 174.272 53.3266 173.504 cv
52.7866 172.736 52.5226 171.608 52.5226 170.132 cv
52.5226 168.752 52.8466 167.648 53.5066 166.832 cv
54.1546 166.016 55.0426 165.596 56.1466 165.596 cv
56.4346 165.596 56.7346 165.632 57.0466 165.68 cv
57.3466 165.74 57.6586 165.824 57.9946 165.944 cv
57.9946 165.944 li
cp
55.6426 169.652 mo
55.1146 169.652 54.6946 169.844 54.3826 170.204 cv
54.0706 170.564 53.9146 171.068 53.9146 171.692 cv
53.9146 172.328 54.0706 172.832 54.3826 173.192 cv
54.6946 173.552 55.1146 173.732 55.6426 173.732 cv
56.1706 173.732 56.5906 173.552 56.9026 173.192 cv
57.2146 172.832 57.3706 172.328 57.3706 171.692 cv
57.3706 171.068 57.2146 170.564 56.9026 170.204 cv
56.5906 169.844 56.1706 169.652 55.6426 169.652 cv
ef
90.1834 161.373 mo
90.1834 157.373 li
f
90.1834 161.373 mo
90.1834 157.373 li
@
90.1834 .5 mo
90.1834 4.5 li
f
90.1834 .5 mo
90.1834 4.5 li
@
82.7146 170.24 mo
90.2266 170.24 li
90.2266 171.236 li
82.7146 171.236 li
82.7146 170.24 li
82.7146 170.24 li
cp
ef
95.5066 165.752 mo
96.9946 165.752 li
96.9946 171.452 li
98.2426 171.452 li
98.2426 172.436 li
96.9946 172.436 li
96.9946 174.5 li
95.8186 174.5 li
95.8186 172.436 li
91.8706 172.436 li
91.8706 171.296 li
95.5066 165.752 li
95.5066 165.752 li
cp
95.8186 166.784 mo
92.8306 171.452 li
95.8186 171.452 li
95.8186 166.784 li
ef
129.815 161.373 mo
129.815 157.373 li
f
129.815 161.373 mo
129.815 157.373 li
@
129.815 .5 mo
129.815 4.5 li
f
129.815 .5 mo
129.815 4.5 li
@
122.315 170.24 mo
129.827 170.24 li
129.827 171.236 li
122.315 171.236 li
122.315 170.24 li
122.315 170.24 li
cp
ef
133.427 173.504 mo
137.555 173.504 li
137.555 174.5 li
131.999 174.5 li
131.999 173.504 li
132.443 173.048 133.055 172.424 133.835 171.632 cv
134.603 170.852 135.095 170.348 135.299 170.12 cv
135.683 169.7 135.947 169.34 136.091 169.04 cv
136.235 168.752 136.319 168.452 136.319 168.164 cv
136.319 167.708 136.151 167.324 135.827 167.036 cv
135.503 166.748 135.083 166.592 134.555 166.592 cv
134.183 166.592 133.787 166.664 133.379 166.784 cv
132.971 166.916 132.527 167.108 132.059 167.372 cv
132.059 166.172 li
132.539 165.98 132.983 165.836 133.391 165.74 cv
133.799 165.644 134.183 165.596 134.531 165.596 cv
135.431 165.596 136.151 165.824 136.691 166.28 cv
137.231 166.736 137.507 167.336 137.507 168.092 cv
137.507 168.452 137.435 168.8 137.303 169.112 cv
137.171 169.436 136.931 169.82 136.571 170.252 cv
136.475 170.372 136.163 170.696 135.635 171.236 cv
135.107 171.776 134.375 172.532 133.427 173.504 cv
133.427 173.504 li
cp
ef
169.446 161.373 mo
169.446 157.373 li
f
169.446 161.373 mo
169.446 157.373 li
@
169.446 .5 mo
169.446 4.5 li
f
169.446 .5 mo
169.446 4.5 li
@
169.499 165.596 mo
170.471 165.596 171.215 165.992 171.743 166.76 cv
172.259 167.54 172.523 168.668 172.523 170.132 cv
172.523 171.608 172.259 172.736 171.743 173.504 cv
171.215 174.272 170.471 174.656 169.499 174.656 cv
168.515 174.656 167.759 174.272 167.243 173.504 cv
166.727 172.736 166.475 171.608 166.475 170.132 cv
166.475 168.668 166.727 167.54 167.243 166.76 cv
167.759 165.992 168.515 165.596 169.499 165.596 cv
169.499 165.596 li
cp
169.499 166.532 mo
168.887 166.532 168.431 166.832 168.119 167.432 cv
167.807 168.032 167.663 168.932 167.663 170.132 cv
167.663 171.332 167.807 172.232 168.119 172.832 cv
168.431 173.432 168.887 173.732 169.499 173.732 cv
170.111 173.732 170.567 173.432 170.879 172.832 cv
171.179 172.232 171.335 171.332 171.335 170.132 cv
171.335 168.932 171.179 168.032 170.879 167.432 cv
170.567 166.832 170.111 166.532 169.499 166.532 cv
ef
209.076 161.373 mo
209.076 157.373 li
f
209.076 161.373 mo
209.076 157.373 li
@
209.076 .5 mo
209.076 4.5 li
f
209.076 .5 mo
209.076 4.5 li
@
207.587 173.504 mo
211.715 173.504 li
211.715 174.5 li
206.159 174.5 li
206.159 173.504 li
206.603 173.048 207.215 172.424 207.995 171.632 cv
208.763 170.852 209.255 170.348 209.459 170.12 cv
209.843 169.7 210.107 169.34 210.251 169.04 cv
210.395 168.752 210.479 168.452 210.479 168.164 cv
210.479 167.708 210.311 167.324 209.987 167.036 cv
209.663 166.748 209.243 166.592 208.715 166.592 cv
208.343 166.592 207.947 166.664 207.539 166.784 cv
207.131 166.916 206.687 167.108 206.219 167.372 cv
206.219 166.172 li
206.699 165.98 207.143 165.836 207.551 165.74 cv
207.959 165.644 208.343 165.596 208.691 165.596 cv
209.591 165.596 210.311 165.824 210.851 166.28 cv
211.391 166.736 211.667 167.336 211.667 168.092 cv
211.667 168.452 211.595 168.8 211.463 169.112 cv
211.331 169.436 211.091 169.82 210.731 170.252 cv
210.635 170.372 210.323 170.696 209.795 171.236 cv
209.267 171.776 208.535 172.532 207.587 173.504 cv
207.587 173.504 li
cp
ef
248.707 161.373 mo
248.707 157.373 li
f
248.707 161.373 mo
248.707 157.373 li
@
248.707 .5 mo
248.707 4.5 li
f
248.707 .5 mo
248.707 4.5 li
@
249.107 165.752 mo
250.595 165.752 li
250.595 171.452 li
251.843 171.452 li
251.843 172.436 li
250.595 172.436 li
250.595 174.5 li
249.419 174.5 li
249.419 172.436 li
245.471 172.436 li
245.471 171.296 li
249.107 165.752 li
249.107 165.752 li
cp
249.419 166.784 mo
246.431 171.452 li
249.419 171.452 li
249.419 166.784 li
ef
288.338 161.373 mo
288.338 157.373 li
f
288.338 161.373 mo
288.338 157.373 li
@
288.338 .5 mo
288.338 4.5 li
f
288.338 .5 mo
288.338 4.5 li
@
290.795 165.944 mo
290.795 167.024 li
290.495 166.88 290.195 166.772 289.895 166.7 cv
289.583 166.628 289.283 166.592 288.995 166.592 cv
288.203 166.592 287.603 166.856 287.195 167.384 cv
286.787 167.912 286.547 168.716 286.499 169.772 cv
286.727 169.436 287.015 169.172 287.363 168.992 cv
287.711 168.812 288.095 168.716 288.515 168.716 cv
289.391 168.716 290.087 168.992 290.591 169.52 cv
291.095 170.048 291.359 170.78 291.359 171.692 cv
291.359 172.592 291.083 173.312 290.555 173.852 cv
290.027 174.392 289.319 174.656 288.443 174.656 cv
287.435 174.656 286.655 174.272 286.127 173.504 cv
285.587 172.736 285.323 171.608 285.323 170.132 cv
285.323 168.752 285.647 167.648 286.307 166.832 cv
286.955 166.016 287.843 165.596 288.947 165.596 cv
289.235 165.596 289.535 165.632 289.847 165.68 cv
290.147 165.74 290.459 165.824 290.795 165.944 cv
290.795 165.944 li
cp
288.443 169.652 mo
287.915 169.652 287.495 169.844 287.183 170.204 cv
286.871 170.564 286.715 171.068 286.715 171.692 cv
286.715 172.328 286.871 172.832 287.183 173.192 cv
287.495 173.552 287.915 173.732 288.443 173.732 cv
288.971 173.732 289.391 173.552 289.703 173.192 cv
290.015 172.832 290.171 172.328 290.171 171.692 cv
290.171 171.068 290.015 170.564 289.703 170.204 cv
289.391 169.844 288.971 169.652 288.443 169.652 cv
ef
120.611 182.744 mo
120.611 183.992 li
120.203 183.632 119.783 183.356 119.327 183.164 cv
118.871 182.984 118.403 182.888 117.899 182.888 cv
116.891 182.888 116.123 183.2 115.595 183.812 cv
115.067 184.424 114.803 185.3 114.803 186.452 cv
114.803 187.604 115.067 188.492 115.595 189.104 cv
116.123 189.716 116.891 190.016 117.899 190.016 cv
118.403 190.016 118.871 189.932 119.327 189.74 cv
119.783 189.56 120.203 189.284 120.611 188.912 cv
120.611 190.148 li
120.191 190.436 119.747 190.64 119.291 190.772 cv
118.835 190.904 118.343 190.976 117.827 190.976 cv
116.507 190.976 115.463 190.58 114.695 189.776 cv
113.927 188.972 113.555 187.868 113.555 186.452 cv
113.555 185.048 113.927 183.944 114.695 183.128 cv
115.463 182.324 116.507 181.916 117.827 181.916 cv
118.355 181.916 118.847 181.988 119.303 182.12 cv
119.759 182.264 120.203 182.468 120.611 182.744 cv
120.611 182.744 li
cp
ef
124.715 182.072 mo
126.059 182.072 li
129.395 190.82 li
128.159 190.82 li
127.367 188.576 li
123.419 188.576 li
122.627 190.82 li
121.379 190.82 li
124.715 182.072 li
124.715 182.072 li
cp
125.387 183.236 mo
123.779 187.592 li
126.995 187.592 li
125.387 183.236 li
ef
130.619 182.072 mo
132.215 182.072 li
136.091 189.392 li
136.091 182.072 li
137.243 182.072 li
137.243 190.82 li
135.647 190.82 li
131.771 183.5 li
131.771 190.82 li
130.619 190.82 li
130.619 182.072 li
130.619 182.072 li
cp
ef
139.739 182.072 mo
142.175 182.072 li
143.867 182.072 145.115 182.432 145.907 183.128 cv
146.699 183.836 147.095 184.94 147.095 186.44 cv
147.095 187.952 146.687 189.056 145.895 189.764 cv
145.103 190.472 143.855 190.82 142.175 190.82 cv
139.739 190.82 li
139.739 182.072 li
139.739 182.072 li
cp
140.927 183.044 mo
140.927 189.848 li
142.355 189.848 li
143.555 189.848 144.443 189.584 145.007 189.032 cv
145.559 188.48 145.847 187.616 145.847 186.44 cv
145.847 185.264 145.559 184.412 145.007 183.86 cv
144.443 183.32 143.555 183.044 142.355 183.044 cv
140.927 183.044 li
ef
148.859 182.072 mo
154.391 182.072 li
154.391 183.068 li
150.047 183.068 li
150.047 185.66 li
154.211 185.66 li
154.211 186.656 li
150.047 186.656 li
150.047 189.824 li
154.499 189.824 li
154.499 190.82 li
148.859 190.82 li
148.859 182.072 li
148.859 182.072 li
cp
ef
156.539 182.072 mo
157.727 182.072 li
157.727 189.824 li
161.987 189.824 li
161.987 190.82 li
156.539 190.82 li
156.539 182.072 li
156.539 182.072 li
cp
ef
168.503 182.36 mo
168.503 183.512 li
168.047 183.296 167.627 183.14 167.231 183.032 cv
166.823 182.936 166.439 182.876 166.079 182.876 cv
165.431 182.876 164.927 183.008 164.579 183.248 cv
164.231 183.5 164.063 183.86 164.063 184.316 cv
164.063 184.7 164.171 185 164.411 185.192 cv
164.639 185.396 165.083 185.552 165.731 185.672 cv
166.451 185.816 li
167.327 185.984 167.975 186.284 168.395 186.704 cv
168.815 187.136 169.031 187.7 169.031 188.408 cv
169.031 189.26 168.743 189.896 168.179 190.328 cv
167.603 190.76 166.775 190.976 165.683 190.976 cv
165.263 190.976 164.819 190.928 164.351 190.844 cv
163.883 190.76 163.403 190.628 162.911 190.436 cv
162.911 189.212 li
163.391 189.488 163.859 189.692 164.315 189.824 cv
164.771 189.968 165.227 190.028 165.683 190.028 cv
166.355 190.028 166.871 189.896 167.243 189.632 cv
167.603 189.368 167.795 188.996 167.795 188.492 cv
167.795 188.06 167.663 187.724 167.399 187.484 cv
167.135 187.244 166.703 187.064 166.103 186.944 cv
165.383 186.8 li
164.495 186.632 163.859 186.356 163.463 185.972 cv
163.067 185.6 162.875 185.084 162.875 184.412 cv
162.875 183.644 163.139 183.032 163.691 182.588 cv
164.231 182.144 164.987 181.916 165.947 181.916 cv
166.355 181.916 166.763 181.952 167.195 182.024 cv
167.615 182.096 168.047 182.216 168.503 182.36 cv
168.503 182.36 li
cp
ef
173.975 190.82 mo
173.891 190.82 173.855 190.772 173.855 190.664 cv
173.855 190.64 173.867 190.616 173.879 190.568 cv
173.879 190.52 173.891 190.484 173.915 190.448 cv
173.939 190.424 173.963 190.4 174.011 190.4 cv
174.767 190.4 175.211 190.16 175.343 189.668 cv
176.903 183.404 li
176.915 183.332 176.927 183.272 176.927 183.236 cv
176.927 183.152 176.879 183.104 176.783 183.092 cv
176.627 183.068 176.339 183.044 175.919 183.044 cv
175.835 183.044 175.799 182.996 175.799 182.888 cv
175.799 182.864 175.811 182.828 175.823 182.78 cv
175.835 182.732 175.847 182.696 175.871 182.672 cv
175.895 182.648 175.919 182.624 175.955 182.624 cv
178.067 182.624 li
178.151 182.624 178.199 182.672 178.223 182.756 cv
179.159 189.632 li
183.527 182.756 li
183.575 182.672 183.659 182.624 183.755 182.624 cv
185.795 182.624 li
185.867 182.624 185.915 182.684 185.915 182.78 cv
185.903 182.804 185.891 182.84 185.879 182.888 cv
185.867 182.936 185.855 182.984 185.831 183.008 cv
185.807 183.032 185.783 183.044 185.759 183.044 cv
185.267 183.044 184.931 183.08 184.739 183.128 cv
184.631 183.164 184.559 183.272 184.511 183.452 cv
182.867 190.04 li
182.843 190.124 182.843 190.184 182.843 190.208 cv
182.843 190.244 182.843 190.268 182.855 190.292 cv
182.855 190.316 182.867 190.328 182.891 190.328 cv
182.915 190.34 182.939 190.352 182.987 190.352 cv
183.131 190.388 183.419 190.4 183.851 190.4 cv
183.923 190.4 183.971 190.46 183.971 190.556 cv
183.935 190.676 183.911 190.748 183.899 190.772 cv
183.875 190.808 183.839 190.82 183.767 190.82 cv
180.635 190.82 li
180.551 190.82 180.515 190.772 180.515 190.664 cv
180.515 190.64 180.527 190.604 180.539 190.556 cv
180.551 190.508 180.563 190.472 180.587 190.448 cv
180.611 190.424 180.635 190.4 180.671 190.4 cv
181.151 190.4 181.499 190.376 181.691 190.316 cv
181.787 190.292 181.871 190.184 181.919 189.992 cv
183.647 183.044 li
178.799 190.688 li
178.751 190.784 178.667 190.82 178.559 190.82 cv
178.451 190.82 178.391 190.784 178.391 190.688 cv
177.371 183.14 li
175.727 189.716 li
175.715 189.74 175.703 189.776 175.703 189.8 cv
175.703 189.824 175.691 189.86 175.691 189.896 cv
175.691 190.112 175.775 190.244 175.955 190.304 cv
176.135 190.376 176.363 190.4 176.627 190.4 cv
176.699 190.4 176.747 190.46 176.747 190.556 cv
176.723 190.664 176.699 190.736 176.675 190.772 cv
176.651 190.808 176.615 190.82 176.543 190.82 cv
173.975 190.82 li
173.975 190.82 li
cp
ef
186.971 193.064 mo
186.299 187.722 li
186.257 187.604 186.047 187.537 185.669 187.537 cv
185.61 187.537 185.585 187.503 185.585 187.428 cv
185.593 187.369 185.61 187.327 185.627 187.293 cv
185.643 187.26 185.677 187.243 185.727 187.243 cv
187.777 187.243 li
187.802 187.243 187.819 187.26 187.836 187.276 cv
187.853 187.302 187.861 187.327 187.861 187.352 cv
187.836 187.478 187.802 187.537 187.752 187.537 cv
187.315 187.537 187.08 187.612 187.055 187.764 cv
187.609 192.157 li
190.196 188.024 li
190.247 187.94 190.272 187.864 190.272 187.806 cv
190.272 187.705 190.221 187.638 190.137 187.596 cv
190.045 187.562 189.944 187.537 189.827 187.537 cv
189.768 187.537 189.743 187.503 189.743 187.428 cv
189.751 187.386 189.759 187.352 189.768 187.327 cv
189.776 187.302 189.793 187.285 189.81 187.268 cv
189.827 187.251 189.852 187.243 189.885 187.243 cv
191.507 187.243 li
191.557 187.243 191.582 187.285 191.582 187.352 cv
191.557 187.478 191.523 187.537 191.473 187.537 cv
191.053 187.537 190.717 187.722 190.482 188.091 cv
190.465 188.108 190.457 188.108 190.457 188.108 cv
187.357 193.064 li
187.315 193.123 187.265 193.156 187.197 193.156 cv
187.08 193.156 li
187.013 193.156 186.979 193.123 186.971 193.064 cv
186.971 193.064 li
cp
ef
194.027 188.06 mo
193.955 188.06 193.907 188.036 193.859 187.988 cv
193.811 187.94 193.799 187.88 193.799 187.82 cv
193.799 187.772 193.811 187.712 193.859 187.664 cv
193.907 187.616 193.955 187.58 194.027 187.58 cv
200.915 187.58 li
200.975 187.58 201.023 187.616 201.071 187.664 cv
201.107 187.712 201.131 187.772 201.131 187.82 cv
201.131 187.88 201.107 187.94 201.071 187.988 cv
201.023 188.036 200.975 188.06 200.915 188.06 cv
194.027 188.06 li
194.027 188.06 li
cp
ef
204.935 190.82 mo
204.851 190.82 204.815 190.772 204.815 190.664 cv
204.815 190.64 204.827 190.616 204.839 190.568 cv
204.839 190.52 204.851 190.484 204.875 190.448 cv
204.899 190.424 204.923 190.4 204.971 190.4 cv
205.727 190.4 206.171 190.16 206.303 189.668 cv
207.863 183.404 li
207.875 183.332 207.887 183.272 207.887 183.236 cv
207.887 183.152 207.839 183.104 207.743 183.092 cv
207.587 183.068 207.299 183.044 206.879 183.044 cv
206.795 183.044 206.759 182.996 206.759 182.888 cv
206.759 182.864 206.771 182.828 206.783 182.78 cv
206.795 182.732 206.807 182.696 206.831 182.672 cv
206.855 182.648 206.879 182.624 206.915 182.624 cv
209.027 182.624 li
209.111 182.624 209.159 182.672 209.183 182.756 cv
210.119 189.632 li
214.487 182.756 li
214.535 182.672 214.619 182.624 214.715 182.624 cv
216.755 182.624 li
216.827 182.624 216.875 182.684 216.875 182.78 cv
216.863 182.804 216.851 182.84 216.839 182.888 cv
216.827 182.936 216.815 182.984 216.791 183.008 cv
216.767 183.032 216.743 183.044 216.719 183.044 cv
216.227 183.044 215.891 183.08 215.699 183.128 cv
215.591 183.164 215.519 183.272 215.471 183.452 cv
213.827 190.04 li
213.803 190.124 213.803 190.184 213.803 190.208 cv
213.803 190.244 213.803 190.268 213.815 190.292 cv
213.815 190.316 213.827 190.328 213.851 190.328 cv
213.875 190.34 213.899 190.352 213.947 190.352 cv
214.091 190.388 214.379 190.4 214.811 190.4 cv
214.883 190.4 214.931 190.46 214.931 190.556 cv
214.895 190.676 214.871 190.748 214.859 190.772 cv
214.835 190.808 214.799 190.82 214.727 190.82 cv
211.595 190.82 li
211.511 190.82 211.475 190.772 211.475 190.664 cv
211.475 190.64 211.487 190.604 211.499 190.556 cv
211.511 190.508 211.523 190.472 211.547 190.448 cv
211.571 190.424 211.595 190.4 211.631 190.4 cv
212.111 190.4 212.459 190.376 212.651 190.316 cv
212.747 190.292 212.831 190.184 212.879 189.992 cv
214.607 183.044 li
209.759 190.688 li
209.711 190.784 209.627 190.82 209.519 190.82 cv
209.411 190.82 209.351 190.784 209.351 190.688 cv
208.331 183.14 li
206.687 189.716 li
206.675 189.74 206.663 189.776 206.663 189.8 cv
206.663 189.824 206.651 189.86 206.651 189.896 cv
206.651 190.112 206.735 190.244 206.915 190.304 cv
207.095 190.376 207.323 190.4 207.587 190.4 cv
207.659 190.4 207.707 190.46 207.707 190.556 cv
207.683 190.664 207.659 190.736 207.635 190.772 cv
207.611 190.808 207.575 190.82 207.503 190.82 cv
204.935 190.82 li
204.935 190.82 li
cp
ef
219.512 185.193 mo
219.445 185.193 219.395 185.168 219.344 185.118 cv
219.294 185.067 219.269 185.008 219.269 184.941 cv
219.269 184.849 219.302 184.782 219.386 184.74 cv
220.596 184.16 li
219.386 183.589 li
219.302 183.555 219.269 183.488 219.269 183.387 cv
219.269 183.328 219.294 183.27 219.344 183.219 cv
219.395 183.169 219.445 183.135 219.512 183.135 cv
219.554 183.135 219.596 183.152 219.63 183.177 cv
220.705 183.958 li
220.579 182.589 li
220.579 182.522 220.596 182.472 220.646 182.421 cv
220.697 182.379 220.755 182.354 220.823 182.354 cv
220.89 182.354 220.94 182.379 220.991 182.421 cv
221.033 182.463 221.058 182.514 221.058 182.572 cv
221.058 182.589 li
220.932 183.958 li
222.007 183.177 li
222.041 183.152 222.074 183.135 222.125 183.135 cv
222.192 183.135 222.242 183.169 222.293 183.219 cv
222.343 183.27 222.368 183.328 222.368 183.387 cv
222.368 183.488 222.326 183.555 222.251 183.589 cv
221.041 184.16 li
222.251 184.74 li
222.326 184.782 222.368 184.849 222.368 184.941 cv
222.368 185.008 222.343 185.067 222.293 185.118 cv
222.242 185.168 222.192 185.193 222.125 185.193 cv
222.074 185.193 222.041 185.185 222.007 185.151 cv
220.932 184.37 li
221.058 185.731 li
221.058 185.756 li
221.058 185.823 221.033 185.874 220.982 185.916 cv
220.932 185.958 220.881 185.974 220.823 185.974 cv
220.755 185.974 220.697 185.958 220.646 185.907 cv
220.596 185.865 220.579 185.806 220.579 185.739 cv
220.705 184.37 li
219.63 185.151 li
219.596 185.185 219.554 185.193 219.512 185.193 cv
219.512 185.193 li
cp
ef
217.691 194.024 mo
217.019 188.682 li
216.977 188.564 216.767 188.497 216.389 188.497 cv
216.33 188.497 216.305 188.463 216.305 188.388 cv
216.313 188.329 216.33 188.287 216.347 188.253 cv
216.363 188.22 216.397 188.203 216.447 188.203 cv
218.497 188.203 li
218.522 188.203 218.539 188.22 218.556 188.236 cv
218.573 188.262 218.581 188.287 218.581 188.312 cv
218.556 188.438 218.522 188.497 218.472 188.497 cv
218.035 188.497 217.8 188.572 217.775 188.724 cv
218.329 193.117 li
220.916 188.984 li
220.967 188.9 220.992 188.824 220.992 188.766 cv
220.992 188.665 220.941 188.598 220.857 188.556 cv
220.765 188.522 220.664 188.497 220.547 188.497 cv
220.488 188.497 220.463 188.463 220.463 188.388 cv
220.471 188.346 220.479 188.312 220.488 188.287 cv
220.496 188.262 220.513 188.245 220.53 188.228 cv
220.547 188.211 220.572 188.203 220.605 188.203 cv
222.227 188.203 li
222.277 188.203 222.302 188.245 222.302 188.312 cv
222.277 188.438 222.243 188.497 222.193 188.497 cv
221.773 188.497 221.437 188.682 221.202 189.051 cv
221.185 189.068 221.177 189.068 221.177 189.068 cv
218.077 194.024 li
218.035 194.083 217.985 194.116 217.917 194.116 cv
217.8 194.116 li
217.733 194.116 217.699 194.083 217.691 194.024 cv
217.691 194.024 li
cp
ef
50.5526 161.373 mo
54.5526 161.373 li
f
50.5526 161.373 mo
54.5526 161.373 li
@
288.338 161.373 mo
284.338 161.373 li
f
288.338 161.373 mo
284.338 161.373 li
@
42.7786 155.756 mo
43.7505 155.756 44.4946 156.152 45.0226 156.92 cv
45.5386 157.7 45.8026 158.828 45.8026 160.292 cv
45.8026 161.768 45.5386 162.896 45.0226 163.664 cv
44.4946 164.432 43.7505 164.816 42.7786 164.816 cv
41.7946 164.816 41.0386 164.432 40.5226 163.664 cv
40.0066 162.896 39.7546 161.768 39.7546 160.292 cv
39.7546 158.828 40.0066 157.7 40.5226 156.92 cv
41.0386 156.152 41.7946 155.756 42.7786 155.756 cv
42.7786 155.756 li
cp
42.7786 156.692 mo
42.1666 156.692 41.7106 156.992 41.3986 157.592 cv
41.0865 158.192 40.9426 159.092 40.9426 160.292 cv
40.9426 161.492 41.0865 162.392 41.3986 162.992 cv
41.7106 163.592 42.1666 163.892 42.7786 163.892 cv
43.3905 163.892 43.8466 163.592 44.1586 162.992 cv
44.4586 162.392 44.6146 161.492 44.6146 160.292 cv
44.6146 159.092 44.4586 158.192 44.1586 157.592 cv
43.8466 156.992 43.3905 156.692 42.7786 156.692 cv
ef
50.5526 126.4 mo
54.5526 126.4 li
f
50.5526 126.4 mo
54.5526 126.4 li
@
288.338 126.4 mo
284.338 126.4 li
f
288.338 126.4 mo
284.338 126.4 li
@
25.0905 128.624 mo
27.0226 128.624 li
27.0226 121.952 li
24.9226 122.372 li
24.9226 121.292 li
27.0106 120.872 li
28.1986 120.872 li
28.1986 128.624 li
30.1306 128.624 li
30.1306 129.62 li
25.0905 129.62 li
25.0905 128.624 li
25.0905 128.624 li
cp
ef
35.0986 120.716 mo
36.0706 120.716 36.8146 121.112 37.3426 121.88 cv
37.8586 122.66 38.1226 123.788 38.1226 125.252 cv
38.1226 126.728 37.8586 127.856 37.3426 128.624 cv
36.8146 129.392 36.0706 129.776 35.0986 129.776 cv
34.1146 129.776 33.3586 129.392 32.8426 128.624 cv
32.3266 127.856 32.0746 126.728 32.0746 125.252 cv
32.0746 123.788 32.3266 122.66 32.8426 121.88 cv
33.3586 121.112 34.1146 120.716 35.0986 120.716 cv
35.0986 120.716 li
cp
35.0986 121.652 mo
34.4866 121.652 34.0305 121.952 33.7186 122.552 cv
33.4066 123.152 33.2626 124.052 33.2626 125.252 cv
33.2626 126.452 33.4066 127.352 33.7186 127.952 cv
34.0305 128.552 34.4866 128.852 35.0986 128.852 cv
35.7105 128.852 36.1666 128.552 36.4786 127.952 cv
36.7786 127.352 36.9346 126.452 36.9346 125.252 cv
36.9346 124.052 36.7786 123.152 36.4786 122.552 cv
36.1666 121.952 35.7105 121.652 35.0986 121.652 cv
ef
42.7786 120.716 mo
43.7505 120.716 44.4946 121.112 45.0226 121.88 cv
45.5386 122.66 45.8026 123.788 45.8026 125.252 cv
45.8026 126.728 45.5386 127.856 45.0226 128.624 cv
44.4946 129.392 43.7505 129.776 42.7786 129.776 cv
41.7946 129.776 41.0386 129.392 40.5226 128.624 cv
40.0066 127.856 39.7546 126.728 39.7546 125.252 cv
39.7546 123.788 40.0066 122.66 40.5226 121.88 cv
41.0386 121.112 41.7946 120.716 42.7786 120.716 cv
42.7786 120.716 li
cp
42.7786 121.652 mo
42.1666 121.652 41.7106 121.952 41.3986 122.552 cv
41.0865 123.152 40.9426 124.052 40.9426 125.252 cv
40.9426 126.452 41.0865 127.352 41.3986 127.952 cv
41.7106 128.552 42.1666 128.852 42.7786 128.852 cv
43.3905 128.852 43.8466 128.552 44.1586 127.952 cv
44.4586 127.352 44.6146 126.452 44.6146 125.252 cv
44.6146 124.052 44.4586 123.152 44.1586 122.552 cv
43.8466 121.952 43.3905 121.652 42.7786 121.652 cv
ef
50.5526 91.428 mo
54.5526 91.428 li
f
50.5526 91.428 mo
54.5526 91.428 li
@
288.338 91.428 mo
284.338 91.428 li
f
288.338 91.428 mo
284.338 91.428 li
@
25.9066 93.824 mo
30.0346 93.824 li
30.0346 94.82 li
24.4786 94.82 li
24.4786 93.824 li
24.9226 93.368 25.5346 92.744 26.3146 91.952 cv
27.0826 91.172 27.5746 90.668 27.7786 90.44 cv
28.1626 90.02 28.4266 89.66 28.5706 89.36 cv
28.7146 89.072 28.7986 88.772 28.7986 88.484 cv
28.7986 88.028 28.6306 87.644 28.3065 87.356 cv
27.9826 87.068 27.5626 86.912 27.0346 86.912 cv
26.6626 86.912 26.2666 86.984 25.8586 87.104 cv
25.4506 87.236 25.0066 87.428 24.5386 87.692 cv
24.5386 86.492 li
25.0186 86.3 25.4626 86.156 25.8705 86.06 cv
26.2786 85.964 26.6626 85.916 27.0106 85.916 cv
27.9106 85.916 28.6306 86.144 29.1706 86.6 cv
29.7105 87.056 29.9866 87.656 29.9866 88.412 cv
29.9866 88.772 29.9146 89.12 29.7826 89.432 cv
29.6505 89.756 29.4106 90.14 29.0506 90.572 cv
28.9546 90.692 28.6426 91.016 28.1146 91.556 cv
27.5865 92.096 26.8546 92.852 25.9066 93.824 cv
25.9066 93.824 li
cp
ef
35.0986 85.916 mo
36.0706 85.916 36.8146 86.312 37.3426 87.08 cv
37.8586 87.86 38.1226 88.988 38.1226 90.452 cv
38.1226 91.928 37.8586 93.056 37.3426 93.824 cv
36.8146 94.592 36.0706 94.976 35.0986 94.976 cv
34.1146 94.976 33.3586 94.592 32.8426 93.824 cv
32.3266 93.056 32.0746 91.928 32.0746 90.452 cv
32.0746 88.988 32.3266 87.86 32.8426 87.08 cv
33.3586 86.312 34.1146 85.916 35.0986 85.916 cv
35.0986 85.916 li
cp
35.0986 86.852 mo
34.4866 86.852 34.0305 87.152 33.7186 87.752 cv
33.4066 88.352 33.2626 89.252 33.2626 90.452 cv
33.2626 91.652 33.4066 92.552 33.7186 93.152 cv
34.0305 93.752 34.4866 94.052 35.0986 94.052 cv
35.7105 94.052 36.1666 93.752 36.4786 93.152 cv
36.7786 92.552 36.9346 91.652 36.9346 90.452 cv
36.9346 89.252 36.7786 88.352 36.4786 87.752 cv
36.1666 87.152 35.7105 86.852 35.0986 86.852 cv
ef
42.7786 85.916 mo
43.7505 85.916 44.4946 86.312 45.0226 87.08 cv
45.5386 87.86 45.8026 88.988 45.8026 90.452 cv
45.8026 91.928 45.5386 93.056 45.0226 93.824 cv
44.4946 94.592 43.7505 94.976 42.7786 94.976 cv
41.7946 94.976 41.0386 94.592 40.5226 93.824 cv
40.0066 93.056 39.7546 91.928 39.7546 90.452 cv
39.7546 88.988 40.0066 87.86 40.5226 87.08 cv
41.0386 86.312 41.7946 85.916 42.7786 85.916 cv
42.7786 85.916 li
cp
42.7786 86.852 mo
42.1666 86.852 41.7106 87.152 41.3986 87.752 cv
41.0865 88.352 40.9426 89.252 40.9426 90.452 cv
40.9426 91.652 41.0865 92.552 41.3986 93.152 cv
41.7106 93.752 42.1666 94.052 42.7786 94.052 cv
43.3905 94.052 43.8466 93.752 44.1586 93.152 cv
44.4586 92.552 44.6146 91.652 44.6146 90.452 cv
44.6146 89.252 44.4586 88.352 44.1586 87.752 cv
43.8466 87.152 43.3905 86.852 42.7786 86.852 cv
ef
50.5526 56.456 mo
54.5526 56.456 li
f
50.5526 56.456 mo
54.5526 56.456 li
@
288.338 56.456 mo
284.338 56.456 li
f
288.338 56.456 mo
284.338 56.456 li
@
28.4746 55.064 mo
29.0386 55.184 29.4826 55.436 29.7946 55.82 cv
30.1066 56.204 30.2746 56.684 30.2746 57.236 cv
30.2746 58.1 29.9746 58.772 29.3866 59.24 cv
28.7866 59.708 27.9466 59.936 26.8546 59.936 cv
26.4826 59.936 26.0986 59.9 25.7146 59.828 cv
25.3306 59.768 24.9226 59.66 24.5146 59.516 cv
24.5146 58.376 li
24.8386 58.568 25.1986 58.712 25.5946 58.808 cv
25.9786 58.904 26.3866 58.952 26.8186 58.952 cv
27.5626 58.952 28.1266 58.808 28.5106 58.52 cv
28.8946 58.232 29.0986 57.8 29.0986 57.236 cv
29.0986 56.732 28.9186 56.324 28.5586 56.036 cv
28.1986 55.748 27.6946 55.592 27.0466 55.592 cv
26.0266 55.592 li
26.0266 54.62 li
27.0946 54.62 li
27.6706 54.62 28.1146 54.512 28.4266 54.272 cv
28.7386 54.044 28.8946 53.708 28.8946 53.264 cv
28.8946 52.82 28.7266 52.472 28.4146 52.232 cv
28.0905 51.992 27.6346 51.872 27.0466 51.872 cv
26.7226 51.872 26.3746 51.908 26.0026 51.98 cv
25.6306 52.052 25.2226 52.16 24.7786 52.304 cv
24.7786 51.248 li
25.2226 51.128 25.6426 51.032 26.0386 50.972 cv
26.4226 50.912 26.7946 50.876 27.1546 50.876 cv
28.0426 50.876 28.7505 51.08 29.2786 51.488 cv
29.8065 51.896 30.0706 52.448 30.0706 53.144 cv
30.0706 53.624 29.9266 54.032 29.6505 54.368 cv
29.3746 54.704 28.9786 54.944 28.4746 55.064 cv
28.4746 55.064 li
cp
ef
35.0986 50.876 mo
36.0706 50.876 36.8146 51.272 37.3426 52.04 cv
37.8586 52.82 38.1226 53.948 38.1226 55.412 cv
38.1226 56.888 37.8586 58.016 37.3426 58.784 cv
36.8146 59.552 36.0706 59.936 35.0986 59.936 cv
34.1146 59.936 33.3586 59.552 32.8426 58.784 cv
32.3266 58.016 32.0746 56.888 32.0746 55.412 cv
32.0746 53.948 32.3266 52.82 32.8426 52.04 cv
33.3586 51.272 34.1146 50.876 35.0986 50.876 cv
35.0986 50.876 li
cp
35.0986 51.812 mo
34.4866 51.812 34.0305 52.112 33.7186 52.712 cv
33.4066 53.312 33.2626 54.212 33.2626 55.412 cv
33.2626 56.612 33.4066 57.512 33.7186 58.112 cv
34.0305 58.712 34.4866 59.012 35.0986 59.012 cv
35.7105 59.012 36.1666 58.712 36.4786 58.112 cv
36.7786 57.512 36.9346 56.612 36.9346 55.412 cv
36.9346 54.212 36.7786 53.312 36.4786 52.712 cv
36.1666 52.112 35.7105 51.812 35.0986 51.812 cv
ef
42.7786 50.876 mo
43.7505 50.876 44.4946 51.272 45.0226 52.04 cv
45.5386 52.82 45.8026 53.948 45.8026 55.412 cv
45.8026 56.888 45.5386 58.016 45.0226 58.784 cv
44.4946 59.552 43.7505 59.936 42.7786 59.936 cv
41.7946 59.936 41.0386 59.552 40.5226 58.784 cv
40.0066 58.016 39.7546 56.888 39.7546 55.412 cv
39.7546 53.948 40.0066 52.82 40.5226 52.04 cv
41.0386 51.272 41.7946 50.876 42.7786 50.876 cv
42.7786 50.876 li
cp
42.7786 51.812 mo
42.1666 51.812 41.7106 52.112 41.3986 52.712 cv
41.0865 53.312 40.9426 54.212 40.9426 55.412 cv
40.9426 56.612 41.0865 57.512 41.3986 58.112 cv
41.7106 58.712 42.1666 59.012 42.7786 59.012 cv
43.3905 59.012 43.8466 58.712 44.1586 58.112 cv
44.4586 57.512 44.6146 56.612 44.6146 55.412 cv
44.6146 54.212 44.4586 53.312 44.1586 52.712 cv
43.8466 52.112 43.3905 51.812 42.7786 51.812 cv
ef
50.5526 21.483 mo
54.5526 21.483 li
f
50.5526 21.483 mo
54.5526 21.483 li
@
288.338 21.483 mo
284.338 21.483 li
f
288.338 21.483 mo
284.338 21.483 li
@
27.8266 15.992 mo
29.3146 15.992 li
29.3146 21.692 li
30.5626 21.692 li
30.5626 22.676 li
29.3146 22.676 li
29.3146 24.74 li
28.1386 24.74 li
28.1386 22.676 li
24.1906 22.676 li
24.1906 21.536 li
27.8266 15.992 li
27.8266 15.992 li
cp
28.1386 17.024 mo
25.1505 21.692 li
28.1386 21.692 li
28.1386 17.024 li
ef
35.0986 15.836 mo
36.0706 15.836 36.8146 16.232 37.3426 17 cv
37.8586 17.78 38.1226 18.908 38.1226 20.372 cv
38.1226 21.848 37.8586 22.976 37.3426 23.744 cv
36.8146 24.512 36.0706 24.896 35.0986 24.896 cv
34.1146 24.896 33.3586 24.512 32.8426 23.744 cv
32.3266 22.976 32.0746 21.848 32.0746 20.372 cv
32.0746 18.908 32.3266 17.78 32.8426 17 cv
33.3586 16.232 34.1146 15.836 35.0986 15.836 cv
35.0986 15.836 li
cp
35.0986 16.772 mo
34.4866 16.772 34.0305 17.072 33.7186 17.672 cv
33.4066 18.272 33.2626 19.172 33.2626 20.372 cv
33.2626 21.572 33.4066 22.472 33.7186 23.072 cv
34.0305 23.672 34.4866 23.972 35.0986 23.972 cv
35.7105 23.972 36.1666 23.672 36.4786 23.072 cv
36.7786 22.472 36.9346 21.572 36.9346 20.372 cv
36.9346 19.172 36.7786 18.272 36.4786 17.672 cv
36.1666 17.072 35.7105 16.772 35.0986 16.772 cv
ef
42.7786 15.836 mo
43.7505 15.836 44.4946 16.232 45.0226 17 cv
45.5386 17.78 45.8026 18.908 45.8026 20.372 cv
45.8026 21.848 45.5386 22.976 45.0226 23.744 cv
44.4946 24.512 43.7505 24.896 42.7786 24.896 cv
41.7946 24.896 41.0386 24.512 40.5226 23.744 cv
40.0066 22.976 39.7546 21.848 39.7546 20.372 cv
39.7546 18.908 40.0066 17.78 40.5226 17 cv
41.0386 16.232 41.7946 15.836 42.7786 15.836 cv
42.7786 15.836 li
cp
42.7786 16.772 mo
42.1666 16.772 41.7106 17.072 41.3986 17.672 cv
41.0865 18.272 40.9426 19.172 40.9426 20.372 cv
40.9426 21.572 41.0865 22.472 41.3986 23.072 cv
41.7106 23.672 42.1666 23.972 42.7786 23.972 cv
43.3905 23.972 43.8466 23.672 44.1586 23.072 cv
44.4586 22.472 44.6146 21.572 44.6146 20.372 cv
44.6146 19.172 44.4586 18.272 44.1586 17.672 cv
43.8466 17.072 43.3905 16.772 42.7786 16.772 cv
ef
2 lw
0 lj
[1 3 ] 0 dsh
63.5126 24.1006 mo
92.3126 24.1006 li
92.3126 14.0206 li
63.5126 14.0206 li
63.5126 24.1006 li
63.5126 24.1006 li
cp
0 .993988 1 0 cmyk
@
111.467 13.868 mo
111.467 15.2504 li
110.919 14.9912 110.415 14.804 109.94 14.6744 cv
109.451 14.5592 108.99 14.4872 108.558 14.4872 cv
107.78 14.4872 107.175 14.6456 106.758 14.9336 cv
106.34 15.236 106.139 15.668 106.139 16.2152 cv
106.139 16.676 106.268 17.036 106.556 17.2664 cv
106.83 17.5112 107.363 17.6984 108.14 17.8424 cv
109.004 18.0152 li
110.055 18.2168 110.833 18.5768 111.337 19.0808 cv
111.841 19.5992 112.1 20.276 112.1 21.1256 cv
112.1 22.148 111.755 22.9112 111.078 23.4296 cv
110.387 23.948 109.393 24.2072 108.083 24.2072 cv
107.579 24.2072 107.046 24.1496 106.484 24.0488 cv
105.923 23.948 105.347 23.7896 104.756 23.5592 cv
104.756 22.0904 li
105.332 22.4216 105.894 22.6664 106.441 22.8248 cv
106.988 22.9976 107.535 23.0696 108.083 23.0696 cv
108.889 23.0696 109.508 22.9112 109.955 22.5944 cv
110.387 22.2776 110.617 21.8312 110.617 21.2264 cv
110.617 20.708 110.459 20.3048 110.142 20.0168 cv
109.825 19.7288 109.307 19.5128 108.587 19.3688 cv
107.723 19.196 li
106.657 18.9944 105.894 18.6632 105.419 18.2024 cv
104.943 17.756 104.713 17.1368 104.713 16.3304 cv
104.713 15.4088 105.03 14.6744 105.692 14.1416 cv
106.34 13.6088 107.247 13.3352 108.399 13.3352 cv
108.889 13.3352 109.379 13.3784 109.897 13.4648 cv
110.401 13.5512 110.919 13.6952 111.467 13.868 cv
111.467 13.868 li
cp
0 0 0 1 cmyk
ef
120.371 17.6552 mo
120.687 17.0792 121.076 16.6616 121.523 16.3736 cv
121.969 16.1 122.502 15.956 123.121 15.956 cv
123.927 15.956 124.561 16.244 125.007 16.82 cv
125.454 17.396 125.684 18.2168 125.684 19.268 cv
125.684 24.02 li
124.388 24.02 li
124.388 19.3112 li
124.388 18.5624 124.244 18.0008 123.985 17.6264 cv
123.711 17.2664 123.308 17.0792 122.761 17.0792 cv
122.084 17.0792 121.551 17.3096 121.163 17.756 cv
120.774 18.2024 120.587 18.8072 120.587 19.5704 cv
120.587 24.02 li
119.291 24.02 li
119.291 19.3112 li
119.291 18.5624 119.147 18.0008 118.887 17.6264 cv
118.614 17.2664 118.196 17.0792 117.649 17.0792 cv
116.987 17.0792 116.454 17.3096 116.065 17.756 cv
115.676 18.2024 115.489 18.8072 115.489 19.5704 cv
115.489 24.02 li
114.193 24.02 li
114.193 16.1432 li
115.489 16.1432 li
115.489 17.3672 li
115.777 16.892 116.137 16.532 116.555 16.3016 cv
116.958 16.0712 117.447 15.956 118.023 15.956 cv
118.599 15.956 119.075 16.1 119.478 16.388 cv
119.881 16.676 120.169 17.108 120.371 17.6552 cv
120.371 17.6552 li
cp
ef
131.449 15.956 mo
132.572 15.956 133.451 16.3304 134.099 17.0504 cv
134.732 17.7848 135.063 18.7928 135.063 20.0888 cv
135.063 21.3848 134.732 22.3928 134.099 23.1128 cv
133.451 23.8472 132.572 24.2072 131.449 24.2072 cv
130.311 24.2072 129.419 23.8472 128.785 23.1128 cv
128.151 22.3928 127.835 21.3848 127.835 20.0888 cv
127.835 18.7928 128.151 17.7848 128.785 17.0504 cv
129.419 16.3304 130.311 15.956 131.449 15.956 cv
131.449 15.956 li
cp
131.449 17.0504 mo
130.758 17.0504 130.211 17.324 129.807 17.8712 cv
129.404 18.4184 129.203 19.1528 129.203 20.0888 cv
129.203 21.0392 129.39 21.7736 129.793 22.3208 cv
130.196 22.868 130.743 23.1272 131.449 23.1272 cv
132.14 23.1272 132.687 22.868 133.091 22.3208 cv
133.494 21.7736 133.695 21.0392 133.695 20.0888 cv
133.695 19.1672 133.494 18.4184 133.091 17.8712 cv
132.687 17.324 132.14 17.0504 131.449 17.0504 cv
ef
140.089 15.956 mo
141.212 15.956 142.091 16.3304 142.739 17.0504 cv
143.372 17.7848 143.703 18.7928 143.703 20.0888 cv
143.703 21.3848 143.372 22.3928 142.739 23.1128 cv
142.091 23.8472 141.212 24.2072 140.089 24.2072 cv
138.951 24.2072 138.059 23.8472 137.425 23.1128 cv
136.791 22.3928 136.475 21.3848 136.475 20.0888 cv
136.475 18.7928 136.791 17.7848 137.425 17.0504 cv
138.059 16.3304 138.951 15.956 140.089 15.956 cv
140.089 15.956 li
cp
140.089 17.0504 mo
139.398 17.0504 138.851 17.324 138.447 17.8712 cv
138.044 18.4184 137.843 19.1528 137.843 20.0888 cv
137.843 21.0392 138.03 21.7736 138.433 22.3208 cv
138.836 22.868 139.383 23.1272 140.089 23.1272 cv
140.78 23.1272 141.327 22.868 141.731 22.3208 cv
142.134 21.7736 142.335 21.0392 142.335 20.0888 cv
142.335 19.1672 142.134 18.4184 141.731 17.8712 cv
141.327 17.324 140.78 17.0504 140.089 17.0504 cv
ef
147.198 13.9112 mo
147.198 16.1432 li
149.862 16.1432 li
149.862 17.1512 li
147.198 17.1512 li
147.198 21.428 li
147.198 22.076 147.284 22.4936 147.457 22.6664 cv
147.63 22.8536 147.99 22.94 148.537 22.94 cv
149.862 22.94 li
149.862 24.02 li
148.537 24.02 li
147.529 24.02 146.838 23.8328 146.463 23.4584 cv
146.089 23.084 145.902 22.4072 145.902 21.428 cv
145.902 17.1512 li
144.951 17.1512 li
144.951 16.1432 li
145.902 16.1432 li
145.902 13.9112 li
147.198 13.9112 li
147.198 13.9112 li
cp
ef
157.988 19.268 mo
157.988 24.02 li
156.692 24.02 li
156.692 19.3112 li
156.692 18.5624 156.534 18.0152 156.246 17.6408 cv
155.958 17.2664 155.526 17.0792 154.95 17.0792 cv
154.244 17.0792 153.697 17.3096 153.294 17.756 cv
152.891 18.2024 152.689 18.8072 152.689 19.5704 cv
152.689 24.02 li
151.393 24.02 li
151.393 13.076 li
152.689 13.076 li
152.689 17.3672 li
152.991 16.9064 153.351 16.5464 153.783 16.316 cv
154.201 16.0856 154.691 15.956 155.238 15.956 cv
156.131 15.956 156.822 16.244 157.283 16.8056 cv
157.743 17.3672 157.988 18.188 157.988 19.268 cv
157.988 19.268 li
cp
ef
1 lw
[] 0 dsh
63.5126 44.8475 mo
92.3126 44.8475 li
92.3126 34.7675 li
63.5126 34.7675 li
63.5126 44.8475 li
63.5126 44.8475 li
cp
.883665 .769161 0 0 cmyk
@
105.174 33.9224 mo
111.207 33.9224 li
111.207 35.1176 li
106.599 35.1176 li
106.599 38.2136 li
110.761 38.2136 li
110.761 39.4088 li
106.599 39.4088 li
106.599 44.42 li
105.174 44.42 li
105.174 33.9224 li
105.174 33.9224 li
cp
0 0 0 1 cmyk
ef
118.959 39.7832 mo
118.945 39.0776 118.743 38.516 118.369 38.084 cv
117.98 37.6664 117.462 37.4504 116.828 37.4504 cv
116.108 37.4504 115.532 37.6664 115.1 38.0696 cv
114.668 38.4728 114.409 39.0488 114.351 39.7832 cv
118.959 39.7832 li
118.959 39.7832 li
cp
120.255 40.1576 mo
120.255 40.7912 li
114.308 40.7912 li
114.366 41.684 114.625 42.3752 115.115 42.836 cv
115.59 43.2968 116.252 43.5272 117.116 43.5272 cv
117.606 43.5272 118.095 43.4696 118.556 43.3544 cv
119.017 43.2392 119.492 43.052 119.953 42.7928 cv
119.953 44.0168 li
119.492 44.2184 119.017 44.3768 118.527 44.4632 cv
118.038 44.5496 117.534 44.6072 117.044 44.6072 cv
115.777 44.6072 114.783 44.2472 114.049 43.5272 cv
113.315 42.8072 112.955 41.8136 112.955 40.5608 cv
112.955 39.2792 113.3 38.2568 113.991 37.4936 cv
114.683 36.7448 115.633 36.356 116.814 36.356 cv
117.879 36.356 118.715 36.7016 119.334 37.3784 cv
119.939 38.0696 120.255 38.9912 120.255 40.1576 cv
ef
128.559 39.9272 mo
128.559 44.42 li
127.263 44.42 li
127.263 43.2248 li
126.961 43.7144 126.587 44.06 126.155 44.276 cv
125.723 44.492 125.175 44.6072 124.542 44.6072 cv
123.735 44.6072 123.087 44.3912 122.612 43.9448 cv
122.137 43.4984 121.907 42.8936 121.907 42.1304 cv
121.907 41.252 122.195 40.5896 122.799 40.1288 cv
123.39 39.6824 124.268 39.452 125.449 39.452 cv
127.263 39.452 li
127.263 39.3224 li
127.263 38.732 127.062 38.2712 126.673 37.94 cv
126.284 37.6232 125.737 37.4504 125.031 37.4504 cv
124.571 37.4504 124.139 37.508 123.707 37.6232 cv
123.275 37.7384 122.871 37.8968 122.483 38.0984 cv
122.483 36.9032 li
122.943 36.7304 123.404 36.5864 123.851 36.5 cv
124.297 36.4136 124.729 36.356 125.161 36.356 cv
126.299 36.356 127.148 36.6584 127.71 37.2488 cv
128.271 37.8392 128.559 38.732 128.559 39.9272 cv
128.559 39.9272 li
cp
125.982 40.46 mo
124.931 40.46 124.211 40.5896 123.807 40.82 cv
123.404 41.0648 123.203 41.468 123.203 42.044 cv
123.203 42.5048 123.347 42.8792 123.649 43.1384 cv
123.951 43.412 124.369 43.5416 124.887 43.5416 cv
125.607 43.5416 126.183 43.2968 126.615 42.7784 cv
127.047 42.2744 127.263 41.5976 127.263 40.748 cv
127.263 40.46 li
125.982 40.46 li
ef
132.318 34.3112 mo
132.318 36.5432 li
134.982 36.5432 li
134.982 37.5512 li
132.318 37.5512 li
132.318 41.828 li
132.318 42.476 132.404 42.8936 132.577 43.0664 cv
132.75 43.2536 133.11 43.34 133.657 43.34 cv
134.982 43.34 li
134.982 44.42 li
133.657 44.42 li
132.649 44.42 131.958 44.2328 131.583 43.8584 cv
131.209 43.484 131.022 42.8072 131.022 41.828 cv
131.022 37.5512 li
130.071 37.5512 li
130.071 36.5432 li
131.022 36.5432 li
131.022 34.3112 li
132.318 34.3112 li
132.318 34.3112 li
cp
ef
136.667 41.3096 mo
136.667 36.5432 li
137.963 36.5432 li
137.963 41.2664 li
137.963 42.0152 138.107 42.5624 138.395 42.9368 cv
138.683 43.3112 139.115 43.4984 139.705 43.4984 cv
140.396 43.4984 140.958 43.2824 141.361 42.836 cv
141.764 42.3896 141.966 41.7848 141.966 41.0072 cv
141.966 36.5432 li
143.262 36.5432 li
143.262 44.42 li
141.966 44.42 li
141.966 43.2104 li
141.649 43.7 141.275 44.0456 140.871 44.276 cv
140.454 44.492 139.979 44.6072 139.431 44.6072 cv
138.524 44.6072 137.833 44.3336 137.372 43.772 cv
136.897 43.2248 136.667 42.404 136.667 41.3096 cv
136.667 41.3096 li
cp
ef
150.481 37.7528 mo
150.337 37.6664 150.179 37.6088 150.006 37.5656 cv
149.833 37.5368 149.646 37.508 149.444 37.508 cv
148.71 37.508 148.148 37.7528 147.759 38.228 cv
147.356 38.7032 147.169 39.38 147.169 40.2728 cv
147.169 44.42 li
145.873 44.42 li
145.873 36.5432 li
147.169 36.5432 li
147.169 37.7672 li
147.428 37.292 147.788 36.932 148.22 36.7016 cv
148.652 36.4712 149.185 36.356 149.819 36.356 cv
149.905 36.356 150.006 36.3704 150.121 36.3704 cv
150.222 36.3848 150.337 36.3992 150.481 36.428 cv
150.481 37.7528 li
150.481 37.7528 li
cp
ef
157.119 39.7832 mo
157.105 39.0776 156.903 38.516 156.529 38.084 cv
156.14 37.6664 155.622 37.4504 154.988 37.4504 cv
154.268 37.4504 153.692 37.6664 153.26 38.0696 cv
152.828 38.4728 152.569 39.0488 152.511 39.7832 cv
157.119 39.7832 li
157.119 39.7832 li
cp
158.415 40.1576 mo
158.415 40.7912 li
152.468 40.7912 li
152.526 41.684 152.785 42.3752 153.275 42.836 cv
153.75 43.2968 154.412 43.5272 155.276 43.5272 cv
155.766 43.5272 156.255 43.4696 156.716 43.3544 cv
157.177 43.2392 157.652 43.052 158.113 42.7928 cv
158.113 44.0168 li
157.652 44.2184 157.177 44.3768 156.687 44.4632 cv
156.198 44.5496 155.694 44.6072 155.204 44.6072 cv
153.937 44.6072 152.943 44.2472 152.209 43.5272 cv
151.475 42.8072 151.115 41.8136 151.115 40.5608 cv
151.115 39.2792 151.46 38.2568 152.151 37.4936 cv
152.843 36.7448 153.793 36.356 154.974 36.356 cv
156.039 36.356 156.875 36.7016 157.494 37.3784 cv
158.099 38.0696 158.415 38.9912 158.415 40.1576 cv
ef
161.334 40.4888 mo
161.334 41.4392 161.521 42.188 161.91 42.7352 cv
162.299 43.2824 162.846 43.5416 163.537 43.5416 cv
164.214 43.5416 164.747 43.2824 165.15 42.7352 cv
165.539 42.188 165.74 41.4392 165.74 40.4888 cv
165.74 39.5384 165.539 38.804 165.15 38.2568 cv
164.747 37.7096 164.214 37.436 163.537 37.436 cv
162.846 37.436 162.299 37.7096 161.91 38.2568 cv
161.521 38.804 161.334 39.5384 161.334 40.4888 cv
161.334 40.4888 li
cp
165.74 37.7384 mo
165.74 33.476 li
167.036 33.476 li
167.036 44.42 li
165.74 44.42 li
165.74 43.2392 li
165.467 43.7144 165.121 44.06 164.703 44.276 cv
164.286 44.492 163.796 44.6072 163.22 44.6072 cv
162.27 44.6072 161.492 44.2328 160.887 43.484 cv
160.283 42.7352 159.995 41.7272 159.995 40.4888 cv
159.995 39.2504 160.283 38.2568 160.887 37.4936 cv
161.492 36.7448 162.27 36.356 163.22 36.356 cv
163.796 36.356 164.286 36.4712 164.703 36.7016 cv
165.121 36.932 165.467 37.2776 165.74 37.7384 cv
ef
177.347 33.4904 mo
176.713 34.5848 176.252 35.6504 175.95 36.7016 cv
175.633 37.7528 175.489 38.8184 175.489 39.8984 cv
175.489 40.9928 175.633 42.0584 175.95 43.1096 cv
176.252 44.1752 176.713 45.2264 177.347 46.3064 cv
176.223 46.3064 li
175.518 45.1976 174.985 44.132 174.639 43.0664 cv
174.294 42.0008 174.121 40.9496 174.121 39.8984 cv
174.121 38.8616 174.294 37.8104 174.639 36.7448 cv
174.985 35.6792 175.503 34.5992 176.223 33.4904 cv
177.347 33.4904 li
177.347 33.4904 li
cp
ef
180.759 44.0024 mo
180.759 43.9304 180.774 43.8584 180.831 43.8008 cv
183.827 40.82 li
180.831 37.8248 li
180.774 37.7816 180.759 37.724 180.759 37.6376 cv
180.759 37.5656 180.788 37.4936 180.846 37.436 cv
180.903 37.3784 180.961 37.3496 181.047 37.3496 cv
181.105 37.3496 181.177 37.3784 181.263 37.436 cv
184.244 40.4168 li
187.211 37.436 li
187.297 37.3784 187.369 37.3496 187.427 37.3496 cv
187.499 37.3496 187.571 37.3784 187.628 37.436 cv
187.686 37.4936 187.715 37.5656 187.715 37.6376 cv
187.715 37.724 187.686 37.7816 187.643 37.8248 cv
184.647 40.82 li
187.643 43.8008 li
187.686 43.8584 187.715 43.9304 187.715 44.0024 cv
187.715 44.0888 187.686 44.1464 187.628 44.204 cv
187.571 44.2616 187.499 44.2904 187.427 44.2904 cv
187.355 44.2904 187.283 44.2616 187.211 44.1896 cv
184.244 41.2232 li
181.263 44.1896 li
181.191 44.2616 181.119 44.2904 181.047 44.2904 cv
180.961 44.2904 180.903 44.2616 180.846 44.204 cv
180.788 44.1464 180.759 44.0888 180.759 44.0024 cv
180.759 44.0024 li
cp
ef
191.022 44.42 mo
191.022 43.916 li
192.217 43.916 192.822 43.772 192.822 43.4552 cv
192.822 35.8952 li
192.318 36.14 191.684 36.2552 190.935 36.2552 cv
190.935 35.7512 li
192.102 35.7512 192.995 35.4488 193.599 34.8296 cv
193.801 34.8296 li
193.83 34.8296 193.873 34.844 193.902 34.8728 cv
193.931 34.9016 193.945 34.9304 193.945 34.9592 cv
193.945 43.4552 li
193.945 43.772 194.535 43.916 195.745 43.916 cv
195.745 44.42 li
191.022 44.42 li
191.022 44.42 li
cp
ef
200.483 44.3624 mo
201.015 44.3624 201.419 44.0888 201.678 43.5416 cv
201.937 42.9944 202.095 42.3896 202.153 41.7272 cv
202.211 41.0648 202.254 40.3448 202.254 39.596 cv
202.254 38.876 202.211 38.2136 202.153 37.6088 cv
202.095 37.004 201.937 36.4424 201.678 35.9528 cv
201.419 35.4632 201.015 35.204 200.483 35.204 cv
199.935 35.204 199.532 35.4632 199.273 35.9528 cv
199.014 36.4424 198.841 37.004 198.783 37.6088 cv
198.726 38.2136 198.697 38.876 198.697 39.596 cv
198.697 40.1432 198.697 40.6472 198.726 41.108 cv
198.755 41.5832 198.827 42.0728 198.942 42.5768 cv
199.057 43.0808 199.23 43.4984 199.489 43.844 cv
199.734 44.1896 200.065 44.3624 200.483 44.3624 cv
200.483 44.3624 li
cp
200.483 44.7224 mo
199.302 44.7224 198.495 44.2472 198.078 43.2824 cv
197.646 42.3176 197.444 41.1656 197.444 39.8264 cv
197.444 38.9912 197.516 38.2136 197.675 37.4792 cv
197.819 36.7448 198.121 36.1256 198.582 35.6072 cv
199.028 35.0888 199.662 34.8296 200.483 34.8296 cv
201.116 34.8296 201.635 34.988 202.038 35.2904 cv
202.441 35.6072 202.743 35.996 202.959 36.4856 cv
203.161 36.9752 203.305 37.508 203.391 38.0696 cv
203.463 38.6312 203.507 39.2216 203.507 39.8264 cv
203.507 40.6616 203.42 41.4248 203.276 42.1448 cv
203.118 42.8648 202.815 43.484 202.369 43.9736 cv
201.923 44.4632 201.289 44.7224 200.483 44.7224 cv
ef
205.235 33.4904 mo
206.358 33.4904 li
207.049 34.5992 207.582 35.6792 207.927 36.7448 cv
208.273 37.8104 208.46 38.8616 208.46 39.8984 cv
208.46 40.9496 208.273 42.0008 207.927 43.0664 cv
207.582 44.132 207.049 45.1976 206.358 46.3064 cv
205.235 46.3064 li
205.854 45.2264 206.315 44.1752 206.631 43.1096 cv
206.934 42.0584 207.092 40.9928 207.092 39.8984 cv
207.092 38.8184 206.934 37.7528 206.631 36.7016 cv
206.315 35.6504 205.854 34.5848 205.235 33.4904 cv
205.235 33.4904 li
cp
ef
332.073 161.373 mo
569.858 161.373 li
569.858 .5 li
332.073 .5 li
332.073 161.373 li
cp
0 0 0 0 cmyk
f
gsave
332.043 161.34 mo
569.843 161.34 li
569.843 .440002 li
332.043 .440002 li
332.043 161.34 li
cp
clp
2 lw
[1 3 ] 0 dsh
367.74 161.373 mo
367.74 161.373 li
375.667 161.373 li
375.667 161.373 li
383.593 161.373 li
383.593 161.373 li
391.519 161.373 li
391.519 161.373 li
399.445 161.373 li
399.445 161.373 li
407.371 161.373 li
407.371 161.373 li
415.297 161.373 li
415.297 153.031 li
423.223 153.031 li
423.223 148.265 li
431.15 148.265 li
431.15 141.711 li
439.076 141.711 li
439.076 129.794 li
447.002 129.794 li
447.002 119.069 li
454.928 119.069 li
454.928 130.39 li
462.854 130.39 li
462.854 125.623 li
470.78 125.623 li
470.78 146.477 li
478.707 146.477 li
478.707 161.373 li
486.633 161.373 li
486.633 161.373 li
494.559 161.373 li
494.559 161.373 li
502.485 161.373 li
502.485 161.373 li
510.411 161.373 li
510.411 161.373 li
518.338 161.373 li
518.338 161.373 li
526.264 161.373 li
526.264 161.373 li
534.19 161.373 li
534.19 161.373 li
542.116 161.373 li
542.116 161.373 li
550.042 161.373 li
550.042 161.373 li
557.968 161.373 li
557.968 161.373 li
0 .993988 1 0 cmyk
@
1 lw
[] 0 dsh
367.74 161.373 mo
367.74 161.373 li
375.667 161.373 li
375.667 161.373 li
383.593 161.373 li
383.593 161.373 li
391.519 161.373 li
391.519 161.373 li
399.445 161.373 li
399.445 161.373 li
407.371 161.373 li
407.371 158.394 li
415.297 158.394 li
415.297 138.136 li
423.223 138.136 li
423.223 95.2362 li
431.15 95.2362 li
431.15 49.9535 li
439.076 49.9535 li
439.076 24.333 li
447.002 24.333 li
447.002 14.7998 li
454.928 14.7998 li
454.928 17.1831 li
462.854 17.1831 li
462.854 104.174 li
470.78 104.174 li
470.78 153.627 li
478.707 153.627 li
478.707 161.373 li
486.633 161.373 li
486.633 161.373 li
494.559 161.373 li
494.559 161.373 li
502.485 161.373 li
502.485 161.373 li
510.411 161.373 li
510.411 161.373 li
518.338 161.373 li
518.338 161.373 li
526.264 161.373 li
526.264 161.373 li
534.19 161.373 li
534.19 161.373 li
542.116 161.373 li
542.116 161.373 li
550.042 161.373 li
550.042 161.373 li
557.968 161.373 li
557.968 161.373 li
.883665 .769161 0 0 cmyk
@
grestore
2 lc
569.858 161.373 mo
569.858 .5 li
332.073 161.373 mo
569.858 161.373 li
332.073 .5 mo
569.858 .5 li
332.073 161.373 mo
332.073 .5 li
0 0 0 1 cmyk
@
332.073 161.373 mo
332.073 157.373 li
f
.5 lw
0 lc
1 lj
332.073 161.373 mo
332.073 157.373 li
@
332.073 .5 mo
332.073 4.5 li
f
332.073 .5 mo
332.073 4.5 li
@
324.395 170.24 mo
331.907 170.24 li
331.907 171.236 li
324.395 171.236 li
324.395 170.24 li
324.395 170.24 li
cp
ef
339.515 165.944 mo
339.515 167.024 li
339.215 166.88 338.915 166.772 338.615 166.7 cv
338.303 166.628 338.003 166.592 337.715 166.592 cv
336.923 166.592 336.323 166.856 335.915 167.384 cv
335.507 167.912 335.267 168.716 335.219 169.772 cv
335.447 169.436 335.735 169.172 336.083 168.992 cv
336.431 168.812 336.815 168.716 337.235 168.716 cv
338.111 168.716 338.807 168.992 339.311 169.52 cv
339.815 170.048 340.079 170.78 340.079 171.692 cv
340.079 172.592 339.803 173.312 339.275 173.852 cv
338.747 174.392 338.039 174.656 337.163 174.656 cv
336.155 174.656 335.375 174.272 334.847 173.504 cv
334.307 172.736 334.043 171.608 334.043 170.132 cv
334.043 168.752 334.367 167.648 335.027 166.832 cv
335.675 166.016 336.563 165.596 337.667 165.596 cv
337.955 165.596 338.255 165.632 338.567 165.68 cv
338.867 165.74 339.179 165.824 339.515 165.944 cv
339.515 165.944 li
cp
337.163 169.652 mo
336.635 169.652 336.215 169.844 335.903 170.204 cv
335.591 170.564 335.435 171.068 335.435 171.692 cv
335.435 172.328 335.591 172.832 335.903 173.192 cv
336.215 173.552 336.635 173.732 337.163 173.732 cv
337.691 173.732 338.111 173.552 338.423 173.192 cv
338.735 172.832 338.891 172.328 338.891 171.692 cv
338.891 171.068 338.735 170.564 338.423 170.204 cv
338.111 169.844 337.691 169.652 337.163 169.652 cv
ef
371.704 161.373 mo
371.704 157.373 li
f
371.704 161.373 mo
371.704 157.373 li
@
371.704 .5 mo
371.704 4.5 li
f
371.704 .5 mo
371.704 4.5 li
@
364.235 170.24 mo
371.747 170.24 li
371.747 171.236 li
364.235 171.236 li
364.235 170.24 li
364.235 170.24 li
cp
ef
377.027 165.752 mo
378.515 165.752 li
378.515 171.452 li
379.763 171.452 li
379.763 172.436 li
378.515 172.436 li
378.515 174.5 li
377.339 174.5 li
377.339 172.436 li
373.391 172.436 li
373.391 171.296 li
377.027 165.752 li
377.027 165.752 li
cp
377.339 166.784 mo
374.351 171.452 li
377.339 171.452 li
377.339 166.784 li
ef
411.335 161.373 mo
411.335 157.373 li
f
411.335 161.373 mo
411.335 157.373 li
@
411.335 .5 mo
411.335 4.5 li
f
411.335 .5 mo
411.335 4.5 li
@
403.835 170.24 mo
411.347 170.24 li
411.347 171.236 li
403.835 171.236 li
403.835 170.24 li
403.835 170.24 li
cp
ef
414.947 173.504 mo
419.075 173.504 li
419.075 174.5 li
413.519 174.5 li
413.519 173.504 li
413.963 173.048 414.575 172.424 415.355 171.632 cv
416.123 170.852 416.615 170.348 416.819 170.12 cv
417.203 169.7 417.467 169.34 417.611 169.04 cv
417.755 168.752 417.839 168.452 417.839 168.164 cv
417.839 167.708 417.671 167.324 417.347 167.036 cv
417.023 166.748 416.603 166.592 416.075 166.592 cv
415.703 166.592 415.307 166.664 414.899 166.784 cv
414.491 166.916 414.047 167.108 413.579 167.372 cv
413.579 166.172 li
414.059 165.98 414.503 165.836 414.911 165.74 cv
415.319 165.644 415.703 165.596 416.051 165.596 cv
416.951 165.596 417.671 165.824 418.211 166.28 cv
418.751 166.736 419.027 167.336 419.027 168.092 cv
419.027 168.452 418.955 168.8 418.823 169.112 cv
418.691 169.436 418.451 169.82 418.091 170.252 cv
417.995 170.372 417.683 170.696 417.155 171.236 cv
416.627 171.776 415.895 172.532 414.947 173.504 cv
414.947 173.504 li
cp
ef
450.965 161.373 mo
450.965 157.373 li
f
450.965 161.373 mo
450.965 157.373 li
@
450.965 .5 mo
450.965 4.5 li
f
450.965 .5 mo
450.965 4.5 li
@
451.019 165.596 mo
451.991 165.596 452.735 165.992 453.263 166.76 cv
453.779 167.54 454.043 168.668 454.043 170.132 cv
454.043 171.608 453.779 172.736 453.263 173.504 cv
452.735 174.272 451.991 174.656 451.019 174.656 cv
450.035 174.656 449.279 174.272 448.763 173.504 cv
448.247 172.736 447.995 171.608 447.995 170.132 cv
447.995 168.668 448.247 167.54 448.763 166.76 cv
449.279 165.992 450.035 165.596 451.019 165.596 cv
451.019 165.596 li
cp
451.019 166.532 mo
450.407 166.532 449.951 166.832 449.639 167.432 cv
449.327 168.032 449.183 168.932 449.183 170.132 cv
449.183 171.332 449.327 172.232 449.639 172.832 cv
449.951 173.432 450.407 173.732 451.019 173.732 cv
451.631 173.732 452.087 173.432 452.399 172.832 cv
452.699 172.232 452.855 171.332 452.855 170.132 cv
452.855 168.932 452.699 168.032 452.399 167.432 cv
452.087 166.832 451.631 166.532 451.019 166.532 cv
ef
490.596 161.373 mo
490.596 157.373 li
f
490.596 161.373 mo
490.596 157.373 li
@
490.596 .5 mo
490.596 4.5 li
f
490.596 .5 mo
490.596 4.5 li
@
489.107 173.504 mo
493.235 173.504 li
493.235 174.5 li
487.679 174.5 li
487.679 173.504 li
488.123 173.048 488.735 172.424 489.515 171.632 cv
490.283 170.852 490.775 170.348 490.979 170.12 cv
491.363 169.7 491.627 169.34 491.771 169.04 cv
491.915 168.752 491.999 168.452 491.999 168.164 cv
491.999 167.708 491.831 167.324 491.507 167.036 cv
491.183 166.748 490.763 166.592 490.235 166.592 cv
489.863 166.592 489.467 166.664 489.059 166.784 cv
488.651 166.916 488.207 167.108 487.739 167.372 cv
487.739 166.172 li
488.219 165.98 488.663 165.836 489.071 165.74 cv
489.479 165.644 489.863 165.596 490.211 165.596 cv
491.111 165.596 491.831 165.824 492.371 166.28 cv
492.911 166.736 493.187 167.336 493.187 168.092 cv
493.187 168.452 493.115 168.8 492.983 169.112 cv
492.851 169.436 492.611 169.82 492.251 170.252 cv
492.155 170.372 491.843 170.696 491.315 171.236 cv
490.787 171.776 490.055 172.532 489.107 173.504 cv
489.107 173.504 li
cp
ef
530.227 161.373 mo
530.227 157.373 li
f
530.227 161.373 mo
530.227 157.373 li
@
530.227 .5 mo
530.227 4.5 li
f
530.227 .5 mo
530.227 4.5 li
@
530.627 165.752 mo
532.115 165.752 li
532.115 171.452 li
533.363 171.452 li
533.363 172.436 li
532.115 172.436 li
532.115 174.5 li
530.939 174.5 li
530.939 172.436 li
526.991 172.436 li
526.991 171.296 li
530.627 165.752 li
530.627 165.752 li
cp
530.939 166.784 mo
527.951 171.452 li
530.939 171.452 li
530.939 166.784 li
ef
569.858 161.373 mo
569.858 157.373 li
f
569.858 161.373 mo
569.858 157.373 li
@
569.858 .5 mo
569.858 4.5 li
f
569.858 .5 mo
569.858 4.5 li
@
572.315 165.944 mo
572.315 167.024 li
572.015 166.88 571.715 166.772 571.415 166.7 cv
571.103 166.628 570.803 166.592 570.515 166.592 cv
569.723 166.592 569.123 166.856 568.715 167.384 cv
568.307 167.912 568.067 168.716 568.019 169.772 cv
568.247 169.436 568.535 169.172 568.883 168.992 cv
569.231 168.812 569.615 168.716 570.035 168.716 cv
570.911 168.716 571.607 168.992 572.111 169.52 cv
572.615 170.048 572.879 170.78 572.879 171.692 cv
572.879 172.592 572.603 173.312 572.075 173.852 cv
571.547 174.392 570.839 174.656 569.963 174.656 cv
568.955 174.656 568.175 174.272 567.647 173.504 cv
567.107 172.736 566.843 171.608 566.843 170.132 cv
566.843 168.752 567.167 167.648 567.827 166.832 cv
568.475 166.016 569.363 165.596 570.467 165.596 cv
570.755 165.596 571.055 165.632 571.367 165.68 cv
571.667 165.74 571.979 165.824 572.315 165.944 cv
572.315 165.944 li
cp
569.963 169.652 mo
569.435 169.652 569.015 169.844 568.703 170.204 cv
568.391 170.564 568.235 171.068 568.235 171.692 cv
568.235 172.328 568.391 172.832 568.703 173.192 cv
569.015 173.552 569.435 173.732 569.963 173.732 cv
570.491 173.732 570.911 173.552 571.223 173.192 cv
571.535 172.832 571.691 172.328 571.691 171.692 cv
571.691 171.068 571.535 170.564 571.223 170.204 cv
570.911 169.844 570.491 169.652 569.963 169.652 cv
ef
413.783 182.36 mo
413.783 183.512 li
413.327 183.296 412.907 183.14 412.511 183.032 cv
412.103 182.936 411.719 182.876 411.359 182.876 cv
410.711 182.876 410.207 183.008 409.859 183.248 cv
409.511 183.5 409.343 183.86 409.343 184.316 cv
409.343 184.7 409.451 185 409.691 185.192 cv
409.919 185.396 410.363 185.552 411.011 185.672 cv
411.731 185.816 li
412.607 185.984 413.255 186.284 413.675 186.704 cv
414.095 187.136 414.311 187.7 414.311 188.408 cv
414.311 189.26 414.023 189.896 413.459 190.328 cv
412.883 190.76 412.055 190.976 410.963 190.976 cv
410.543 190.976 410.099 190.928 409.631 190.844 cv
409.163 190.76 408.683 190.628 408.191 190.436 cv
408.191 189.212 li
408.671 189.488 409.139 189.692 409.595 189.824 cv
410.051 189.968 410.507 190.028 410.963 190.028 cv
411.635 190.028 412.151 189.896 412.523 189.632 cv
412.883 189.368 413.075 188.996 413.075 188.492 cv
413.075 188.06 412.943 187.724 412.679 187.484 cv
412.415 187.244 411.983 187.064 411.383 186.944 cv
410.663 186.8 li
409.775 186.632 409.139 186.356 408.743 185.972 cv
408.347 185.6 408.155 185.084 408.155 184.412 cv
408.155 183.644 408.419 183.032 408.971 182.588 cv
409.511 182.144 410.267 181.916 411.227 181.916 cv
411.635 181.916 412.043 181.952 412.475 182.024 cv
412.895 182.096 413.327 182.216 413.783 182.36 cv
413.783 182.36 li
cp
ef
416.219 182.072 mo
418.655 182.072 li
420.347 182.072 421.595 182.432 422.387 183.128 cv
423.179 183.836 423.575 184.94 423.575 186.44 cv
423.575 187.952 423.167 189.056 422.375 189.764 cv
421.583 190.472 420.335 190.82 418.655 190.82 cv
416.219 190.82 li
416.219 182.072 li
416.219 182.072 li
cp
417.407 183.044 mo
417.407 189.848 li
418.835 189.848 li
420.035 189.848 420.923 189.584 421.487 189.032 cv
422.039 188.48 422.327 187.616 422.327 186.44 cv
422.327 185.264 422.039 184.412 421.487 183.86 cv
420.923 183.32 420.035 183.044 418.835 183.044 cv
417.407 183.044 li
ef
430.823 182.36 mo
430.823 183.512 li
430.367 183.296 429.947 183.14 429.551 183.032 cv
429.143 182.936 428.759 182.876 428.399 182.876 cv
427.751 182.876 427.247 183.008 426.899 183.248 cv
426.551 183.5 426.383 183.86 426.383 184.316 cv
426.383 184.7 426.491 185 426.731 185.192 cv
426.959 185.396 427.403 185.552 428.051 185.672 cv
428.771 185.816 li
429.647 185.984 430.295 186.284 430.715 186.704 cv
431.135 187.136 431.351 187.7 431.351 188.408 cv
431.351 189.26 431.063 189.896 430.499 190.328 cv
429.923 190.76 429.095 190.976 428.003 190.976 cv
427.583 190.976 427.139 190.928 426.671 190.844 cv
426.203 190.76 425.723 190.628 425.231 190.436 cv
425.231 189.212 li
425.711 189.488 426.179 189.692 426.635 189.824 cv
427.091 189.968 427.547 190.028 428.003 190.028 cv
428.675 190.028 429.191 189.896 429.563 189.632 cv
429.923 189.368 430.115 188.996 430.115 188.492 cv
430.115 188.06 429.983 187.724 429.719 187.484 cv
429.455 187.244 429.023 187.064 428.423 186.944 cv
427.703 186.8 li
426.815 186.632 426.179 186.356 425.783 185.972 cv
425.387 185.6 425.195 185.084 425.195 184.412 cv
425.195 183.644 425.459 183.032 426.011 182.588 cv
426.551 182.144 427.307 181.916 428.267 181.916 cv
428.675 181.916 429.083 181.952 429.515 182.024 cv
429.935 182.096 430.367 182.216 430.823 182.36 cv
430.823 182.36 li
cp
ef
438.263 182.36 mo
438.263 183.512 li
437.807 183.296 437.387 183.14 436.991 183.032 cv
436.583 182.936 436.199 182.876 435.839 182.876 cv
435.191 182.876 434.687 183.008 434.339 183.248 cv
433.991 183.5 433.823 183.86 433.823 184.316 cv
433.823 184.7 433.931 185 434.171 185.192 cv
434.399 185.396 434.843 185.552 435.491 185.672 cv
436.211 185.816 li
437.087 185.984 437.735 186.284 438.155 186.704 cv
438.575 187.136 438.791 187.7 438.791 188.408 cv
438.791 189.26 438.503 189.896 437.939 190.328 cv
437.363 190.76 436.535 190.976 435.443 190.976 cv
435.023 190.976 434.579 190.928 434.111 190.844 cv
433.643 190.76 433.163 190.628 432.671 190.436 cv
432.671 189.212 li
433.151 189.488 433.619 189.692 434.075 189.824 cv
434.531 189.968 434.987 190.028 435.443 190.028 cv
436.115 190.028 436.631 189.896 437.003 189.632 cv
437.363 189.368 437.555 188.996 437.555 188.492 cv
437.555 188.06 437.423 187.724 437.159 187.484 cv
436.895 187.244 436.463 187.064 435.863 186.944 cv
435.143 186.8 li
434.255 186.632 433.619 186.356 433.223 185.972 cv
432.827 185.6 432.635 185.084 432.635 184.412 cv
432.635 183.644 432.899 183.032 433.451 182.588 cv
433.991 182.144 434.747 181.916 435.707 181.916 cv
436.115 181.916 436.523 181.952 436.955 182.024 cv
437.375 182.096 437.807 182.216 438.263 182.36 cv
438.263 182.36 li
cp
ef
443.975 190.82 mo
443.891 190.82 443.855 190.772 443.855 190.664 cv
443.855 190.64 443.867 190.616 443.879 190.568 cv
443.879 190.52 443.891 190.484 443.915 190.448 cv
443.939 190.424 443.963 190.4 444.011 190.4 cv
444.767 190.4 445.211 190.16 445.343 189.668 cv
446.903 183.404 li
446.915 183.332 446.927 183.272 446.927 183.236 cv
446.927 183.152 446.879 183.104 446.783 183.092 cv
446.627 183.068 446.339 183.044 445.919 183.044 cv
445.835 183.044 445.799 182.996 445.799 182.888 cv
445.799 182.864 445.811 182.828 445.823 182.78 cv
445.835 182.732 445.847 182.696 445.871 182.672 cv
445.895 182.648 445.919 182.624 445.955 182.624 cv
448.067 182.624 li
448.151 182.624 448.199 182.672 448.223 182.756 cv
449.159 189.632 li
453.527 182.756 li
453.575 182.672 453.659 182.624 453.755 182.624 cv
455.795 182.624 li
455.867 182.624 455.915 182.684 455.915 182.78 cv
455.903 182.804 455.891 182.84 455.879 182.888 cv
455.867 182.936 455.855 182.984 455.831 183.008 cv
455.807 183.032 455.783 183.044 455.759 183.044 cv
455.267 183.044 454.931 183.08 454.739 183.128 cv
454.631 183.164 454.559 183.272 454.511 183.452 cv
452.867 190.04 li
452.843 190.124 452.843 190.184 452.843 190.208 cv
452.843 190.244 452.843 190.268 452.855 190.292 cv
452.855 190.316 452.867 190.328 452.891 190.328 cv
452.915 190.34 452.939 190.352 452.987 190.352 cv
453.131 190.388 453.419 190.4 453.851 190.4 cv
453.923 190.4 453.971 190.46 453.971 190.556 cv
453.935 190.676 453.911 190.748 453.899 190.772 cv
453.875 190.808 453.839 190.82 453.767 190.82 cv
450.635 190.82 li
450.551 190.82 450.515 190.772 450.515 190.664 cv
450.515 190.64 450.527 190.604 450.539 190.556 cv
450.551 190.508 450.563 190.472 450.587 190.448 cv
450.611 190.424 450.635 190.4 450.671 190.4 cv
451.151 190.4 451.499 190.376 451.691 190.316 cv
451.787 190.292 451.871 190.184 451.919 189.992 cv
453.647 183.044 li
448.799 190.688 li
448.751 190.784 448.667 190.82 448.559 190.82 cv
448.451 190.82 448.391 190.784 448.391 190.688 cv
447.371 183.14 li
445.727 189.716 li
445.715 189.74 445.703 189.776 445.703 189.8 cv
445.703 189.824 445.691 189.86 445.691 189.896 cv
445.691 190.112 445.775 190.244 445.955 190.304 cv
446.135 190.376 446.363 190.4 446.627 190.4 cv
446.699 190.4 446.747 190.46 446.747 190.556 cv
446.723 190.664 446.699 190.736 446.675 190.772 cv
446.651 190.808 446.615 190.82 446.543 190.82 cv
443.975 190.82 li
443.975 190.82 li
cp
ef
456.878 192.762 mo
457.231 192.762 457.584 192.518 457.937 192.022 cv
458.399 190.191 li
458.357 189.998 458.281 189.83 458.163 189.696 cv
458.046 189.561 457.903 189.486 457.735 189.486 cv
457.55 189.486 457.374 189.561 457.206 189.712 cv
457.038 189.864 456.903 190.048 456.794 190.258 cv
456.693 190.46 456.593 190.754 456.492 191.132 cv
456.391 191.51 456.349 191.804 456.349 192.022 cv
456.349 192.216 456.391 192.384 456.475 192.535 cv
456.559 192.686 456.693 192.762 456.878 192.762 cv
456.878 192.762 li
cp
455.24 194.173 mo
455.24 194.038 455.282 193.912 455.383 193.812 cv
455.475 193.711 455.593 193.66 455.727 193.66 cv
455.811 193.66 455.887 193.686 455.954 193.744 cv
456.013 193.795 456.047 193.87 456.047 193.963 cv
456.047 194.064 456.013 194.148 455.954 194.232 cv
455.895 194.316 455.82 194.374 455.736 194.408 cv
455.887 194.45 456.122 194.475 456.441 194.475 cv
456.693 194.475 456.929 194.374 457.147 194.173 cv
457.357 193.971 457.5 193.744 457.567 193.492 cv
457.811 192.518 li
457.508 192.829 457.189 192.98 456.861 192.98 cv
456.618 192.98 456.408 192.921 456.24 192.795 cv
456.072 192.678 455.937 192.51 455.853 192.308 cv
455.761 192.106 455.719 191.888 455.719 191.653 cv
455.719 191.401 455.769 191.132 455.87 190.846 cv
455.971 190.561 456.122 190.3 456.315 190.057 cv
456.5 189.822 456.719 189.628 456.971 189.486 cv
457.214 189.343 457.475 189.267 457.752 189.267 cv
457.911 189.267 458.054 189.318 458.189 189.402 cv
458.323 189.494 458.424 189.612 458.508 189.763 cv
458.558 189.544 458.684 189.435 458.869 189.435 cv
458.936 189.435 458.995 189.46 459.045 189.502 cv
459.096 189.544 459.121 189.603 459.121 189.67 cv
459.121 189.687 459.121 189.704 459.121 189.712 cv
459.121 189.721 459.113 189.729 459.113 189.738 cv
458.155 193.543 li
458.105 193.711 458.029 193.87 457.911 194.022 cv
457.794 194.164 457.651 194.282 457.491 194.383 cv
457.332 194.484 457.155 194.559 456.971 194.61 cv
456.786 194.66 456.601 194.694 456.433 194.694 cv
456.114 194.694 455.828 194.66 455.593 194.601 cv
455.358 194.534 455.24 194.391 455.24 194.173 cv
ef
463.067 188.06 mo
462.995 188.06 462.947 188.036 462.899 187.988 cv
462.851 187.94 462.839 187.88 462.839 187.82 cv
462.839 187.772 462.851 187.712 462.899 187.664 cv
462.947 187.616 462.995 187.58 463.067 187.58 cv
469.955 187.58 li
470.015 187.58 470.063 187.616 470.111 187.664 cv
470.147 187.712 470.171 187.772 470.171 187.82 cv
470.171 187.88 470.147 187.94 470.111 187.988 cv
470.063 188.036 470.015 188.06 469.955 188.06 cv
463.067 188.06 li
463.067 188.06 li
cp
ef
473.975 190.82 mo
473.891 190.82 473.855 190.772 473.855 190.664 cv
473.855 190.64 473.867 190.616 473.879 190.568 cv
473.879 190.52 473.891 190.484 473.915 190.448 cv
473.939 190.424 473.963 190.4 474.011 190.4 cv
474.767 190.4 475.211 190.16 475.343 189.668 cv
476.903 183.404 li
476.915 183.332 476.927 183.272 476.927 183.236 cv
476.927 183.152 476.879 183.104 476.783 183.092 cv
476.627 183.068 476.339 183.044 475.919 183.044 cv
475.835 183.044 475.799 182.996 475.799 182.888 cv
475.799 182.864 475.811 182.828 475.823 182.78 cv
475.835 182.732 475.847 182.696 475.871 182.672 cv
475.895 182.648 475.919 182.624 475.955 182.624 cv
478.067 182.624 li
478.151 182.624 478.199 182.672 478.223 182.756 cv
479.159 189.632 li
483.527 182.756 li
483.575 182.672 483.659 182.624 483.755 182.624 cv
485.795 182.624 li
485.867 182.624 485.915 182.684 485.915 182.78 cv
485.903 182.804 485.891 182.84 485.879 182.888 cv
485.867 182.936 485.855 182.984 485.831 183.008 cv
485.807 183.032 485.783 183.044 485.759 183.044 cv
485.267 183.044 484.931 183.08 484.739 183.128 cv
484.631 183.164 484.559 183.272 484.511 183.452 cv
482.867 190.04 li
482.843 190.124 482.843 190.184 482.843 190.208 cv
482.843 190.244 482.843 190.268 482.855 190.292 cv
482.855 190.316 482.867 190.328 482.891 190.328 cv
482.915 190.34 482.939 190.352 482.987 190.352 cv
483.131 190.388 483.419 190.4 483.851 190.4 cv
483.923 190.4 483.971 190.46 483.971 190.556 cv
483.935 190.676 483.911 190.748 483.899 190.772 cv
483.875 190.808 483.839 190.82 483.767 190.82 cv
480.635 190.82 li
480.551 190.82 480.515 190.772 480.515 190.664 cv
480.515 190.64 480.527 190.604 480.539 190.556 cv
480.551 190.508 480.563 190.472 480.587 190.448 cv
480.611 190.424 480.635 190.4 480.671 190.4 cv
481.151 190.4 481.499 190.376 481.691 190.316 cv
481.787 190.292 481.871 190.184 481.919 189.992 cv
483.647 183.044 li
478.799 190.688 li
478.751 190.784 478.667 190.82 478.559 190.82 cv
478.451 190.82 478.391 190.784 478.391 190.688 cv
477.371 183.14 li
475.727 189.716 li
475.715 189.74 475.703 189.776 475.703 189.8 cv
475.703 189.824 475.691 189.86 475.691 189.896 cv
475.691 190.112 475.775 190.244 475.955 190.304 cv
476.135 190.376 476.363 190.4 476.627 190.4 cv
476.699 190.4 476.747 190.46 476.747 190.556 cv
476.723 190.664 476.699 190.736 476.675 190.772 cv
476.651 190.808 476.615 190.82 476.543 190.82 cv
473.975 190.82 li
473.975 190.82 li
cp
ef
488.552 185.193 mo
488.485 185.193 488.435 185.168 488.384 185.118 cv
488.334 185.067 488.309 185.008 488.309 184.941 cv
488.309 184.849 488.342 184.782 488.426 184.74 cv
489.636 184.16 li
488.426 183.589 li
488.342 183.555 488.309 183.488 488.309 183.387 cv
488.309 183.328 488.334 183.27 488.384 183.219 cv
488.435 183.169 488.485 183.135 488.552 183.135 cv
488.594 183.135 488.636 183.152 488.67 183.177 cv
489.745 183.958 li
489.619 182.589 li
489.619 182.522 489.636 182.472 489.686 182.421 cv
489.737 182.379 489.795 182.354 489.863 182.354 cv
489.93 182.354 489.98 182.379 490.031 182.421 cv
490.073 182.463 490.098 182.514 490.098 182.572 cv
490.098 182.589 li
489.972 183.958 li
491.047 183.177 li
491.081 183.152 491.114 183.135 491.165 183.135 cv
491.232 183.135 491.282 183.169 491.333 183.219 cv
491.383 183.27 491.408 183.328 491.408 183.387 cv
491.408 183.488 491.366 183.555 491.291 183.589 cv
490.081 184.16 li
491.291 184.74 li
491.366 184.782 491.408 184.849 491.408 184.941 cv
491.408 185.008 491.383 185.067 491.333 185.118 cv
491.282 185.168 491.232 185.193 491.165 185.193 cv
491.114 185.193 491.081 185.185 491.047 185.151 cv
489.972 184.37 li
490.098 185.731 li
490.098 185.756 li
490.098 185.823 490.073 185.874 490.022 185.916 cv
489.972 185.958 489.921 185.974 489.863 185.974 cv
489.795 185.974 489.737 185.958 489.686 185.907 cv
489.636 185.865 489.619 185.806 489.619 185.739 cv
489.745 184.37 li
488.67 185.151 li
488.636 185.185 488.594 185.193 488.552 185.193 cv
488.552 185.193 li
cp
ef
486.638 193.722 mo
486.991 193.722 487.344 193.478 487.697 192.982 cv
488.159 191.151 li
488.117 190.958 488.041 190.79 487.923 190.656 cv
487.806 190.521 487.663 190.446 487.495 190.446 cv
487.31 190.446 487.134 190.521 486.966 190.672 cv
486.798 190.824 486.663 191.008 486.554 191.218 cv
486.453 191.42 486.353 191.714 486.252 192.092 cv
486.151 192.47 486.109 192.764 486.109 192.982 cv
486.109 193.176 486.151 193.344 486.235 193.495 cv
486.319 193.646 486.453 193.722 486.638 193.722 cv
486.638 193.722 li
cp
485 195.133 mo
485 194.998 485.042 194.872 485.143 194.772 cv
485.235 194.671 485.353 194.62 485.487 194.62 cv
485.571 194.62 485.647 194.646 485.714 194.704 cv
485.773 194.755 485.807 194.83 485.807 194.923 cv
485.807 195.024 485.773 195.108 485.714 195.192 cv
485.655 195.276 485.58 195.334 485.496 195.368 cv
485.647 195.41 485.882 195.435 486.201 195.435 cv
486.453 195.435 486.689 195.334 486.907 195.133 cv
487.117 194.931 487.26 194.704 487.327 194.452 cv
487.571 193.478 li
487.268 193.789 486.949 193.94 486.621 193.94 cv
486.378 193.94 486.168 193.881 486 193.755 cv
485.832 193.638 485.697 193.47 485.613 193.268 cv
485.521 193.066 485.479 192.848 485.479 192.613 cv
485.479 192.361 485.529 192.092 485.63 191.806 cv
485.731 191.521 485.882 191.26 486.075 191.017 cv
486.26 190.782 486.479 190.588 486.731 190.446 cv
486.974 190.303 487.235 190.227 487.512 190.227 cv
487.671 190.227 487.814 190.278 487.949 190.362 cv
488.083 190.454 488.184 190.572 488.268 190.723 cv
488.318 190.504 488.444 190.395 488.629 190.395 cv
488.696 190.395 488.755 190.42 488.805 190.462 cv
488.856 190.504 488.881 190.563 488.881 190.63 cv
488.881 190.647 488.881 190.664 488.881 190.672 cv
488.881 190.681 488.873 190.689 488.873 190.698 cv
487.915 194.503 li
487.865 194.671 487.789 194.83 487.671 194.982 cv
487.554 195.124 487.411 195.242 487.251 195.343 cv
487.092 195.444 486.915 195.519 486.731 195.57 cv
486.546 195.62 486.361 195.654 486.193 195.654 cv
485.874 195.654 485.588 195.62 485.353 195.561 cv
485.118 195.494 485 195.351 485 195.133 cv
ef
332.073 161.373 mo
336.073 161.373 li
f
332.073 161.373 mo
336.073 161.373 li
@
569.858 161.373 mo
565.858 161.373 li
f
569.858 161.373 mo
565.858 161.373 li
@
324.299 155.756 mo
325.271 155.756 326.015 156.152 326.543 156.92 cv
327.059 157.7 327.323 158.828 327.323 160.292 cv
327.323 161.768 327.059 162.896 326.543 163.664 cv
326.015 164.432 325.271 164.816 324.299 164.816 cv
323.315 164.816 322.559 164.432 322.043 163.664 cv
321.527 162.896 321.275 161.768 321.275 160.292 cv
321.275 158.828 321.527 157.7 322.043 156.92 cv
322.559 156.152 323.315 155.756 324.299 155.756 cv
324.299 155.756 li
cp
324.299 156.692 mo
323.687 156.692 323.231 156.992 322.919 157.592 cv
322.607 158.192 322.463 159.092 322.463 160.292 cv
322.463 161.492 322.607 162.392 322.919 162.992 cv
323.231 163.592 323.687 163.892 324.299 163.892 cv
324.911 163.892 325.367 163.592 325.679 162.992 cv
325.979 162.392 326.135 161.492 326.135 160.292 cv
326.135 159.092 325.979 158.192 325.679 157.592 cv
325.367 156.992 324.911 156.692 324.299 156.692 cv
ef
332.073 131.581 mo
336.073 131.581 li
f
332.073 131.581 mo
336.073 131.581 li
@
569.858 131.581 mo
565.858 131.581 li
f
569.858 131.581 mo
565.858 131.581 li
@
314.099 126.152 mo
318.743 126.152 li
318.743 127.148 li
315.179 127.148 li
315.179 129.296 li
315.347 129.236 315.527 129.188 315.695 129.164 cv
315.863 129.14 316.043 129.116 316.211 129.116 cv
317.183 129.116 317.951 129.392 318.527 129.92 cv
319.103 130.46 319.391 131.18 319.391 132.092 cv
319.391 133.04 319.091 133.772 318.503 134.288 cv
317.915 134.804 317.087 135.056 316.031 135.056 cv
315.659 135.056 315.287 135.02 314.903 134.972 cv
314.519 134.912 314.135 134.828 313.727 134.696 cv
313.727 133.508 li
314.075 133.7 314.435 133.844 314.819 133.94 cv
315.191 134.036 315.587 134.072 316.007 134.072 cv
316.679 134.072 317.219 133.904 317.615 133.544 cv
317.999 133.184 318.203 132.704 318.203 132.092 cv
318.203 131.492 317.999 131.012 317.615 130.652 cv
317.219 130.292 316.679 130.112 316.007 130.112 cv
315.695 130.112 315.371 130.148 315.059 130.22 cv
314.747 130.292 314.423 130.4 314.099 130.544 cv
314.099 126.152 li
314.099 126.152 li
cp
ef
324.299 125.996 mo
325.271 125.996 326.015 126.392 326.543 127.16 cv
327.059 127.94 327.323 129.068 327.323 130.532 cv
327.323 132.008 327.059 133.136 326.543 133.904 cv
326.015 134.672 325.271 135.056 324.299 135.056 cv
323.315 135.056 322.559 134.672 322.043 133.904 cv
321.527 133.136 321.275 132.008 321.275 130.532 cv
321.275 129.068 321.527 127.94 322.043 127.16 cv
322.559 126.392 323.315 125.996 324.299 125.996 cv
324.299 125.996 li
cp
324.299 126.932 mo
323.687 126.932 323.231 127.232 322.919 127.832 cv
322.607 128.432 322.463 129.332 322.463 130.532 cv
322.463 131.732 322.607 132.632 322.919 133.232 cv
323.231 133.832 323.687 134.132 324.299 134.132 cv
324.911 134.132 325.367 133.832 325.679 133.232 cv
325.979 132.632 326.135 131.732 326.135 130.532 cv
326.135 129.332 325.979 128.432 325.679 127.832 cv
325.367 127.232 324.911 126.932 324.299 126.932 cv
ef
332.073 101.79 mo
336.073 101.79 li
f
332.073 101.79 mo
336.073 101.79 li
@
569.858 101.79 mo
565.858 101.79 li
f
569.858 101.79 mo
565.858 101.79 li
@
306.611 104.144 mo
308.543 104.144 li
308.543 97.472 li
306.443 97.892 li
306.443 96.812 li
308.531 96.392 li
309.719 96.392 li
309.719 104.144 li
311.651 104.144 li
311.651 105.14 li
306.611 105.14 li
306.611 104.144 li
306.611 104.144 li
cp
ef
316.619 96.236 mo
317.591 96.236 318.335 96.632 318.863 97.4 cv
319.379 98.18 319.643 99.308 319.643 100.772 cv
319.643 102.248 319.379 103.376 318.863 104.144 cv
318.335 104.912 317.591 105.296 316.619 105.296 cv
315.635 105.296 314.879 104.912 314.363 104.144 cv
313.847 103.376 313.595 102.248 313.595 100.772 cv
313.595 99.308 313.847 98.18 314.363 97.4 cv
314.879 96.632 315.635 96.236 316.619 96.236 cv
316.619 96.236 li
cp
316.619 97.172 mo
316.007 97.172 315.551 97.472 315.239 98.072 cv
314.927 98.672 314.783 99.572 314.783 100.772 cv
314.783 101.972 314.927 102.872 315.239 103.472 cv
315.551 104.072 316.007 104.372 316.619 104.372 cv
317.231 104.372 317.687 104.072 317.999 103.472 cv
318.299 102.872 318.455 101.972 318.455 100.772 cv
318.455 99.572 318.299 98.672 317.999 98.072 cv
317.687 97.472 317.231 97.172 316.619 97.172 cv
ef
324.299 96.236 mo
325.271 96.236 326.015 96.632 326.543 97.4 cv
327.059 98.18 327.323 99.308 327.323 100.772 cv
327.323 102.248 327.059 103.376 326.543 104.144 cv
326.015 104.912 325.271 105.296 324.299 105.296 cv
323.315 105.296 322.559 104.912 322.043 104.144 cv
321.527 103.376 321.275 102.248 321.275 100.772 cv
321.275 99.308 321.527 98.18 322.043 97.4 cv
322.559 96.632 323.315 96.236 324.299 96.236 cv
324.299 96.236 li
cp
324.299 97.172 mo
323.687 97.172 323.231 97.472 322.919 98.072 cv
322.607 98.672 322.463 99.572 322.463 100.772 cv
322.463 101.972 322.607 102.872 322.919 103.472 cv
323.231 104.072 323.687 104.372 324.299 104.372 cv
324.911 104.372 325.367 104.072 325.679 103.472 cv
325.979 102.872 326.135 101.972 326.135 100.772 cv
326.135 99.572 325.979 98.672 325.679 98.072 cv
325.367 97.472 324.911 97.172 324.299 97.172 cv
ef
332.073 71.999 mo
336.073 71.999 li
f
332.073 71.999 mo
336.073 71.999 li
@
569.858 71.999 mo
565.858 71.999 li
f
569.858 71.999 mo
565.858 71.999 li
@
306.611 74.384 mo
308.543 74.384 li
308.543 67.712 li
306.443 68.132 li
306.443 67.052 li
308.531 66.632 li
309.719 66.632 li
309.719 74.384 li
311.651 74.384 li
311.651 75.38 li
306.611 75.38 li
306.611 74.384 li
306.611 74.384 li
cp
ef
314.099 66.632 mo
318.743 66.632 li
318.743 67.628 li
315.179 67.628 li
315.179 69.776 li
315.347 69.716 315.527 69.668 315.695 69.644 cv
315.863 69.62 316.043 69.596 316.211 69.596 cv
317.183 69.596 317.951 69.872 318.527 70.4 cv
319.103 70.94 319.391 71.66 319.391 72.572 cv
319.391 73.52 319.091 74.252 318.503 74.768 cv
317.915 75.284 317.087 75.536 316.031 75.536 cv
315.659 75.536 315.287 75.5 314.903 75.452 cv
314.519 75.392 314.135 75.308 313.727 75.176 cv
313.727 73.988 li
314.075 74.18 314.435 74.324 314.819 74.42 cv
315.191 74.516 315.587 74.552 316.007 74.552 cv
316.679 74.552 317.219 74.384 317.615 74.024 cv
317.999 73.664 318.203 73.184 318.203 72.572 cv
318.203 71.972 317.999 71.492 317.615 71.132 cv
317.219 70.772 316.679 70.592 316.007 70.592 cv
315.695 70.592 315.371 70.628 315.059 70.7 cv
314.747 70.772 314.423 70.88 314.099 71.024 cv
314.099 66.632 li
314.099 66.632 li
cp
ef
324.299 66.476 mo
325.271 66.476 326.015 66.872 326.543 67.64 cv
327.059 68.42 327.323 69.548 327.323 71.012 cv
327.323 72.488 327.059 73.616 326.543 74.384 cv
326.015 75.152 325.271 75.536 324.299 75.536 cv
323.315 75.536 322.559 75.152 322.043 74.384 cv
321.527 73.616 321.275 72.488 321.275 71.012 cv
321.275 69.548 321.527 68.42 322.043 67.64 cv
322.559 66.872 323.315 66.476 324.299 66.476 cv
324.299 66.476 li
cp
324.299 67.412 mo
323.687 67.412 323.231 67.712 322.919 68.312 cv
322.607 68.912 322.463 69.812 322.463 71.012 cv
322.463 72.212 322.607 73.112 322.919 73.712 cv
323.231 74.312 323.687 74.612 324.299 74.612 cv
324.911 74.612 325.367 74.312 325.679 73.712 cv
325.979 73.112 326.135 72.212 326.135 71.012 cv
326.135 69.812 325.979 68.912 325.679 68.312 cv
325.367 67.712 324.911 67.412 324.299 67.412 cv
ef
332.073 42.208 mo
336.073 42.208 li
f
332.073 42.208 mo
336.073 42.208 li
@
569.858 42.208 mo
565.858 42.208 li
f
569.858 42.208 mo
565.858 42.208 li
@
307.427 44.624 mo
311.555 44.624 li
311.555 45.62 li
305.999 45.62 li
305.999 44.624 li
306.443 44.168 307.055 43.544 307.835 42.752 cv
308.603 41.972 309.095 41.468 309.299 41.24 cv
309.683 40.82 309.947 40.46 310.091 40.16 cv
310.235 39.872 310.319 39.572 310.319 39.284 cv
310.319 38.828 310.151 38.444 309.827 38.156 cv
309.503 37.868 309.083 37.712 308.555 37.712 cv
308.183 37.712 307.787 37.784 307.379 37.904 cv
306.971 38.036 306.527 38.228 306.059 38.492 cv
306.059 37.292 li
306.539 37.1 306.983 36.956 307.391 36.86 cv
307.799 36.764 308.183 36.716 308.531 36.716 cv
309.431 36.716 310.151 36.944 310.691 37.4 cv
311.231 37.856 311.507 38.456 311.507 39.212 cv
311.507 39.572 311.435 39.92 311.303 40.232 cv
311.171 40.556 310.931 40.94 310.571 41.372 cv
310.475 41.492 310.163 41.816 309.635 42.356 cv
309.107 42.896 308.375 43.652 307.427 44.624 cv
307.427 44.624 li
cp
ef
316.619 36.716 mo
317.591 36.716 318.335 37.112 318.863 37.88 cv
319.379 38.66 319.643 39.788 319.643 41.252 cv
319.643 42.728 319.379 43.856 318.863 44.624 cv
318.335 45.392 317.591 45.776 316.619 45.776 cv
315.635 45.776 314.879 45.392 314.363 44.624 cv
313.847 43.856 313.595 42.728 313.595 41.252 cv
313.595 39.788 313.847 38.66 314.363 37.88 cv
314.879 37.112 315.635 36.716 316.619 36.716 cv
316.619 36.716 li
cp
316.619 37.652 mo
316.007 37.652 315.551 37.952 315.239 38.552 cv
314.927 39.152 314.783 40.052 314.783 41.252 cv
314.783 42.452 314.927 43.352 315.239 43.952 cv
315.551 44.552 316.007 44.852 316.619 44.852 cv
317.231 44.852 317.687 44.552 317.999 43.952 cv
318.299 43.352 318.455 42.452 318.455 41.252 cv
318.455 40.052 318.299 39.152 317.999 38.552 cv
317.687 37.952 317.231 37.652 316.619 37.652 cv
ef
324.299 36.716 mo
325.271 36.716 326.015 37.112 326.543 37.88 cv
327.059 38.66 327.323 39.788 327.323 41.252 cv
327.323 42.728 327.059 43.856 326.543 44.624 cv
326.015 45.392 325.271 45.776 324.299 45.776 cv
323.315 45.776 322.559 45.392 322.043 44.624 cv
321.527 43.856 321.275 42.728 321.275 41.252 cv
321.275 39.788 321.527 38.66 322.043 37.88 cv
322.559 37.112 323.315 36.716 324.299 36.716 cv
324.299 36.716 li
cp
324.299 37.652 mo
323.687 37.652 323.231 37.952 322.919 38.552 cv
322.607 39.152 322.463 40.052 322.463 41.252 cv
322.463 42.452 322.607 43.352 322.919 43.952 cv
323.231 44.552 323.687 44.852 324.299 44.852 cv
324.911 44.852 325.367 44.552 325.679 43.952 cv
325.979 43.352 326.135 42.452 326.135 41.252 cv
326.135 40.052 325.979 39.152 325.679 38.552 cv
325.367 37.952 324.911 37.652 324.299 37.652 cv
ef
332.073 12.4171 mo
336.073 12.4171 li
f
332.073 12.4171 mo
336.073 12.4171 li
@
569.858 12.4171 mo
565.858 12.4171 li
f
569.858 12.4171 mo
565.858 12.4171 li
@
307.427 14.624 mo
311.555 14.624 li
311.555 15.62 li
305.999 15.62 li
305.999 14.624 li
306.443 14.168 307.055 13.544 307.835 12.752 cv
308.603 11.972 309.095 11.468 309.299 11.24 cv
309.683 10.82 309.947 10.46 310.091 10.16 cv
310.235 9.87201 310.319 9.57202 310.319 9.284 cv
310.319 8.828 310.151 8.44397 309.827 8.15601 cv
309.503 7.86798 309.083 7.71198 308.555 7.71198 cv
308.183 7.71198 307.787 7.784 307.379 7.90399 cv
306.971 8.03601 306.527 8.22803 306.059 8.492 cv
306.059 7.29199 li
306.539 7.09998 306.983 6.95599 307.391 6.85999 cv
307.799 6.76398 308.183 6.716 308.531 6.716 cv
309.431 6.716 310.151 6.94397 310.691 7.40002 cv
311.231 7.85602 311.507 8.45599 311.507 9.21198 cv
311.507 9.57202 311.435 9.91998 311.303 10.232 cv
311.171 10.556 310.931 10.94 310.571 11.372 cv
310.475 11.492 310.163 11.816 309.635 12.356 cv
309.107 12.896 308.375 13.652 307.427 14.624 cv
307.427 14.624 li
cp
ef
314.099 6.87201 mo
318.743 6.87201 li
318.743 7.86798 li
315.179 7.86798 li
315.179 10.016 li
315.347 9.95599 315.527 9.90802 315.695 9.88397 cv
315.863 9.85999 316.043 9.836 316.211 9.836 cv
317.183 9.836 317.951 10.112 318.527 10.64 cv
319.103 11.18 319.391 11.9 319.391 12.812 cv
319.391 13.76 319.091 14.492 318.503 15.008 cv
317.915 15.524 317.087 15.776 316.031 15.776 cv
315.659 15.776 315.287 15.74 314.903 15.692 cv
314.519 15.632 314.135 15.548 313.727 15.416 cv
313.727 14.228 li
314.075 14.42 314.435 14.564 314.819 14.66 cv
315.191 14.756 315.587 14.792 316.007 14.792 cv
316.679 14.792 317.219 14.624 317.615 14.264 cv
317.999 13.904 318.203 13.424 318.203 12.812 cv
318.203 12.212 317.999 11.732 317.615 11.372 cv
317.219 11.012 316.679 10.832 316.007 10.832 cv
315.695 10.832 315.371 10.868 315.059 10.94 cv
314.747 11.012 314.423 11.12 314.099 11.264 cv
314.099 6.87201 li
314.099 6.87201 li
cp
ef
324.299 6.716 mo
325.271 6.716 326.015 7.112 326.543 7.88 cv
327.059 8.66003 327.323 9.78802 327.323 11.252 cv
327.323 12.728 327.059 13.856 326.543 14.624 cv
326.015 15.392 325.271 15.776 324.299 15.776 cv
323.315 15.776 322.559 15.392 322.043 14.624 cv
321.527 13.856 321.275 12.728 321.275 11.252 cv
321.275 9.78802 321.527 8.66003 322.043 7.88 cv
322.559 7.112 323.315 6.716 324.299 6.716 cv
324.299 6.716 li
cp
324.299 7.65198 mo
323.687 7.65198 323.231 7.95203 322.919 8.552 cv
322.607 9.15198 322.463 10.052 322.463 11.252 cv
322.463 12.452 322.607 13.352 322.919 13.952 cv
323.231 14.552 323.687 14.852 324.299 14.852 cv
324.911 14.852 325.367 14.552 325.679 13.952 cv
325.979 13.352 326.135 12.452 326.135 11.252 cv
326.135 10.052 325.979 9.15198 325.679 8.552 cv
325.367 7.95203 324.911 7.65198 324.299 7.65198 cv
ef
2 lw
0 lj
[1 3 ] 0 dsh
345.033 24.1006 mo
373.833 24.1006 li
373.833 14.0206 li
345.033 14.0206 li
345.033 24.1006 li
345.033 24.1006 li
cp
0 .993988 1 0 cmyk
@
392.987 13.868 mo
392.987 15.2504 li
392.439 14.9912 391.935 14.804 391.46 14.6744 cv
390.971 14.5592 390.51 14.4872 390.078 14.4872 cv
389.3 14.4872 388.695 14.6456 388.278 14.9336 cv
387.86 15.236 387.659 15.668 387.659 16.2152 cv
387.659 16.676 387.788 17.036 388.076 17.2664 cv
388.35 17.5112 388.883 17.6984 389.66 17.8424 cv
390.524 18.0152 li
391.575 18.2168 392.353 18.5768 392.857 19.0808 cv
393.361 19.5992 393.62 20.276 393.62 21.1256 cv
393.62 22.148 393.275 22.9112 392.598 23.4296 cv
391.907 23.948 390.913 24.2072 389.603 24.2072 cv
389.099 24.2072 388.566 24.1496 388.004 24.0488 cv
387.443 23.948 386.867 23.7896 386.276 23.5592 cv
386.276 22.0904 li
386.852 22.4216 387.414 22.6664 387.961 22.8248 cv
388.508 22.9976 389.055 23.0696 389.603 23.0696 cv
390.409 23.0696 391.028 22.9112 391.475 22.5944 cv
391.907 22.2776 392.137 21.8312 392.137 21.2264 cv
392.137 20.708 391.979 20.3048 391.662 20.0168 cv
391.345 19.7288 390.827 19.5128 390.107 19.3688 cv
389.243 19.196 li
388.177 18.9944 387.414 18.6632 386.939 18.2024 cv
386.463 17.756 386.233 17.1368 386.233 16.3304 cv
386.233 15.4088 386.55 14.6744 387.212 14.1416 cv
387.86 13.6088 388.767 13.3352 389.919 13.3352 cv
390.409 13.3352 390.899 13.3784 391.417 13.4648 cv
391.921 13.5512 392.439 13.6952 392.987 13.868 cv
392.987 13.868 li
cp
0 0 0 1 cmyk
ef
401.891 17.6552 mo
402.207 17.0792 402.596 16.6616 403.043 16.3736 cv
403.489 16.1 404.022 15.956 404.641 15.956 cv
405.447 15.956 406.081 16.244 406.527 16.82 cv
406.974 17.396 407.204 18.2168 407.204 19.268 cv
407.204 24.02 li
405.908 24.02 li
405.908 19.3112 li
405.908 18.5624 405.764 18.0008 405.505 17.6264 cv
405.231 17.2664 404.828 17.0792 404.281 17.0792 cv
403.604 17.0792 403.071 17.3096 402.683 17.756 cv
402.294 18.2024 402.107 18.8072 402.107 19.5704 cv
402.107 24.02 li
400.811 24.02 li
400.811 19.3112 li
400.811 18.5624 400.667 18.0008 400.407 17.6264 cv
400.134 17.2664 399.716 17.0792 399.169 17.0792 cv
398.507 17.0792 397.974 17.3096 397.585 17.756 cv
397.196 18.2024 397.009 18.8072 397.009 19.5704 cv
397.009 24.02 li
395.713 24.02 li
395.713 16.1432 li
397.009 16.1432 li
397.009 17.3672 li
397.297 16.892 397.657 16.532 398.075 16.3016 cv
398.478 16.0712 398.967 15.956 399.543 15.956 cv
400.119 15.956 400.595 16.1 400.998 16.388 cv
401.401 16.676 401.689 17.108 401.891 17.6552 cv
401.891 17.6552 li
cp
ef
412.969 15.956 mo
414.092 15.956 414.971 16.3304 415.619 17.0504 cv
416.252 17.7848 416.583 18.7928 416.583 20.0888 cv
416.583 21.3848 416.252 22.3928 415.619 23.1128 cv
414.971 23.8472 414.092 24.2072 412.969 24.2072 cv
411.831 24.2072 410.939 23.8472 410.305 23.1128 cv
409.671 22.3928 409.355 21.3848 409.355 20.0888 cv
409.355 18.7928 409.671 17.7848 410.305 17.0504 cv
410.939 16.3304 411.831 15.956 412.969 15.956 cv
412.969 15.956 li
cp
412.969 17.0504 mo
412.278 17.0504 411.731 17.324 411.327 17.8712 cv
410.924 18.4184 410.723 19.1528 410.723 20.0888 cv
410.723 21.0392 410.91 21.7736 411.313 22.3208 cv
411.716 22.868 412.263 23.1272 412.969 23.1272 cv
413.66 23.1272 414.207 22.868 414.611 22.3208 cv
415.014 21.7736 415.215 21.0392 415.215 20.0888 cv
415.215 19.1672 415.014 18.4184 414.611 17.8712 cv
414.207 17.324 413.66 17.0504 412.969 17.0504 cv
ef
421.609 15.956 mo
422.732 15.956 423.611 16.3304 424.259 17.0504 cv
424.892 17.7848 425.223 18.7928 425.223 20.0888 cv
425.223 21.3848 424.892 22.3928 424.259 23.1128 cv
423.611 23.8472 422.732 24.2072 421.609 24.2072 cv
420.471 24.2072 419.579 23.8472 418.945 23.1128 cv
418.311 22.3928 417.995 21.3848 417.995 20.0888 cv
417.995 18.7928 418.311 17.7848 418.945 17.0504 cv
419.579 16.3304 420.471 15.956 421.609 15.956 cv
421.609 15.956 li
cp
421.609 17.0504 mo
420.918 17.0504 420.371 17.324 419.967 17.8712 cv
419.564 18.4184 419.363 19.1528 419.363 20.0888 cv
419.363 21.0392 419.55 21.7736 419.953 22.3208 cv
420.356 22.868 420.903 23.1272 421.609 23.1272 cv
422.3 23.1272 422.847 22.868 423.251 22.3208 cv
423.654 21.7736 423.855 21.0392 423.855 20.0888 cv
423.855 19.1672 423.654 18.4184 423.251 17.8712 cv
422.847 17.324 422.3 17.0504 421.609 17.0504 cv
ef
428.718 13.9112 mo
428.718 16.1432 li
431.382 16.1432 li
431.382 17.1512 li
428.718 17.1512 li
428.718 21.428 li
428.718 22.076 428.804 22.4936 428.977 22.6664 cv
429.15 22.8536 429.51 22.94 430.057 22.94 cv
431.382 22.94 li
431.382 24.02 li
430.057 24.02 li
429.049 24.02 428.358 23.8328 427.983 23.4584 cv
427.609 23.084 427.422 22.4072 427.422 21.428 cv
427.422 17.1512 li
426.471 17.1512 li
426.471 16.1432 li
427.422 16.1432 li
427.422 13.9112 li
428.718 13.9112 li
428.718 13.9112 li
cp
ef
439.508 19.268 mo
439.508 24.02 li
438.212 24.02 li
438.212 19.3112 li
438.212 18.5624 438.054 18.0152 437.766 17.6408 cv
437.478 17.2664 437.046 17.0792 436.47 17.0792 cv
435.764 17.0792 435.217 17.3096 434.814 17.756 cv
434.411 18.2024 434.209 18.8072 434.209 19.5704 cv
434.209 24.02 li
432.913 24.02 li
432.913 13.076 li
434.209 13.076 li
434.209 17.3672 li
434.511 16.9064 434.871 16.5464 435.303 16.316 cv
435.721 16.0856 436.211 15.956 436.758 15.956 cv
437.651 15.956 438.342 16.244 438.803 16.8056 cv
439.263 17.3672 439.508 18.188 439.508 19.268 cv
439.508 19.268 li
cp
ef
1 lw
[] 0 dsh
345.033 44.8475 mo
373.833 44.8475 li
373.833 34.7675 li
345.033 34.7675 li
345.033 44.8475 li
345.033 44.8475 li
cp
.883665 .769161 0 0 cmyk
@
386.694 34.4024 mo
392.727 34.4024 li
392.727 35.5976 li
388.119 35.5976 li
388.119 38.6936 li
392.281 38.6936 li
392.281 39.8888 li
388.119 39.8888 li
388.119 44.9 li
386.694 44.9 li
386.694 34.4024 li
386.694 34.4024 li
cp
0 0 0 1 cmyk
ef
400.479 40.2632 mo
400.465 39.5576 400.263 38.996 399.889 38.564 cv
399.5 38.1464 398.982 37.9304 398.348 37.9304 cv
397.628 37.9304 397.052 38.1464 396.62 38.5496 cv
396.188 38.9528 395.929 39.5288 395.871 40.2632 cv
400.479 40.2632 li
400.479 40.2632 li
cp
401.775 40.6376 mo
401.775 41.2712 li
395.828 41.2712 li
395.886 42.164 396.145 42.8552 396.635 43.316 cv
397.11 43.7768 397.772 44.0072 398.636 44.0072 cv
399.126 44.0072 399.615 43.9496 400.076 43.8344 cv
400.537 43.7192 401.012 43.532 401.473 43.2728 cv
401.473 44.4968 li
401.012 44.6984 400.537 44.8568 400.047 44.9432 cv
399.558 45.0296 399.054 45.0872 398.564 45.0872 cv
397.297 45.0872 396.303 44.7272 395.569 44.0072 cv
394.835 43.2872 394.475 42.2936 394.475 41.0408 cv
394.475 39.7592 394.82 38.7368 395.511 37.9736 cv
396.203 37.2248 397.153 36.836 398.334 36.836 cv
399.399 36.836 400.235 37.1816 400.854 37.8584 cv
401.459 38.5496 401.775 39.4712 401.775 40.6376 cv
ef
410.079 40.4072 mo
410.079 44.9 li
408.783 44.9 li
408.783 43.7048 li
408.481 44.1944 408.107 44.54 407.675 44.756 cv
407.243 44.972 406.695 45.0872 406.062 45.0872 cv
405.255 45.0872 404.607 44.8712 404.132 44.4248 cv
403.657 43.9784 403.427 43.3736 403.427 42.6104 cv
403.427 41.732 403.715 41.0696 404.319 40.6088 cv
404.91 40.1624 405.788 39.932 406.969 39.932 cv
408.783 39.932 li
408.783 39.8024 li
408.783 39.212 408.582 38.7512 408.193 38.42 cv
407.804 38.1032 407.257 37.9304 406.551 37.9304 cv
406.091 37.9304 405.659 37.988 405.227 38.1032 cv
404.795 38.2184 404.391 38.3768 404.003 38.5784 cv
404.003 37.3832 li
404.463 37.2104 404.924 37.0664 405.371 36.98 cv
405.817 36.8936 406.249 36.836 406.681 36.836 cv
407.819 36.836 408.668 37.1384 409.23 37.7288 cv
409.791 38.3192 410.079 39.212 410.079 40.4072 cv
410.079 40.4072 li
cp
407.502 40.94 mo
406.451 40.94 405.731 41.0696 405.327 41.3 cv
404.924 41.5448 404.723 41.948 404.723 42.524 cv
404.723 42.9848 404.867 43.3592 405.169 43.6184 cv
405.471 43.892 405.889 44.0216 406.407 44.0216 cv
407.127 44.0216 407.703 43.7768 408.135 43.2584 cv
408.567 42.7544 408.783 42.0776 408.783 41.228 cv
408.783 40.94 li
407.502 40.94 li
ef
413.838 34.7912 mo
413.838 37.0232 li
416.502 37.0232 li
416.502 38.0312 li
413.838 38.0312 li
413.838 42.308 li
413.838 42.956 413.924 43.3736 414.097 43.5464 cv
414.27 43.7336 414.63 43.82 415.177 43.82 cv
416.502 43.82 li
416.502 44.9 li
415.177 44.9 li
414.169 44.9 413.478 44.7128 413.103 44.3384 cv
412.729 43.964 412.542 43.2872 412.542 42.308 cv
412.542 38.0312 li
411.591 38.0312 li
411.591 37.0232 li
412.542 37.0232 li
412.542 34.7912 li
413.838 34.7912 li
413.838 34.7912 li
cp
ef
418.187 41.7896 mo
418.187 37.0232 li
419.483 37.0232 li
419.483 41.7464 li
419.483 42.4952 419.627 43.0424 419.915 43.4168 cv
420.203 43.7912 420.635 43.9784 421.225 43.9784 cv
421.916 43.9784 422.478 43.7624 422.881 43.316 cv
423.284 42.8696 423.486 42.2648 423.486 41.4872 cv
423.486 37.0232 li
424.782 37.0232 li
424.782 44.9 li
423.486 44.9 li
423.486 43.6904 li
423.169 44.18 422.795 44.5256 422.391 44.756 cv
421.974 44.972 421.499 45.0872 420.951 45.0872 cv
420.044 45.0872 419.353 44.8136 418.892 44.252 cv
418.417 43.7048 418.187 42.884 418.187 41.7896 cv
418.187 41.7896 li
cp
ef
432.001 38.2328 mo
431.857 38.1464 431.699 38.0888 431.526 38.0456 cv
431.353 38.0168 431.166 37.988 430.964 37.988 cv
430.23 37.988 429.668 38.2328 429.279 38.708 cv
428.876 39.1832 428.689 39.86 428.689 40.7528 cv
428.689 44.9 li
427.393 44.9 li
427.393 37.0232 li
428.689 37.0232 li
428.689 38.2472 li
428.948 37.772 429.308 37.412 429.74 37.1816 cv
430.172 36.9512 430.705 36.836 431.339 36.836 cv
431.425 36.836 431.526 36.8504 431.641 36.8504 cv
431.742 36.8648 431.857 36.8792 432.001 36.908 cv
432.001 38.2328 li
432.001 38.2328 li
cp
ef
438.639 40.2632 mo
438.625 39.5576 438.423 38.996 438.049 38.564 cv
437.66 38.1464 437.142 37.9304 436.508 37.9304 cv
435.788 37.9304 435.212 38.1464 434.78 38.5496 cv
434.348 38.9528 434.089 39.5288 434.031 40.2632 cv
438.639 40.2632 li
438.639 40.2632 li
cp
439.935 40.6376 mo
439.935 41.2712 li
433.988 41.2712 li
434.046 42.164 434.305 42.8552 434.795 43.316 cv
435.27 43.7768 435.932 44.0072 436.796 44.0072 cv
437.286 44.0072 437.775 43.9496 438.236 43.8344 cv
438.697 43.7192 439.172 43.532 439.633 43.2728 cv
439.633 44.4968 li
439.172 44.6984 438.697 44.8568 438.207 44.9432 cv
437.718 45.0296 437.214 45.0872 436.724 45.0872 cv
435.457 45.0872 434.463 44.7272 433.729 44.0072 cv
432.995 43.2872 432.635 42.2936 432.635 41.0408 cv
432.635 39.7592 432.98 38.7368 433.671 37.9736 cv
434.363 37.2248 435.313 36.836 436.494 36.836 cv
437.559 36.836 438.395 37.1816 439.014 37.8584 cv
439.619 38.5496 439.935 39.4712 439.935 40.6376 cv
ef
442.854 40.9688 mo
442.854 41.9192 443.041 42.668 443.43 43.2152 cv
443.819 43.7624 444.366 44.0216 445.057 44.0216 cv
445.734 44.0216 446.267 43.7624 446.67 43.2152 cv
447.059 42.668 447.26 41.9192 447.26 40.9688 cv
447.26 40.0184 447.059 39.284 446.67 38.7368 cv
446.267 38.1896 445.734 37.916 445.057 37.916 cv
444.366 37.916 443.819 38.1896 443.43 38.7368 cv
443.041 39.284 442.854 40.0184 442.854 40.9688 cv
442.854 40.9688 li
cp
447.26 38.2184 mo
447.26 33.956 li
448.556 33.956 li
448.556 44.9 li
447.26 44.9 li
447.26 43.7192 li
446.987 44.1944 446.641 44.54 446.223 44.756 cv
445.806 44.972 445.316 45.0872 444.74 45.0872 cv
443.79 45.0872 443.012 44.7128 442.407 43.964 cv
441.803 43.2152 441.515 42.2072 441.515 40.9688 cv
441.515 39.7304 441.803 38.7368 442.407 37.9736 cv
443.012 37.2248 443.79 36.836 444.74 36.836 cv
445.316 36.836 445.806 36.9512 446.223 37.1816 cv
446.641 37.412 446.987 37.7576 447.26 38.2184 cv
ef
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ArialMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 67 /C putdup 85 /U putdup 100 /d putdup 101 /e putdup 103 /g putdup 104 /h putdup 105 /i putdup 110 /n putdup 111 /o putdup 116 /t putdup 117 /u putdup 119 /w putdef/FontBBox {-665 -325 2000 1006} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings14 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/space <1C60D8A8C9B854D00D> |-/C <1C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210AAD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B434C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047CDFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D314851DE59> |-/U <1C60D8A8C9B6079F6D3F1E4545C3E1CC9D8EF54571065F01BE5A50957BD2D8AD04D30C23B37CA98B969ECB5CA0D9A7C563636CB33377BB3DEB53D45DD0F3E333CD69EA3B53D63C91B303CFDF29F59C20776D4DC576C9C080B76AB60A21673EFC1F645BF33D33929C60> |-/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37295284C077711C162623860AACA404F650F8D516970257> |-/g <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF575C72F67F4BEBB98F8AFA57505EC9> |-/h <1C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DFA8> |-/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |-/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |-/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |-/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |-/u <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793990906DA8D7F8ACFF6D70790F06B02> |-/w <1C60D8A8C9B6079F623B1BE11B16961396A063624588AB070AF82F2F6FEA646F6999B73C9332DE350CB17016778F548397735D109B5E72AA9A92DCB1D7264371419D7043A117419C0FAF4C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YYWLEC+ArialMT /ArialMT findfont ct_VMDictPut/YYWLEC+ArialMT*1 [32{/.notdef}rp /space 34{/.notdef}rp /C 17{/.notdef}rp /U 14{/.notdef}rp /d /e /.notdef /g /h /i 4{/.notdef}rp /n /o 4{/.notdef}rp /t /u /.notdef /w 136{/.notdef}rp]YYWLEC+ArialMT nfYYWLEC+ArialMT*1 [7.18345e-10 -16 -16 -7.18345e-10 0 0 ]msf13.7305 147.093 mo(Unweighted Count)[-11.5547 -8.89844 -11.5547 -8.89844 -3.55469 -8.89844 -8.89844 -4.44531 -8.89844 -8.89844 -4.44531 -11.5547 -8.89844 -8.89844 -8.89844 0 ]ysh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/YYWLEC+ArialMT*1 uf/YYWLEC+ArialMT uf/ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 19.2.1%%For: (Brooke Simmons) ()%%Title: (dM_histogram_unweighted_x10a_Simard.eps)%%CreationDate: 7/24/16 7:23 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&GCT0CdjY-C!PSZ5GDtc3U%a4*BF/C+iWMS,YkRSbEBa7sEQ9u7>j$R-pY+L;YiH\HBJc.qBdB`:]@npYe)aAKoln7i2292F%0cUQ<,:%!->0GAA]p71<"iJ_!'o5;rYc]VpMhFD?1*27kUYnSh7g1+_7E%W6.M+Onj)JEc7$>AG)54nI@"'ue0BhN#_5p,uG+2^\%=3NR2bl'>")JasI:bj`ukkTW!+(KIX(sPIP'N`HuW1%.lK6aRN.VS5$lhQbdb:@*QiI5c-Vi*';1"[?G5p$CT#,luo5FmiWpPU3>%,`I:N'L!$#;.DXkcjJ,Bp`2PYp+$O?Uda`qJ->p8A4s)V],+BGT),0iOs8p@1):;;,@hcVM+$Bd(_mNZYs9]O$_\qu21^!''LZ1.%:Z>n-&gF<"3$&0\$Q'n&:&8M6h(aQ<FLD$cZ7TQelc"CB!V?u>ome\2M+4HUq@!J/LOG:U/0'TRWA&j^\5%pk%RIJd`Hj`#dAR_2%ACq\V#3-<j.=>cD!g]N`hAG>^7)I=o)%9!VBImtq!gG>P%`Vt/GU+77"HD?g#7.1NnOS=j;aFnM(6d7`+GF."s-hC98JoYC?q`Ad%M_`MZ2>rkr*<FlQ5B0895GsppEXI/YJrep$O(t^M4U:ZUpP\VDl5K;%5kr84g&pJmh>ooKc1d=#$"Jq3!+b"rn.,ss&4$[lqcU`7%-,?kBJHkkHhu1;T0mKc!ZV(Fq\6?OP?dm3lWf)]'#"U!&#pWhHg_c\n0k3%,)6!mVLDTG<`j[M7J!)@ob^;o:9@,C5at(@_/B@]A%VLT_GEJ+o6Lk4Rd(^AOqOS(Xj"Y<3K0V\LY1E?ko+/OoNr.35i!&*<G5TgQTT8Mr_&kDtrOT839+\L&obS\^W4$Wl!?W96k'9,`7%=)6ba[jPR.0*bE(-WJ:q#$VLtLH7@YfF>V]$H5RZLOU8Ls6SsO_$V+u%)U=]"FeANn2$EkSd'i:D_MGiK0`TX%-#]E&\a7^MF:jS%8-JpL6t!,f"P/GuMFA"e4:^\qj00"=&AB0G_clRiX9HAT:KT-6K=,_[pgu,`96*$pVc\VK`F:(oh_#[QH*N1__(E[o`U1JYE@H:!%.h@7%#sViM8/(oS[3/0`V76q3"@$<88.kcQFE<tfmm<K$-i=,sJtESejqEIX.>"1RDYP#3Keu)cR%"pWX9Ij?T<M(q#bQ,8"'^e2%N4FbT"@)FGQu^u.gihI2N#f?slQ`P:rWd4)qVW`SKR48/NQZ:%_8!2iUlXhMbSC%.U^qpk?][>(s6p]2*'SqGYSO#FIc=\P;M+_%%nO&8*%)A0Mo#(,<DBJ"%XG-JinHDjO>7XqugP,0,aBX5R)VdPZ#?&T6-DV-cNN'poO?WFGCLR$noO4?LGMspN"0"(Y3Q^F'%d"bN%J>Ja!@89i_BnJ"XP(I7r)])bO@_UmR@BO+QQuB4j>`Wj2iO6X-*-M`2^Q6S.5MU9A19i[r50(=P&;oZnQ="(-j*(o4DR9`qMrU!D%qcLEi\JO<;^+ID;2q!Cdk-uu7")JRi8bfa0%Bcg<HTA_U/q,Sfi06*h,k3hkO.pTMn/)+W'/ob9r5J[Eeo2Hj&cUd>d4"uGr5J\F%lpMGDEO]NF^J"iu#_2BZC_m$dro/D3CHdfO#_2BZ637*%ro/DQrt"F:fQZfupFH6frPF$bI8hU2$5`;E[TJLN_;AoQ(<rUm1&-`T%_Yk67!BAH89FO%AZgSuaMo,Pk<N)H;(,IZN-Q#0hd(`6_6\iFe15%.c>7SB@J%6!a5>N"j.Jm_EMWVejr5?q6>,WbcL,&oU;%`R>%j5@0$?P#0nAh]RrA`/(-46@H7NH*l8iHP'(0d"IEXl(=A1dK9q%$G6+X]U6pO<L;m1f$QX<3DUF7uQ<?!e;(u3E(SWR2C=@UC@.A%Xi==K$8FuR*-!mRI1*8aj*HXHMr[S@(Ln$UK"'b/D,_n.[0jBr_oQhLiu4d1Et"A>\;P0aLLE7e\'QcZ4[kCWO=Rh0*(9_5KVO5p%*4H0\.)PK\[hm1).lG-F\oIW-&<!&".Z3N]csSkY)tXB:c!o`ZZH,Uon3?YApl-OV*sd\a)Y4s!6VsOHr'*\+gTh[BEsO:fA,dUu%$V(hj2pOa&HOQ0o3GCcBL1H=.:YZ."+f%@\r.[[S8E`u,AF;$e'Sn%?f7mOo8rB.F;%+-:*u0bP8.j?Fgij6OL=IRiLJXI/I)XUo%[tPEL0aPG2Yc&s/g&tRAG\aO(gr8;Wb[$p]Lq97T2tI&BXI30O@1UChD[O.A8.O'"5d!Pc=:W2fL34A(]:^e\r<ms'&;K!$.$i$a%f3]Al8;lOXP1NB`X6bZ$g4nO[<_&rq7VK>WA5aa<MNM/#7_&LJ/@5n&A5W7!nJ`lsg54?\7D<WoBF^`Fj%?F8(ssls$k]rYlVt.7%(:\t,.;c+be"BR4gfE4e]Q@,0HV^p.&Pg4l[(V"PUC>]aE%XH6$PM8>ra2H!YiVshPfPNnB%pU!T;tK_Ou7E+6DK4)5</MDG"4=g%42Zm.$>g"WC#E/#8#\2JKjFd)1rhtBb4mNN$Y?<QrQW2Kp'<(gYu'FBgmm#g&EY!6T*P0hVCEO@(S#$?n,_@8>\'[O_.bQgf0P]Q%1#.6q1:0.dNt:;<Z1W-!$GVRF/qORFScWYR88SR-U0,u7D&.@9jE\u6`3>p)3>d"*">]<P+66U_H]?J`'"[*c:IG'X?,ToMgb8"u%)4p7I$TBG(0/re"YX9U-UF:%<'c$HJe>]N+,9&M,`RZM7#A5uNKiW15LA_>Q42bpO,-msR3F1_.2.#TZ:qrY`'X]nNoInDfYh2j=%dt[mXg*)g):pN868i_^aNa[g>"jD+tj`.Q$@[uFTaPt.l/m.3-.YN?K4!]bpWC.nWfaK1N;6_f6S&02r4"Q=#DJ&"m1q'<Uo^fFu%/VHUt2jXdg!0'rM3``NB?t%"X.>7ZEg(eQR/rFCtjZRiJ>63!e>"IT=TZCRTO%irUnkpPXo(JNN%e'ThdN[t)NijA#/_7uE*[sfm%*,to8oHo0P_46kh#/%sRYf*mA0>`u)$?TZHph^$BH7R0JaGMMpf('CLR(R#\n9tL\V8<0830M[Q69#Z2_#M7p=;09Equ@3cp3/3<%hYrG;IL4!18,n?sd3pX-qA\.%3B5>!1)./NL"[D:gq!p5HaIeZ6$'=SSpA_5EREZg1_9F4L2B$?Ir$W-hnh,qH5:.1.S^=qT2kBZ%\GsC4P$mF$/)alai$-LX&;r%g_T@/efSe\EJ/1$jo;Epdk@jce)!bY#?Si]GSdW4XKeASqE.fr8Z#L"tIYi+[YdHiMmM9S0!@HRY%;Q*H442kG?i*\,&gL75q`4lHO"l9Nh^q9_Q0(pRKBSd+,8?<DJ9c4XoA'9N!CI@+<`3VT[59^Jsj"#SJiq[^>[:4V2:LuP)$0lEP%2(fYp@jPB%7@;1N#H0WM)o3K2\2dbgW6O;;4H`3-GYbNa7;K-JLZ&X?/6A204%4.F4I)+MNW5W[`PZ/&EkR>,%;IYSgL.E)Q=IGe%K"pDJ$b-n\j]5k0b\Flg_.EOg<77LbqmGD-&<-KFqpg_`:7"1dg),nGJ!e&Z1gJZ&B?!l=!@:s"L&o9mgk["IkOX8>0Gs2$[/Y,)%SW@K7SZ?AlGPF*$\B4e;o++;hB!bomcfr4C"/-3RIt3'138cW>e)7.oX0h(jRX]I;_,#'AWMn+,YHpXT%K7*F]>A\lU:MkhmKtma%O/q\ge\+f0i8=-Ka+L!+RdlG)")6IR!rVb1G;M+2<,Ce2>Qsd2p[^DYo</B-jM6*$#B)-tbOKN]\AY%?BE2o9+0F,o0[lZ9cG*in%@iDL;qf*R"FM?jO2l=@gR=`2fSI`.B"93$thes=[j^+n(rV_LXqA4MSA&CSqmdH#NJ("DIF@jC=MnsSDT>MaUK`QGD@c-P:/L5AL%qTmScs#le](?d91Y3BUR#;>RbIEtufEt=c1ZNjc1035\FrOikn@8>2@q/d&phl[2/g7Q3PO^Ws'rDW3hTStGBTLjTYJc6cX"tW5/%\K;Y8qB\8E&'*/6VGKO&VXZe;n__'K!Ue@PSlqbQU63=%)uW+]%0#]E+IElSJD%[AGZJ<&+K2JtEAeeQBtf/^#H55'XS,j@+pNNd%,bbIipC*@H!oLKhAk`FnYDC0*_H3bq8p+C</qV-k?,nf`\4/ssVLsfHYc"qaWF,9UmYJhi`'AT\BO#C.63@9"Bfr+!rlKWb1LTp7%q-^r>j)DE%BE$9Y]OtmocuOEAg2Cp($T_^D"GM)-"&`'Oj_+h,a!?UlG3]IL"m+"T4n<Y_Gbr.QM?*^Ja1ZA,1OH_3c^Hc)"X3tj%kSaQNTHCCghWtJgn0?qb0#,46f_m$5=HI>u!U)su!':hm0Ebhc3533'h>u-dl1_Y/["!WbQMB(UC:kX>d6@dGG>O>$n?KL<^7]r[%7RJ:>p4L0ka,2S_O89)snA=(!/)i:5St>BT7OesY"V_BHJ*H&*D59KDX?6_3gMd%s(p<"L5Q31,4Nq]L!3C!eIXoW9L;u/&M=hhZ%4X_d7X8TW8r*C6\RIP#_)nS@PJW]d^4Z:lH^YjmrkWi?n!98Ut?N,K4Hl_*P\oqh?/'\A.D8_.d:%XYHHi37nrOlYU_X$u2@JL^&%?`cb)EP:E%)Y:dc^_kI?*o+XI9QH*n@#k:!<hspm3ZukpFq$>-?X.Y_co!;/MN/p-!%M(\!'LF)pR`0Vit5>S5[r]lVA8+n,,,OS%25>AjM&\/FoHMA9_/<`+c@K0Unc8/TJ]j/Hpt9Z`Es"*4TF#^$11lsQG%,9k<c]=j691)s>_\-oRl^B]DLl5^od-Ks&1:[JN\869%n2pY;EUiKGi;nZ4>B"O4!OEm[8X884=f:qb!>+mYktm-8[RLOe&j=YeSgO1$#o*>&_1AJ?l#n5#(-QBIBl#W(>Q4]0<)]R/c2r(J%(pp9MTC-B$,d%nu\<YUsRLIb(K#uPZnGpI?a.-gLnp7\kX>hh`],5blJ>q2Z^L%%@'E'U3%$!8##7U=th1sJCIiL"QUW;;29c%2p%jJn<]\q(Q4i<pK0#2herE32j2)"^J@^ho)75Q1[JWo2&RGk<(fJ2Gi9D]bcp$m*/?%B'lSbepd5NPPm4r,;'@d0gd::j\F<N</N(%J?oB`2MP;18\SIGEU`'s_ne7b`lQNJnr;bbF@sS;!-$rS4Q$CCE/k&)86ghe*J4+efZ*uRm%Fc*[]S=K>O65$rS2<6AFS1b\HrB#%+7qWc73b[)^B0;31HsU]fl'2qT`bd#0U+_n/u_i(45\Ms=sP'tL:+$>kqT=Y"q[7\YU5Y$eU^p.N*KUH'\9?i"<LYL7L"n'IK0k?%]Q-]R*H5XBi,9ZUI]sfsoj`P4AW2=0'Rm*fR_m=VrPQ*K4!]*M!e(joWFIR^F.:`m38=tfE\KuZfF:JQ+KWh^_V]=amn)t6Ar0k&%Kk&Ml8u%:8eVXr1Mj@nI\q7j?Xf=`t:d'ZR:_DWSW'H&iM:rl.`FAq.W`%g,W2QJbYaVAY7nELUhU7qdW-2.#T$MIc>%9&e<FNb%%E2,S>,5#Q6TaS83Q>%a.Ci'p(Ttea6Op0;sQtq9414J7hg0b7om<:6T@g'Af25@X9Pp<$G"/+)$KDBV^:eqD]NrGMbTNo$I]g#]F%)&]Np?ou8eU)[=rp!h$A;RY/"^#D!ii>AsDN5m\]TWr<;DdY)TRJh#7C^sk:N+]PcML]]jl/^N<24=P<N'GtYP:KJ&eY/ls>Rd(*%E<PkSJ-Pf],kktXL6kF\7)dYk;F8X'0SfRF&5a0$Y(8mX(q7u5IZF&l::qccNn+q!;ke#7L0niM^h7#7rW1rSA'g#VI%P:X0G+Kh%Uet;/hsi2+g%%Zf(?Fe#'5MKir+iMO7TD^*ZGFmlRK<D1)osJ6oEW:uS0._/QeK@;C.p/'c9Rp!?Heb/fF+LHR1AsQDY3][$o>],%r\TE]^_bN>9r@M:_t?"@NEdq1f^\gV@9[XHIgqe4%Bu=+3uG&_<rHgL$Ntdi<N3G12E*iefnuC$p"W]QQF%.Ab^kY&A,A5u\=-J3%b]E"e:=5F;kb&@j7uQ4e+sN&r-a%lom_=hs!DQ>QU453(8kb<(+77VY9`mQKQgUOWX8\G3)Nm&5Dg/8$Iohj43B9cL#;DYKSPClW%oSVZN*u?MB49(@Ub5WPQl1Y!=s+=tEs7.krcDRH;mCG7sV0oO]/4'P3R,]:O*$7&,s"b\a-@1!,Xn^dR`IW9d(BOM04;<j>;)3BT%\d@[&+"(tNEg?ZOoSJW@3'u?V\q]BtS"PE*-&tgpNuk=(kBrgNL7F='7`KDT"4dM\(84EL4]EH9o0:#G5Us%Hg+srlSK[Q22\!P*%p>9c)K&-sV^f%bN*UsNl@HQPmHDF25R165?h!eF/$ptO\-m3ao>K]JN0DLfLL5iFAX!rX)(6-9^@l,6bq;U?m>TO5mb"N)1ULQU.%@a;A/5M`L*K7@V<L(3W43'9[o:j//R&YP)X<^7S],GCMP3t]Vr<&lp[7;,V`T!qcqg`FtZ`bITsKDuW)=HacJUAOn>9H#mJ&=]NW%UR2_0jF_VO)BT1,T0:sTdo``_+CdY_Wk.?0<NElJAe!@Y[b<Bnk0p_X["?<thaY+cE5e5d!E.DqnLG"TNI(Uk)g.+W_-C)HEP0ic%nT;N"$7E6/*;5g6O[U<RMR`&4U956Jgb?$8UULn#4GtDK,&I%6+=VT2^>H'e]-Hc(!c]=D'*g+$R7_H`T5tHQ:LF4">aK`R*$4eG%+<VO(p]IW&F9g"RFom2Pes&"Xjj7&%mW:P00h8_t-!nQJ`fI<4$#nV![0Wu(AM=-M(/7V7(_L.lMAMuu:d+<43"_.*"$ZG>MASI3%-l*4ZO$SEI-#+E))A+WGWUa'94I,#qrjtU[<_G>a#.+M/%ksVc\lp6GkM.BuVp+kU.nG';V*XK+Si`:\&.dns&`V\4OJ$8D_"W+2%(=FQr&=em`h7sgs.qVJ9nN8.i]Suj1eP9#dX2KWJguVqgo2VX0AG)ScF=^*LS>)g<R>S7%;na_r;5+R/NL#kCPV0G]ar._9Q@TE\%quTDG/8GMlH%*E(d[1cMC,&!/BQc\EbqI-Ae>fmo$\8PjEc=XmYu=7n4JdkgLFLefTQD1Y<^)B^=&[.8We+1q3c83*KSe2<?)!/g%cKs96SZ#m-6ZdN&>^S[#eUX0(Eq)17kE>4*ZDlJ0p_<_TC-K[`"VS-Ki>1&"mcM5<L59#!ZP0'#)a&M-XY1NgHJVec(SH#eeD7(r%=>t1=e`G[2'd0^3$sQFH406>/B5PTf`E=>SHD3Ak1p1"T*0(<Ce7q_:k%Pp]'$s^$[pg(V3$-MNaU%+*@F\E<]%D"6Gn+?o%&gFN%pl@/U!-QCsG63H''G#sd6mET$e16BDV?(EXg6A939NLPRdnq^(Gcb<8G;TMTZ(:kF7;M1Q8jtQtL9-`D"VFa>I8ArdN>1[f[_q?I%_9HX``WUZ^dN+*BcP[fEO4lIA9a/+W#BsQhciS"RqK3(i$=tND;QS-%I4Jn:cPI=@WE/O.9ELCmo.MW^.^dj/S#.J>#j[OI;u#!+%Iu-98j]Ylu4cG#9[,,0D1i>hLq</oCXb?#!Q?)"`?=u3fo95.pIA!4pKCs4JYk9j,^A_9ZI.S&SWbCX&=DJ:gAa5F`<#t:=@:8;E%#Di:q]&SR/Ns[CP4'35rG\A["Fcg^^!Gt>`)_nDdOXb.>?`2*9Pt!,SI%8YM>5U0TL\LPs#PVg>,drD92[TZf'e#MVPk5_V&#XO+%"rF?_E@keHCaG:D8cr/\d7PDqW3G*]+gp))9Rm_P`B=??X.c@dPE#tn!]/[TKG>d!gA85kGSVp6U$?#3H3]'N9@/(2HLh+n1C%*9%<p9/*DSk(6.afIgCS_Ag5YbB*X'34!pN#F9ca?b;B`4+n)$lp(PtI-'fT!Q/N@JXUd'fXl,>`2@;"\W0WA'S9Mk97#GELu#;6>gQ%E^%21:.o+@K=C`OQF=e]Y\(UN9<EIScodgbG<e+7RLMVa):<&D;-Zkq6[fkTCe\1;_TdAD!Mf$0CM7[;D0Zs#4rEHfn5=&_iJRNo%8Cu@BC(HV'DMP3dj(nILch%cnSqA&fJ);9KkBc1EC&ElMic`/S/2H?%WE<XKNp7*.Q?R"HR>+%<a1JSG2FsjtAE4c16c=]C6Hq"!%k,<lj*"u5TT:r#+ip)CrRfrM89BTBO/GpsR%?.`G6LR.V]kE)U[P#U)N<.eeF:G>-j\2#:_)Jm[XMENa3F_SI0E*(H.'Ed&W0o4H%S'#EhgW53O-AVr2&gmii@m8LGM^(cTe^`1]VLaR@/ImttKr'FAoP]'4TUB_E[$0Kt(i4EO1.roHdT>5(!059f@"L4g1g#dkKa"TT%"T/nTN.ku#n0PFn=T4Ht'+W`dM@.+@*1&lOjlA)Db#KprE1VfY":GNf..#uRC:6q1P0%+g?SBH<M?>AMQYh0&bR_OZ7tP-?8\u5m%2q*V0H5E1hC[_;ClFm.lBIc6Is8D\!JoH2#$,U74&VQoo10A&FLI1rHi?,j%:hf'k&cc8i%/ef(6pH._i/@77I$eB>CmluMp=L^r%4IkhgCn0FAh2Zq"^.+A;r-<pDAqR@X'`;+SQ.rL;"T18H5;TRBi#6u_QltbM9W[d]%DFjki6SjJ>-e#\*q7th/")hPlg->3^3LdY%gP+F)g\/OWW1i1_YNakp0AZ[Y/`p_Y"+PLP:N,2B\T,D<"7Qm5B;s"75sGr5ER;!^GTi:fF5J'`s$g<>lUbO;-;DJ6r''-K5,;H"%XP_dRZo;3)Z&j**JCfgB_U+HjbCA9if)5J1pk`+-QjHQ9L<OjSbf#1W=+W:ZDg>!;?en!=hg]KY$^6T=WmdS2gY7(O$A:A(T.H.C%Y!3=qpkcR!G$a@$m6'"e'gECt=r>$nZO-3Uh+&!lgYd&dOD2K0"HR1oY-'2SH`,^*-'b@Sg*i,Mlr,DL$bek%!i9`%[@(`h;mpMY%D[sVW3.*r[:Nnu_].;N70<S4H4n=l/-,uPKVDlbW6qMo4#BC%-MT?moAt."Ros6=.(+]&KjF5V':%-42GG4^A88hD$W4VOqI#J1[%qpE1YqIe?*_O]I:;3jSmC*M-tUmJXVcZj*,7MkMb?_6,OU4q4f@Q'd%r13ZP^YPUIi[rN>[AJ+Gfp:rX+mIZmmX+)7d$)64X>g.N%QEQ5tG(VY6:X=[HH.Y0:7fD*1@"oP!!q'4h!tGjj;\`\h=CkZ_@cGZKW:*V2^j+]"S:-c]H$uRf\+`%Qcdli&H'dO)r"mKE^P(8X%n.K>@0bC4%q3N5pcQOF;9TC5neK&J(M<ugklbc+M+($pZ.hQtK)+XW4C9Sr6nH"--MiLerr&=35S\*?Tk>)L%H(f$f2Ss#%8.]B/%rfOE]mNH"uJtZtlX+u8mgCn+SE2;W7KX9$/&[)!M+5qZ(AI20,ZV,Q#$bq@5k]IO;TBR@^/fIMR?lPr!TQt/nK)8;r#hs6t7)WU7%,bfiR6c@E\+;$8]b!_skHkJB5&a1CtcLr5(P0%I089OBMM"EI\-F*qZT#eU5qaA9?=GUErP:"H'ofH$MYKb#!GFp$"#1c!.QuY9F%L+Q:HSq`X^dAk\_7#-0S&Dd;gM0N0K$H-`[D?@&T^N?3gkL9@"phGRI`3A!4&`]4cL%l]:+,C6-k(oFb//*q0DaUVk^(R[g4`?.I%LFSdLb$]-CYHp*M/She_*0Z_Ladl(e-L]O^AKkoB)cJFe>8XH=n8G%9METZ6VOPNph3>8WDG=iB[kZtkc'G@(GoneA4t:X&_gAq3%WfLp=;fhrF1j*ut[])au3:E9Gajb5@IFE-90RqtZ.+>O*!%c@[&(A*%WrO\4HRE8\[2=hT(.q<FcKXiOlto26k!6-e1P]g5[lLl6%CsBFr2rEb>oCpe*J#q5GjVCuU5<R9[b`2@pOLb=:k;E"X::p<H^,DAaN<*OdIp*6O06R;1YaUp'gr-k5AUZ2-HKs6opZ-cSma'>"%6JgMt>/E[?@>Vbn2jWP'R]tlD!P>0Jb]k]spN,!8oPEtIcb;fho'Ys)/;&WOc15/PT3,]4gV%13/,?9bc2Q!r[G"q.+0=nDrS8B:%*%\4S?,g`pIC(<&=n919/PVf`f%U(ne(T]Udak"(pL=)kcSjAEmkeMPm=.!plgN6<7Z7QqRsd2DZMA<p[4N(Mh:N@"^mco=br?,4%>:J"6\(+es93^05\[/t5Q%l^J3=XYjkjY'YR=Fq`p0Qpgh6qb*g:aln`?+;nq!9q82t-J,r@2?]e6?F0j#rg95>N;8qr`E+Z[YJk%DYrFed^S[WknMKop>d7Qn9r>a*0GIkiOJcEm2Ui>c&8>$[%a>/CtTfsmt6a4>[9QRk#jJ!fOaMG:4&9J3W1s^_\mlI830\A>G&7/%a`!^Zhe_Y,WTKeC?Rt-m3DHp_(?]9N$bNM9NSER$]pW/gO8R"_.YhW=EmR.bSntHYX1+ff?,6/]GKm!,Dm%ors5nJcIm2XeCt3ae%PYFMhrep\t5C2mApN,_UE=Y`IX8B@Ao=9(BB%15]3;Vd=LFQ=G4h':uS#<JB:-J9tf'MXL1kM=H=0UUc$tmmme$;..HEBcJ2k'5J%]U?gbZhJqJ^%-?amm6EoqfC"Do/.oPrQd"YF(aBF^5-VcpSB6QJAl`iFZfQ4&%<>3i4`.`c)]$uhc('AqRt/9clX3r_uAH*r9:C4%G!Z.DVu#W_Jf+3")P9CFiQ0f;_2`e1VS[s0=ktsZAG7JO9Fd\H@<)\D#-8Q[K>AH34?EFl]9[LNW!paNTX0MRJRK\1$7sA[/nNj4%1DFtEG>lU`@8>YA5'te;b?(EgTcU$g%q^18R;X[0Oc]/bQj\CdJrOHP)Z5Cqd_XgrT302,>UL!3OFNU<L[K&T[SXBp2MGIBQ<f=7%=gk#@d'=+mB<GN"rZ!eL9=^QMh!s!eiK<ki$u\82BZ0#TVBW:\=#j1&qHK)*Zdk*FkDjgu'CXVKY4ka<)L%5#H%Mm=qj1tT8^3u>%B'"nfa)GpqeXp?\jmkHUT?DsuYK<9Sf^qB+)`QBt<1K]O)tC#3]8f)j-F`Lug&f9@m+.A>9m]Zm7+"C&SWtZNHLta=R'uJS#4%91%I_NB"j\!L]I,;TNC$.]%DT:"&qos"D52VM5F8.YaqjlS%-DS`N+SP69h0ctdh0Dr4gg/>cG2>@l-DS2%f5cAMY(hR#:[+HBhW9M7%aiAa0-/!dMJ_j2*Ve]MZlcm[Pa[bJ<<F7sI;M1\kT46B(GhQLXq9taFd%5,8X@.BIR&r0_kJo+e*5#!%KlQQ/oDJ4XSb]Z(-<^65%lo,l5g+Tc+CQcegAkV:QRMiXFesu3V(!L6fLLdQqgJr=P_brF3H.e8MdJDl]?`j3Qq2a]1-GTP[[0h@eEa$Q(>g>\!S]DMBY!oO-%J,\7>Du>fDnWBDcMSo:.>9X^*]2I9#q^ba;NrVi;_`Ff_2Jsm@-KFj2Ek]B6atJrFZFk/$Ik%&`IBo#U3e&ZN[o'=!)_WpGkFR"$%->Bfug1jDIWfo'+]Q_l_[eG!LTA=kP+iJrGSF.F<0rF\af;GnYlU/jeEBR",Dne/BJEYRIdql2<mS'V6Dt\p1F@Ug-O-rPtmI<2Q%IXGDU^?=gr>4JJ]s!4T?Rq_>jD[J:IK:34mNCrJahrsMmG>H/tp\lUB>a_2KEJN(PIJS+WS5"dR5rMZXhe9>8o;A%8a%j&(Vequ*%akn)H53pL:RkVOfgTbqe[bXJ6lKt5"pTWZrFj6KDgO5gfg.FSPR.ee+)udJXFDI(NXnurcr'!3KXcUBqSGE!K4MSn;VJ#$Q=a5df%5CQu)DTC#Fc`B%i\\B]C?N-]Um!ZNDYubBgrI.I7*`B1Y:La".-o`=*!oI56gO8SSo54Cc9YNUW7`9Z!3dlF++0LeL`.uZNY^Y@i%-AEV5Vq/c+W]cDlL'A7]B:X;GrgZG`S\D;V.J,-N5dWb%RCL#%U!!?b[g^Kp52UOYJYb,L+/I?@kJ:rFd2M@%NMk`0ZdBV5a5+as%E=JD4f]0,MY`;oA^tWOF?Q"eIStFp1dthPSMsd'u%TUV)h7.gVddu6go/g(2N5"W(0Dk4kG<5L4Uk4l(HHXn>R;H$D,l"aZR5Fi"%mUSLkQtbd?Gr'm6,i5EA`s6"#r^Ig$b&?V%^%bn5<:4@<gO)-LjtkE<p3/Zeh\MemoA2Yr02+$Wj<B$,=tDk:@WcC/`9ka"4n-0*%q8p76-gKHgWo`11C,/K>XspYo?8l'dYP$%4<"7DQlmit14BD_6L'[Wh-LL]o14<62ZuoQej8ULKqsfol6cY<@@ifKR7:'jS`$KRW%=)BB4s0`,]dC&q#2dOboN')9&&9ncs3K]o1!SqL<ap)sa\MAdZ4r6F\FJdm9n5n,1l43cghd,ib;j1JuI\T6=:Pg3$nAKfD"ZO7s%H^E!,a%NbE\Tp-TJ!7Pk?V7ltRZRnb?[#`XQr>fV*;.ff8A_p\:.bIkc\\lZM4F/d[&(2gd"_HLPcB3ZK@s?\#!C/Ll`Ko^\;EHT%ag"Z7QMYca@?Q7SC#8e/B"r(VR>bcYF;LNiVAFm8?d?=@B?H?9Y1QL'?IJi/m2!???'+0O7ZKuBa)+3IO\SQ.%$3V!pK[h-Yl<>D%'Q4AQ?]Nos/]1E>!TAKM<!db_"2ob0N(G,MD5DbU&G)'<BCad]SkUj@8TS-+>)Lr7WqO56"_<SW$/9Lc.YW)SFT/]#D#o70@cF/S%?cBc`h@(`JD!U2.UhdF=mWp$MA9PA/'Tn:[$KXQ4]Ze0U,d.@JNHlVYKn+LlgUiXq_BtB'o5A+bC>\n,JtJl"Mcg%,Z[H7GSG=)f%&%+)5&8;>!+qD9OILV^DKF>F0=Gf-@+oUUmnu>6u:VdpDL@gE"f^(X!M\Iau1cL@M#@:"7kr/5T:d\Cr`N>Pr$n9,Hd,(4->J"IS%<^Osq^O-g;d*d;C6:r$8e?')+LtNEQq2V4IWBb6tpJ)LYfdB3\9uV7l>+aB7MF^D&eUn8Z_SW%T=!'ad2$S8lpCUDZ8=bP&2*D2H%iLM"%(0VaNBu0ptT1.M=gL\&:C.Cp<KJ_W0$k#t/+3[6!fMk/*k_D7[+2<>jP@T@?e(]=N72kiK\*V7.D[@et9t7[T8/orPJE:A5%i)-4kCJXX*.S.Gjkjjt&ObS0FZ5=r2"f)-V\6"0SQKEe!.j63s+!3odU_0qU[]JT?OFh2!/:"t@MR8gEAB%A+U-6J%h3gDT(2;+\%O:@Z.A*E>$,;$RSJ,q;hqg(n!7(iVWe9-;K9Wtsg)I:N8I<^)ZW$%(eJX\>4(I&)1;P\TDk5'la,HYbpl!NSXWJIp(@h/o;6,,t<%hUASLWIjce9=F[lP;:S`1B%"Al?"Et"oZlW07Qr8D,$U(rMtIU7!A%N\&q5`K%<[OI=$a2)Q[s_]BcIg'kt-a1@<SQf#d+)I9m5Z%_7DMSP(inue&R4fK0SY-MCR'3??f^S62DWI5IPVd64.9t7dK+'H;TaDJr3+r(%5$8.:[5*#plAO.i^GfZ7oQ`'cA!<oU:U.LUR8F%-8tE\ZgUE]/CItR.2t+hf8"nb+Z3@NHdYcWdeZ4X\Iod9e8m=moRAg.5dfJR8FMpul"t"DA!-1WD?235acKO)9_;)5QHJn&'r`\T%0\]?cJ4P*D1JPj3;4?7]OMY[("<iKt'"I\Y<2!qFHMg*#K9epn?Ad7L0SA<s+sl?81)YDWa`!FUO9-t(s+Z":=\NT\n`5lgfX.Bf%g3@q=#Q9Ic8`c!"F-TQRm6(Ug?#E+q/=upsd^iL3"faM";^hl5?utKjaM2ih5f6!!JNh]Rm49S;>u"'HWhn*4-1S-;b4^:CE](U2%hi:D8T6Ac5$tXc+WKo`XQRRgTQpUVQrdCPF=uVFqAX1\GfiGiSCiS^KI1nj'=N<S<q.7_OVM)U(=D]Wi9=oI.B4X\.=cPXLLOMS_%mH=4ki_HoRbPE*aW0[GN)XB0!0no1$Qc_LkQ7cdgjJQ01!;^dN(/![.ZW=&%njW6=d;mlc:b/pc[`Z3TSR])pVDb5Mhl]j+;a@HA%6VnP26DZMD-4>%#:S)&&a,R1Uh1"(Tf[?;Y<`[rR._.<LV%]1A`>QRt<5pXhSpF,_`G^Mo:"J>4>+XM0Y:E,'m;G!cH[T&[@b7^6%%kG2&]OsOt/3q9g3Po![pTS]F5()j&OmqG$3V`+Q<*e:rqrCksYkSFI/>kEE'4npoGhLam?tCVTIaT4C,9IQ142<_3$^CL'Z)&I#%OtV1Cli;Fj[lcj\IsO%q!o7H<5\J+f;:^[4c=.bspFZ(0Uk1F42L!aD2eAeYhQ&,(0EqCZAFmO&<jMN!fMY-F-d7\kd]jX'W+@\c%7;-1lfp2p.fOcoI8@R^fh;j\&AaE-//.8&tdThCRfgB)/(p/J-GEaRTj?':_"l:No*'OP%J//Hn+0%j4K=<"HUsO0Z7;B%nhdN6Q%lRh)E6Mb(k7>gFD!@]#c'"$"0BhNc;NcXF32mss$\_$@<:VG*Q@OWAq.Q&I5c"H"3I^EF+_TEn"/[BohpC+)S%u0M=@fa-h'F!EX%`BD*g(L&CA)tEp,3T1Q6P&&+Jc+<aJ-XjbF\TZi4H&)q5+rN%<IShVYn^:V_.'>i:@Lc#)7M(!R?tDPb[2"T"):0?)52$+m",OQn%j%>KM+]<Yis+J[%q2_E*hNl1F5ik,H;A,2j<DBa'$dds0"$Eg(&C]LTE<k7rX?%+od'-(ZaN*.&K?7l\C.04@+J7?WU=#oB]HV-U%\4QY4*JeUX6ePCK7>TR:!eZ<j5[/^(ZhMM-%R8UcA"R"W5!,H1T><!RLd"dbOR'ZIl$35rH2:dIN%%U0:#Cs8Zh4"L$HXZUp$$"Q%#-`V.qcd#'A^D[i*4'Oq-V9UH=-=F=931;*F#rJ!q$mh.=&tJ;jueoWNE<O`DGXu3<:r3]<R5;DWd98sWlK'PF:7OP7a+-3aV"g3%Yj,*Jh.HcB0J%iVg>aW,n-@,u*-=@)?-c0BWbo.@M5#9QV"IEZP9um?&95Nc[p;)8lI*?T[_&NeOM"deQ$=&X;+3Ek2R`>je7\kj%l)mc*84g]!f`BCVMhnk?0GM_+QdZ-WpQAVB-I4_,Yh7-t%60r,-=]U>=aIAohf4f(P%57>;?do`$VUj@ik#bSXgnq^h4U]jghDg1%0NS`X071sX1^?.6J-UP9\OC9C#@[]jUSDe3e=D,"iXUYaTL4DUp7Z:&qKOT:-l_h,^.G&B+^0%8`KhfC_lXi>Bp.=qr!-9T@@%6@%?d4#O-0*E..nm/3RDlT=X6RX!_e'T4")I%9V`HCIXJb]/$1am>](MjUp;\JYSlT6"D'_lg)GSq^WiC,O]ud]QO%BSFUi+P!?"^D,%lTsIjCDmu/Cjnqd0!1Rs`<lKEC+KKa=HY<;elq?P(DrFKJ4V,Q;qiU%'8OALg.oj@7#J+XM`K@$Y/i>s7Q[k\CM=dN/'8hkY.Ncg%9^>dnk6LB'.li5s#-Hkf9k@ZY`">-Z19d$6jXt,Ug8N60Cb2JEb'5f<TI7p%\`H-8%J7S7k>'?6e*DDN[\]KUaXo_/*t9GC)hqpl%;G\>da1Ee2eTUIn%:LRYYUN)LJ?FXJCs2EpEb*g\)M3BJ\&oEX;hh"3[hF.0]VI!0\=;J@,h0kXkS"-,_7'c9q8*FD<.Z%(&gT;M%(e++k1-d>CAr"3K8u'UC.KHHVKL>0;B@WT>odYKLTE+W\qs*h,Fg0YoO6I9]iHRIPDTN9k^>B9&&q%EJ:uunP_T0)1BEjTcUuM0J%puF^6-UGH:af\`[0h_NX=*8kOQNW[uiXhG1M]^sBNM%R]o1K=5("+9Hieh(:n`UUI>*HZ+M,l1$.M'YD>GDprPsn4Z<N-/*iY3IF%aTBmY",ZFDPJ\YG\>Q$t2nZtR8b/`XpX3dON:7%5K+3M?!r\k?>Pe4h2Q*RnI10/Y.,CU)Q\Ki'`I/k5NlV!,W^%k:"1])m--7@E%.>]m_-)Pd10/o_Y*2j)U=e2Y3R"ek[Q^cF$n.+2_W'+2Kp?7Jh"B1ki>p^.-?gOSFn6T]5T/U'h:JPcTNm%730_t81b8J^kot>b0%;^9@keW=kq446^h*!MGh=Mok<IBJVcr?FUSK5@PdZXj/]A/!e(Gt;bp@Tl/u*F,\OMt_-TWk^DR_OrsT7$=&BmI?__o0/uGV56$'%8QS?'00oYIC@P?$BIid-eDdSAfEm1+fj=f5`aHK)OTP3Ep694:%7f\ST%4g'9cV']F9H&$]Jh9)iH4W>E)*&"G^j'$Qt1p?Zq46.%5%mI;KuY@E3-/bslW$t&EbOd=_0UJGlBlH30ZnV1)P;m!!I'.,FKn_SIO6t9=\Q!G[PR)t7bc5L$[=]hRUUpq#8iZ]>cQ14Jk"e5%f2F5F3O%N^c(K+]#m*1qU[b+be6Q?GUOc`MdV("hI/rGPNHPlF^i1pXBFr>JCTe#(`bLS_lekiar!'3b2'A<?\go?C>.esUCnlYG%:$I+"i:@r,`o46s(LXfLjkILH=$o##ZQ'hFopsN=`Y&!pe1:UN,u.@D#-4bm4`g@MF>.p$0.l_4cS86]YK8[[WG.a[E:fRlW_cM3%#/Ics$Nu'Ui_[g!hN,R:0"U?W0.X+N+CNfW<TCV$d-$/7Klf3U:VE+IpECb$R$ucf4hd7q^!SB.lp>hQHp5Zdf8d[6@$fXBmi/+6%nC1SLp=eaSXi"9M_R[V!(I@$C_XhCp"@p;B=+\;9Y:=M`cA(%o+jr(5Ru:oHa^!JbY7i-3i9=7M,=2:'\.=Lg.j^[_KP_R+[QpJ4%kRoU#4ZZX$?=#7@<QjD"!8+-C>LY9ZZ)t^k>(^=rb[%A!+Vlqr#kXrhf/VAa4j="VG5W>A.imC/A5,se#dh)(kjXa29KAa>?s:_K%r4;eu*>9*OI2T)'cVr`3VW.&sQ;RK\WFKlV\(BAO$\54Zh=/f5]c65;Yb:+?ro"b-'#:d9BdSSW*^nYEI@mYZ/-_t,fR''VDm;\I%\G3b?7d6.nK>GOPaEZnUo3!hR>:Oq7C`hTA=agYFnu3.\BIj_O9^i_XbnZHukR?&.jNr`rZ,6u2=iShA3HWsmF@[cd+brf-.E\;^%bn`DrLJBp`:7Nn\8Ih;7#+`]t]-)l(4+g:k/U0PkSTY4.7^h5H3HWsmF=:A_$9<4^p"8'bMf\(l#-K5(NqY(Wbb<M2TL8G*nJjU3%L1H8PZ\H/lA8SC9JQL/#P&5Bid3Q\%DuTOOD3qtaWM7U,5'o)%?>f]k":+QgHJe;Ag&A@]'<UfdjVp,'k0o;_,-K@!;1=OLkXbuR%J*HC++Gt9#:CEQ`4tM-STig3WbW4MOaWafAj$c2]rMMSG-1gXtj@ZIE8h"hCQBRKoFQo6GCb(=G\*(+$Wng6N61Fk.`Q]O'LQ0i9%`W^_sc%Y\fT%C&<RR(SlRrg%=WI[>\ae6s5N>U\d2mm39WL%]XfhL9eeR!2+C!2+jAe9f7HHZgIaKc[/RDSfN8[i(2%TdJ$eE0lq%UHY5+.%]MlU/@oPp'u`?>:<9>0h&Wk24[m*a*i<M/>]ajhB"`eSK/(Xc=1QlQit(V;;=!T`embfea-2Y!Y\^/niX.OAs_pJ^AY<"%n0d;e%?KVcQmG$Kp!bhk,T(AsqJZtXrGH(FCK+Id78po"Np_JM]o-9'P"%,?qbM,O?]7"2';Hi^dbX.!f[V`F).DVo/MlK&@)jR"%5KBQ#edFK]1egq6Ob-%aMdt2N09ptMH)2INb-I$"$CP/qCtXH.n"H5i&+uf?gep4@:'O#g^s"'pOVL-/;4dmanYJ7Wb;u.VhW$]W%m/</k4*t]BjEhTe!-.@='[Y2(W>bV2jj*.b5'_O)iCk0O@0'<^NX$F1RNZC4Q)<QZ*JhC0Nh#'!R^8##:IL<<OXGkcpI`>`9Pb6J%niQD(*@r#/N2T>=Drn@qNe4<b/YsZuEX,c<4X4^>31HOKO&bh4G[\7cg1.m_e&"33Bm0%f6tc+*E[9(@OLZ"h,&h!Z7a`PR4u-dc%F\;ErUIinMI!c^Yi)<0bPI,P3+&@dCC6JM]%\G<OMc5eA&Ws&eLs1Rbe:8i]d1MLLfD(B%k?&?\gEdFLOhY8:4<ak-3&Gf&S</JK%:.44e>O_3>$qs$P7:an';NKr&KhdNH.)u(`3mr*A-0N&X4YYfS9<u;!Hgo`$;JIc?$c]LK^2Z<UE\Q$`Rro!hG#%&nr]3+Y@)!tY%m+2R/!7DL?,C=b0UnO?iJR(CQ^]ZFckgBe%@g?3S'XIt(jjfp7C%cM$.a"g@\R/,gY>1<CWf\`X4:$8:Gt=36oSRHXc)l;O_m;nm%1S#1"Qh.Ag1$LapE"L2Mp=*g>_ju8UfK&bH9"U`8MehLn?'&]=69^pj%b9n,_ni;EKd0Da5+KKHTW1RgkNB`SG!g9<fWUhV-U2eh%B>e(;+7A>A!E[BuPH7mNfP5\<5+LCE;d7h(R;A4&f#%g^C3q-*.-[<o2;;$TT#g=lf:L&n@t-QJ?>9]*cj#?MZdB@)c`u?Y#tIc4%M(03UO!-JaaQ-7Rae6!GrjYFMa`ZkLZ,?OcB^BO&Gd_Nq#<SOERj/ps)hb6=SsSjk_b`lf&k*Nf*JOQ]k-6[6H;&Gup==PFTnYE7%q0e^HW$l?23=QhA3GnPij<Fad=%S(hqt83C8)^Bg$*809QJ+7__]s_nSq\SO9$9tFFF"F,=>9PEqd?=s%Q0l@)DI_o5t",Ig;1X=%AY]f0I2tnT3\sY=VP0TC_3%^3X(8$?Dm#:d$K557,8K@!?(R/cTj/fe'uJ@B%(+5)<nc/\#)N,LW@)U>EdHEqQO^p"MhduW'i%nm%>rrc2mH<*Vd;t:H35p?WH7I_GED%b$[!hZ^r5oCFiP]@?Tk(YtOp\)u<VQZqE6@]*Sc2bfb:jX2!qH*.>)?#ge\.u/:5"tf@l`EY%[n,sW0*j&//#&seJ..".T58_G%<HL0n>V<RU29Inc6XI4ds6Ko=.8[_/B<sDj`u";WlO)>-O27bW\?RAitpPjk>B+:p&VlC]fmmi%]7YRh4Pgm3ED-/7fM4=3C&cHg1k2d$MY?VE`EkY+>%#dHEhm!cAUU=Y0'g9-QOpOTgiR(t9:O-pS><\t8m,fR94Dt,hUM/B@S_i8%=M1HODE">:9cSNr+Uq4PeluU[Q=1Tp]kA_(NW#kJdA>PPUuDeEGcg[)%I'2`dZQOA67U=#9";@).%EEQ%:1p:heFQ4!AcaCP2-1'%),f^IHoDG@%(h>K]SZ"4eWSbF['Ismg)5(7G$>]\m=CjfeWA55p[LD[W$<lV^6M[NCKUj[qJ&QnU`"?S=2BDuWCGcI3D\k?GGA+J%7hm:,6gkPs+GQBq>`YF:+!M&HkTf7:-&_Z2HpZA@*UD?u/%&d@92(7SNMp8i>pm&Cp^U;Le3s6VX,W,dM:TX&)Kfk;lEPaYfR(<o%9l`kXN[UEsU*I7FFd(TP;7O*JmOaSlZ6@V`O=0D\4*HINk.X%XnoWq*3E>p?mX70?fn`u2No)^eS*@u])3LJdG/=,sqSu6c<kjG]%Fh=^2$g=rB^#rqTSJR&A24I@_&)cm8]O!LecLYHsbbe<r$-L<3jk4`J\TI"H5,r8E.E1;3GM6De9da?W4(]5R+1iqj:'oF4'11!c%VE8ig4u&O%Bq:!N/$G75Vj'h%p@kbS9rF4KVfQe&$/'DmZ$,O>p?Q;=.J5<NoNjDE:1I;rMV3)D\TB=!c!QQ,GM&^J=kut:2k*Ra%3&OgASP?$3IgWf]0$L2VK0"=Vn6+FdC:<5HZg%+'m#l0G)(><Lpm&/LcJmKuflWZC<`dJA;pMMZFuGm(!.a1RflTie-*f]'=3.7;%;@c[oobuM*7oi*^PYH@LI^qp+SJ!^]C]%AhFN6/IY*2SXPY7p#+5c/iTN?(4-23=gFEE`C/RF4!<6F[ld$a[93AT55bR^i*m]nkQ%^:JqDmGKJ?[I:.p[k@=CC$2ps`$^+/P+@[g-hF9FTi2(>#mr.bcYAH&2+au$cuH[fFCFI9-:*ZC7\+YgZ<!0R2c?Sh(_&ZC>e@)3%1>sc2onZLsl;m$Z"YK9;Oc.Jl,BNd"=]uWt?$snfkaX/o-M][Rgo9-_GHWMu8`qsTC7/?'''XLTOO2jV/6m:@=^RG?CH]/NBL\tC%?#t3HU'MWXnMPNl%AS@!h8S"$iS:me(Z"=[4BgWLiLHrVWY<bI7/_BHpK-+D[([>Mm^$t[!,6XP^%//6aoa;q41b1UR!cb-3p8\A%7c8D8dcoH4CcJ"pW4n*UGCC^NU9X+TKM?!=40"u=W?gfA@1-I$gZA6!nBb-7R[)0Q;HrT=2&9gOG"HjE!MMQ[+'ePX-iiPrr\<6@%T`?cp41_gY2C%%%Q-@:lQU9ViJf;[\Zb<OUNip!"Q(WqVG."J-!YLZL9QnBKiT%K8#ahd5>.$F7jGC:Hj^DV8CO*Tl!?n\J>\&e(%%('&r1)%u>WiU"eZ1@+,Y?H:O?&)(a0GEno#IUEVY-s+ShTi9eRDPSDI(CVD#jPiJXW%[75sp'W=SLJ:S9.W9g?KWiGjSs]!^kAh%eTh4d/"@6&iEU\5228sW6DY>*:YVr(d?2LhdL*2,XY:0q3YE<P7Goi5iJu*b<4h2YN+&Zh\`2CkX&$@d:+Pr+Jml_,)LKBX<Gor@%RSTaJVS#RnM>3S2/g#fd2r%!rP4[gjS9)T=epXakNk<bY\C5f)3Qur`4L+U.,FCK+hQ-(_=odp!R:FTRkhs);c:b7(B0M&'N??"7%_O=ppoP*Jn+ZO,uc%@er+IoLnF4Nm1^=Z:BlFF.),UUF6@j]QFH)K`4.jZp,=%/g7n/MkSK]>Tnk_O"opV,lcA($RZAAA#+H_R6;%9MZRjPfP)S;ZRTi0</_[$&>YlF\T?9+-d.fSl)I7M914UPT/NCqNW]],r)Cd+G+ebC<X&_)29e\%dsS!o#hG/Ku4O1HM@u+CZN"f%I-RVe63$&r)sL,/mLc^%h&blfmqA^B>(+"\Nb_G`BWBNuR,Rb7lQ2,BPik7ea&Or[q/$s0ZC[-?\:Q'lc?e'aEFg@[YTk3`b4msF%%q`J>n(RS?+IDb&TCZ[+g+le%.<hh@\,(,8^pd2DAbQpHhMYmdSi#R!`.LCgU=_3t9p12(QthM@9(LpLeucL;CPY>XdX0UZ\[S/&%5+GP7$'3bh,m$u8/5*l*?#$p"&[Ne;FFL/7iOu99"gjYSl_#`0ABFc';+56'%"1?TpTQX]UjOMU^u.\L&g<O;VJY]tRrFEr:mU5,%FJRdU8k9ClaC+h7F-8AmJNW[&bhi6OL'l@bfc#1\IgIi3Gt)%G")5ji;+Ff91;>:^7JFO8b*(7H3RXeU4bEE6Fej^XV^U6O"jgF\%\VL4)-=Q=JGCF8pX4.O>8C`%Gr(?P'Q,r0>kYA4&"_!i&2"s=WUQ]&d@A?!6aYTh,-fud;S_GIl;o;A;)C2l4m.eRl*HO#eI4%g,%3Z9/=:J!V&>,Bpu.*:b6b3;K73hG!2^"1FZ.%kqJAer(BUqHEP.b1[`\=!LCBUuF49e5O)G4O\t=_UBLBOWS3oZ<;5dHad.po$'o%]0#hS7?o2?m*_&X(YqbLBpY.%WmrNj3:U]W!npP#T,-1QK>"NFF]EZ^\tk89Ku5uNc>t93m#$guYE-V057?((]WpWGoUTs",9'31%]W?=BkHf-L8[LfZik^asB-k/=03OohY4ZGdbfI*^'MXquGj-BY8nZ,Bk)18O=q8l9dr9i%j($M3,77)FKAoJs*N3b@imiG;5uFdn%c<^+_$$U.E(p-m\^V3Ik13oDiGfUBNa/9hU$#L/1&BnV-l1TqUh,!aV(\Pb`dh9b4m^'F]=uPbAVNZ&%i[::<+DR&js(,H`MB*eH%`[+=lD:N9#X$rfW`)OO?77Si*pm`jo<5<!F)B\3.@HDoB3hE:F>8UoF)CsZ"ErrRU\*2K+fsMa6A@'Ei*'9V4URt*Ab2n<s4*mOE%8K<'_]rM,p8/G=4%U"g_R0BNJ#>k.T,\dWp\oId.G,OZI!n<\AGSj4?,n!Of%\WTM_pbplp#Z7KW:ehHJ.b`,n1`u$?r+rIe=-OG%3HfieTYO??]ckY*3].:AD[moY,G15)W7%Jo*'j%?-#V$P<L7(8VuK5p9.o<>dIIMqjZA8Jr/jYJNnqd"SP/ctcA8o[EquPZ#-3>U%GkF`*%dupe':89hhiE009DN\c?[9biI,_(+CfEg1;(RWcV$=!Xl?E'W:t9?O%AiZ&5@%nh?$riJLpS\&%Ae6OheDtPcFqh*qc:J<%cA#6,f2"IXV!Nr1I]oBLn7eI'FiM+Da!LO"p\JUm%,iF4(Z+J%/<fBl!F<rSr=%8@!kPE+qIu-?Md;j$YFhU6#IjQ#E<D$V]meZ<%.IBqpk?^BlF@<60c1Nk^GG_J$=jUg:l_f1%(V_;GiOs]/'3u*m@TU(k:HL+TdKrkkp\JU9\r++mca_S&.8<\WHC*I.GD2R]POA+m%L'$E5f=9F.HU5WD)pTadn+)FeF78d#0Ju;.qMB-'+>:7V:GrVQl)fDt1V6CW:EfO\rJp$R?KGKXm9BO68\X\#5OAp3U5[T[me%7a%\!1E#G0\Xkp\JS[&6Z5=\CXMdXDMUd/)A8/dY=Ln5/&8nam$O#n"P1-GUSHekL=;X[<qkZQ\\XbgX<"Vl_eUA_\3Q`ENc"g*8Wh`%8N\YU98>ORXX"r,L<&`Tdp?sYmNOXj?9]mJjkf"-p[Of_8ONG?^+0U6r`6eWn)Ml\`,tA<L;U\CVd77hcUbb9?9_"hqqtL>S2#-]%]mb@/PTg3*cUq-Mf2(/F;3A,In+G/DeaMKrS(N)d/r]Jf][oqLhWkpEp!^Y*n)XB@cH="hC!4D@rQ\2n(Z"@(_K+&;IYXV-nZ@7T%Vjs<(YFkO^0%he!p:Yq/)kCLoV6fX`;s5%FXa]!e_Wehen,0\lP[gWS4K8+@(Yn=(-n_?#rQa7_.(e),;^+UgJ6[9$T=/0a^":Hr%p!ZZlAS:(^n+DkW.DOF%^`LsQP*PZG5BS1VgFu,mZI4$%T.V)Fid:XB4aFPfUQJi_1-Uulp!]KP1p]0FQ4Su;ID<Ykn>^&peN:o8%531m!:%4!sZFLT1<=eJ3DnMF5/P;gqP;-M=-@*'9kJ?32'T:*WR3?u/JMEt8:.KPX5"[rbLFp_uUUCg;9Ij,[rUsnJr@bK*Xp"?q%#YQaPnWAhXi?,b86U><^/LKX&nY_DjiE\G1fhIb`s#ao;Rsd1]]FW"JnEh`CM;@M+[T\+.$u]ak2hNt+p4Yu@>4KRUmph1C6RhYm%D9b2AEN9k#T![b&n>>NE^FdbLB.3dqC,bToM>?P^MG?0tRsoHhA^\cC,Ot]!Z<Mp@;T/G1<iJ(Q'D#FAohHmeZ&`oePFZlt9DI;7%BnH37FPXDlH^ZKtn$?QpHW2:a&R1H-^>]W7)ge`(c(C-W2EZA&n<oSZpRU4=ljH"q9jHE,YFjL^YM`u5EAPnB51Ca=r6h(dLOM?A%H<N[kR_Jn:hC#l6$<UT%oKuW8=bmrGgmnoJ9@-#(dY]du*<SCZ0R$mY8^!:e(N!.8B5aB&M)!4"X`DOW`87g14i7/4[3`se,Vm>^%gIbZ51%P&X/#gY)Q44p$=sGCeRM4\_,1;!F;rU/"@a49Lf)0<GIR+c`juuD^QcNZSCeFSK\(.j842*/`c*Kmu3?A##Cg/5ZoBseK%VApb6!)@aUJT[Vc'h?&&Mo&H5hIl]IJRB$hRDfM*Ep!As\aM.m?cqjW+Lj0#_5(?IG3b@N*eQR&d_Bk=h$Es"f#7Qlcd$qH3)JrY%E$W!t5GKiqoa;I/AIX+FH'!b8gVGH7`de:S+896l?S#$](][beh0G'(?Z_M_Q%6n=l#R<IGDZdf])c9s()K*C7g:JNj:rJZ7VTTP%0.pAiIe\MFW1]C2_!HYCQhX_(0gq:(mlu-:76dJ##NsKimPbQ=/SPhm$'mj0>7AB#!74-7=eM:"_OjV5fY\dijQr'8<uG/8$%?.g%W'Vn=ftb[U(P%eK0Q1Y;(o8^DD,2_8d8L:$Kh8DUB#ngJbUl<5P(dq&6dY[JMqC?V;s>6[jT[>^2m[S_O"8ZrI6Zf].n!#A8Uaeb%-Zr[r;MR&$3QoBG-$V\<c\;/dE5t>iL3F(7?2Af*rFB)YbI$b"DNKs[!0UY>a^<Q<r\L+7%f?@Uhtmh&imeNq8C+3.,HeqU]nh5=%r[A(b^h5kZp<Na4n,qOlp)IJbh=*49?*)uY+TF$H5nn2P&b,CWL"IK@Ndp_CDnhJ52j(J`D6[$B26T;F@'Hq*q3e'5RVh&[J+aiD%BR+0mf-HoQ(eMtVeq,:;"9Y.[>/[*QG3h.jJqOXmoZ-Fg8;9?V6@4;BB-";N"+9a4*Um9`s$hk2eUBjS=\,5D:W9MT0:-n'S4,\9%U"54.Zg)E?-L"q_![Z>4[+sMe(&Q:c=7M`Dde(dZq,q+U\I5J>_J*31L-ZUdVkWm<D+0-cce2#/BM2F`*=mpC3PDsuJV%&_^E5;t%T\qG&N*Db2gdfn":2VV@#Pl1>Ckl",>SPHog5?40^f5HNJ]:^TDP1D7+I=7XhRB`=c`>W@n2&30D2C$<;(Ak>>IHj(1-VU[_fgDe%m7"#:E'$+ba#mX.*Rg#3/N/p04,Go8d-gX@qH_tTYQ3ri5LO%^jm'j3Q##pqX2:&\05RD9qUc9jfstg"P\O2@.a`,opGL-QJJ5W?%ZK&-QE+7.fL.jJ?SQGm`%VX<.khi!netkok!Atd-2(2@eQF&k`]j6a#:7[(%SO(HD:POMXU#7`J482X%r`Dq^fR6oc@_6O@8>t0`%E2/-Y-ApFp[(0'F>^3E_?tCnIb)Z)G#H>+C6.'pLRSt9-?Z?+d"<Q@6PPNF!H1,Ypi0b-BV/<sml1!LW2$C%q4`#\#\Vh$Ea4E<0%*r47R,>39[iZnHe]R<HbT'g6FnG;NH_Yn#N_9s+Xblj7"@n_,^04i#B0HS(uI+b3Ig>sckEHe8,NB9)+$eUAr$h)%DDp'?,Rk>,`%$FBAFj8V_qmEJt7IIldG=5G-$TS+>_oPLVlj"6T,De544'C3dc5C(\S(MRbjZnVR<b9jnP1VI8T;`8:R5IV/kG!9HYIm7e>BY88?%%m/Rq416d5%!2/X7[=LK+4X<Q@=H@KgXbLT0UEj__FK$*>VNo4,C%<1Lolb$)?RkqY#a<IJIChD'=B.9!a_#[,e&%Aak:tbrDCdo%_d=dq)I\)Ulbs8Y=c/[eoj-gOpIRU<COS"Kn%7[XS*;\o#;ZdNQa-ILb?2(!G81V]_m#$1KJ&Fk0%a)bMLEmco"f,n(lOap&']3j%5Yn^BLZ>@1DG1/s9u`gI<u08%0g?1Zfo[,o:JnKs\V$[*mL,:9Mi2mbNS?_<Npo,qGeuXFEc32J,hucjM=a0PFU8uOIJou--9QF7%ZjDj!fIql:=5G"T;a7!G?$>fkiRt:STGi6/rqno-n1mgc[KqpM%5b1;$hP:pNHm_pkB%2ulgj9\^.lK0.G-&,`*UhUfO[DjfZEsp%qq8gk3(@etFLlgK="3ieD5-M7WD@UHp9QW8!l5]=2RN1XK@Th?Kn9L^Z]FKn+NO/][2uL@?-p].1^!b(g$)]2B9"m`@guQ#Q`>0K%9&3l<I25%q%QF;'UZLiFlk4=>a3J2f8`]HI5.R=tm8l-oP\2_IO`e3nWS;29l]j>JiIn/d5s@&M0phQq'_!8mNu?949P6gjO2ZLh%*Nj!:X+WY9>24O:b)rmJoQPY1;d_eDp$dA(BgE5Ag<]+:frmoG<K*Eb8\t'V=E!mt8PdnR@_.dejXLS>$OYd2B8u`7R9_uj!TH5l%YF%Bh0lIHfl0BVDmQNEcFI\a"lA8)S;f4c5"p;K@n2`I%J0[M-Mu(6#qT(r1JHC:CTH]69lG[SE!'=Z]%XS105POtkYj+"l[ZBd+%C1eZCEL=DbGP_e*qF;ZV;k5dA5UnW8[&bYAmpBTblHn]j_s![gcC;@qo`W;6"oQrpD0.8cff%mPQBHi;3u^>iPceFZBOce1J#],[%\pjV<SiD\A2;#GPG6A>P?.e\iHrlkGU(&RJ[nC01#-6$P"e@n^jTaFE;a.1sGSE3<6)JU3EQatfihKA/K?5@$"s:<W0N"2ZdEgQO%n*Ut8+Jf;sn['@cra"eQ;\"#!@(PU2^e_8'Yc[JQ]QkJ?s2b,49*+OE.g:WRJ\*C1[jTERB4D.s"ie7$jg$]>nicH"g:+(\X4"r_%s)rk=R+^-B2dNLKJR"jVeeV]063!eM.fA75$sIr6ftC$sCp"?f3#2D:]d<]M09ts;5cY#H@(`#Xdq>+G86_ZF^Rd(;#4!#A@&fS?%G7FHVBgXFa/Qf^(lV)?,o[j=&-6r8PN6-h+R=gFL@sU64XMK$Q`am!Qbe_9<@GhK$:V=A8\i1D<kfGb4(t*aVgol_piLYg^KVq&;%_Ol"g1\q!"&\LWDDK5hHHZd4$oc8Ym.KtG>edN2JC:o=RIod0Z6)tL`<OcqR?-0TB-QHGM:2s.$s'03-NUpN@WLi?!?Q,h=+rj^h%g(rdMS/?.ah8uA3PL/WR_4D\@BC4s,ia[9\hI'@#IDq42lFgrE&q;S>X5H0).)j6BOE-T3MiTIA9X1,q]c`Z;(cUiW9"p1GVh2/:%*TqT9DG%Q%ohI9ZQ:3K6DPrV0G,#B0Yat!a#41t72i3"17q/]SG2'O[/V`6'o39u#Jm0N6CnAVf-:Y$"HI&r[^RmR#,kS4k-c!21%%uq0o+=KEEiMa+LSLbQN9X-gO]8E$Pi)dt_7c+1cGB$:2I;o'>"rk<N^#P[WJ$@s1\)VVl5M5M)ZUGIh5L]/$gOXM;B0./W]4grs%TBUUMmG'2;+7"1$m0;kumWc4FfD6#$4R.)L^\lK>(X4Vbm!.*chkf*pi!`d*#@"b6e,m.R>]a`e>e"2kE(WMIYSOu3Mn>cV"Q@6,%4!?sV\ucprEULG>@E]V/,F]MbRRqGdT7r\tb-d!Jn`^MHWHf01f/O=K<]Q!7Yd"enTXIq%.\Zo+,OTjchE1*qDu[Y%h@kZsD;eJl%%O,##'0roY#W>?@+cLX(i>pan^7B9sZ;Hu(i<YZ3In6[:Sa=hA`eC"IrgCk;2[P67/VN-d#78h;/mmW,(ilIF>lu>fTYLeV.Q:D,%^gNF45K)q/`^BK4dH%VE5"&oWB&7fd%5ktRT(FW^LX7\-`6)FpDe3CFD"!?*PnV3bdX2Q69VE(m4Rbp1ag^7h[O31q!jaYhIC!qR%$Jd`X2[caMSocfb<ZDe$5nOd3\&9*'KTKPK!c6+T?ie!V#I>PfD=K0%7kA'H(\c2RXj/^gFpjU+M$YpQ"Og-V#Kq]bW\.^G@a"4p%@aPhJ0%",041G@B/M$^$k<7.CnqYQ`gC`Lsc*KCBL5J'e%1@0_5%C!Gm/pfX(tED:EaZraQ*^=cT-n2IdKC_V`M3G&D-:ljpnf:,%+;=jL]17,._gXUc7)45k-20uJi)^OO&7UbaM[Xu$[WGUZpP\8[")8k6l"puGIXBESTD:,P.TNH9*7G#,+ipM.kggg0ptQpG=>!AQ%JH1M&niRBA&BgmeKO0LSTUR9Q\Pr_UDM&p^+I/t_M9b@V/NF@pWuQd`0$b,GZshh3EU5e!JlHLS!K7H>qe@6u\KoAoer[YpDCM^N%'SMMu[^1?cHQR8GF6\oC%B>rPRZEdi9b8d0VH;'6@Mq7G`&i*T5!Y#a#a((:7>=pac6PbO`oLtJadB^U3bDp>Spu6!!DqNH.0,]V%7QuS@/jUt0ZiT@Zb$1RAqfK22/<rIEe7N6NhJh_A8u^O-ccE81B4R5g6iYT]r%*1?gShRp\-okdItd23YAb5P9R,ht%s":Nl9:gB%=nZi,f>*;@aI\.%p2H,tXec^;pHDH-.4YkErG$6N/.V-aaeHpS28%-Wb0a)Ye9EX5ohWJu,LXA.03*BZ'c5tEiM9_C-]WcdeAj1=%jaE`=.9PACELna$XJ#.@2n.jq)!"5;5D8HX,W9n#:.T=.!j:>5X!e?NHL-2FM$Y*DS3)U[*t<=1Fh"j!8\5tW;-4%"b*DAHmh-^2%o/e4uNBkFQU7>*'n^DRdRE9CJpnU`X&>d7'T*T9m#+=C<7?W6b7Jan.\%gM&7]7uW><r#k#UEg9GMcEZP<[I*#q#5t;+q3e\X*AI%MWSa9%VDU*$G1BA2-:Wr,^q<@<Deo#i2hu^;I=$PC+pH(GSWe`Rbh6_8`9#2&3"MoO`Vh=-LVtI,[a+i:H;?X&r%W;ctu-87IL5_%DVTT=5C\K@T:;30jn,$p[f5t1TWc0?8IlKA,Q_u$e>+*3;9%P=?eZkf[c7g&$P:P;Ot"`i8Wq5_J!*dipA#;"[o!2#XHGm5K/Qf>%m%:B-q*=2\"HPJ+n"^s>!Gr8l+bO5i)aWWE%3XQ*>L^ZcFh^WX]RqGS_5.`uS?aaJ"/Oo;]>Q-kPf"-M+1QirUPD9CS-C\+4X5!p%PGMo&b;r&eKn[jk/XsFTVjD53J.,<Ro%8TC3"0W;1?]@8E/7EnK;jk;V52kVZZXK8F93MX$7AX/_%,N9-^rfYRN%JPM19tjBb1&p%1/?dLGj!gE9TKnY^VpZTONT;k5b+e?a]XCHJN*hgdg>O/n(oG;i=1$\m_2,HP/9:e94bu<NB>f5a9NBNhu5%LD_HP8plsl1;&VBt%@7ohgbh%:(o8Fb_S0D:"4AbMp%_Mq!T2m$,P8dR@XoiVK5C%O&B>Fs<i0fX#1lp_E%b:%^$#_(t!i'cVJph+ENaCTEli@.#U79Dc%%(C4S-P4l4c^;.:4)\93!s38eVDN.taf3=h?XNf=1)(nt\P7qrK\sGUFa%_j8?rnTbX=\8%Q4Rj[7.=*g3]UATa<-pS53J*Vk!YS%N6`mG82@^HjZ=:^IeL$Lk-#Mi!=R?q_X+aWLLS$ch`e<n.l[c^p)EZ,ZXTQECf:(E)T$joTrA--(ncu[5m()9hdg/F3F@$QHDSQZ%ju;=-^*(A7k_:9b^7L1O/;`7l4anr4NW5(fnH5=]iA60Pr-1WaW".*q%bbgW_JIeEd$>dCRID:a[Us`GOWQ&Lca>upq714(Bsupd%KqUI(%&`PuFBo6#[)?i&_>3YH2CS::ZG"h<)qIgOTW'Nr([JF9F4#HgEj5jX'_c[EPMkLmZ9%6\0YhE+biZ-&app77i#t>KPd>>^%Ki,Yg$B\VENl'`#]C;Q$*RJL;n1^CL?;-pVC";1:?hlslE.rt#o/uR+ol15cOoAksq5cc#lu44P?(4M114W1"3IX=iL8SUu@=O>6%.Y'"+9=7M1ICtAc5dt-=Yi:=SRC[tp#9QV?FI%uaYEX2<l/%p2<qO8nL1GFIl+p/ML\E5u:SCJNaMUD*]0iBs\?ruos%+-'Yunp]%$cc^GIrdiPR6!/&R4aI?_i;L)W<<9nj`jd9BY$q<^!!TKqZX[g)&#JhVNn2]@c9F4>)d5@m[:7,YO9')I'A?3:sB'[-W&m=j/#o3%gq4Te^WBe[^?`iX/Dm.KCgb-^1ZfJ9*I9']$/AkJK8+7OAesM803P(.b)515F/%3Uf>utEf)&HP7A#4n=KL?*D?Ybdh@294oj]k-%+5\DTjkFETEV178(7=jrbMKk6CJn-rU/s&;@<t6Mnr[q99GJ7=%Q4ZOBH[]l;im;J.#<p[s4Q#<a#bJ#1WH-R9?[=>ep;YGh;)%Y%De2=q(bs;jiqLntJ,ee\^NoLkQX@C8$d#hDHZOVB_:r^3rqPbC:_36P?QO0''M\RN%q(uYZaW,El15uRbPh5QSl.FD/*usS]!eH"%^AdZ>2XJ_#*sc`ZdC14sTa@I^^A)"NO?\$[+`$Q0\(2O'B8(eV?f0Tpi!e%:`>O&(T"sg"6aN>4nl@C!;<e+"B[\YY0VJ#Z*!^Vb%NZUa6k+s0K.*#-R]0CW5V<t2NClNj8?@$Z2%\7F/^l8lEOm.f6SU3O;a/5VTOHg+HmT8eg28T"?>8-)LF*+E(IQ]Scpuq%OIt4%6%5ebi%lF5YqIb2\T6.h4?gM^C8`"00%++HH4HjBLTJ&39L[*R0Gq;Ti7c[>W\b[r$2_)k5`]Fo[tF_Q-edRS!er[/dMoB@cteQ:Z)%ao1e4ARJ*d>.3DcA,:&*XiCKkn^fF=hh*2$dP&<r%B&dQ(Vg!mbO7XfKE$>\ZhZibp@<-.rdsgh)Lq>WZQF;T1-TdR?rpsT8OnE0%EIU3%o6^@hI7--\nrWk=f<+uaRd`Mirp-=trg"#Hmi=Fqq.ar/3+Y^`oYWW_^\ZN1r9(r[V;"8-^O&7;+jdADSG7?#^A[WOmCtj]%p+%fifmNeH@GZB*T7?T*2rE;;qK(N*c]l7`psH^W^:lUV^OQ6\07<E0VnW2o0>@>OX$?Mbrl`[eW[1M6B8mhqGa!!j`;X`:`in9L%JXle0pWLmks8(CjIf<ULY@69ps#KW,D9ZM/g!nnDI/X&BT75tl^EF'X_]M%_0E9(F$)NT1,_PBi?Tm5)OT51&;f(KbD^4i#QckZ^%*D`A#7ts5&/Hk02^[^]`/jJ.Qk)]#LcZ/^W/c>+5TkDEP?[h=ATqRudYMB&:>:cAZK!kO&=tH8Y_Nbr;UDAc#YOjs's.I?jfdj@8%,Iu(i8XlWt=#ZM)9TsfTR)ZF`(LQs\:dssOoZ9&8$]!9JJ+oN3bFecK.kCD[3Eqp@UN_aZn+=UA^3>\]pl%j_3P!o(U[O)U@Z0&j%lg^5He'EL<f$F&qJm[1Ar+#L%=VjlIrm^8oaia("QRr?kI)L'?N/4Hbq-JO\s)m#pmY1W.BOALJcBi54o2YD4VPc)^2\jJ&T"T@D%HSM,8qEOpt:O)p0;$l]W(O\]oRh+6GPkQC9hFC\9./$%prauHK]`2".GU!5*@WW5Fo?-P%oDt/+G+[qR&qSqaDaaA.,Q\4<3tZp+%P(7.#P2PYm^/QBAS3.GCUEBL++@:DS4tK(c_nVc&]ppL!GT7h'p`GQurb1uhf1I.]4',3_42H>%htc9h._idb.ZaTpbIp.6'CYne%`//`o#QF5S^KF!WQIdKJnCUZrY.Xek1-YM[Q^1FYN6`Qi<9aR4?;uF6rYnX8Q*a,\h]=?A6)3)IHFi!_n#ubSGj'EMnVKL.mGF*]%Dh"]Se=M"O],P[<r09L%nH6O-*tW@>^@_+HJ%rQ6c[L69`/e7#nuq$TT7-)]2Y*T?Qgsl9T($^dF_Yjpoc)L3n[Ppqp/g/,54IFH%irdcr^Nf3B;XD(]m(DrH0\bjB5JAar8\b#Y#mPYtGt^rt]oTr+pS?)]T4eFkoc5F4oY&SR1PhHOU=eW]Mu3t+pu3A:.JISe1X#RY%8Ys_XA+0BVS,_?%s8BF@F^664^]39f`&GF-gX"^o5On9as-D/c7fN1H0<\74arETlK[e];d.GNA..QijJ,f7&io;]+5.]N4RGdr:%b;3&:e]<7+%Om@T:VZr%3^b-`IfJ)[Ee+It;]GPRDd@\JqWgKu%(Y:4\e">jH[4eZ?H<(NlT@32SmMA7D_h:b?T0Y4S\L;.q<+)J%\NgO+IK%J,aD0*;ngn,*5JiD/\n<SirBSTiRI3FlpIj!@]`)19j7f0p^3e6)8"+,gB:lp8rNE[5m2JD(E"%B31d<cc'ZUs$o\sr0%%mrnKV,s616B)94Cd5T&_WWQnrD[-M.h&2#cpL=,]m,2j58Zn>m?R,L57Ad3hVq=,IIC<ZlMnYn)Up/5L"PCm?O-QTmL?i+%Jl!l%IscY@6[jcKrpEdH&#+sDPFo)(O/iM)!T%)&,_(_IakLaId)(i.H19q)l&Y:f(2n#_YIECbS:Y:4ml/Q%h6:+*mCbFh_YiRTb.eY)%g*7R8D3j3JT_RYAF8Y$_J*2aTH`BlW1I#5q[4\YrqW%$nnsc8cnY[2<Z%XPIKY>e+R.#CarkiYk\]^')&8E3;lf5IGmh*M[p&4[A%(HUT+r*TjR^\Pl*oO%'B*c1]JKD<mk7\m`opnP4pf:OgJU2TD]^OEnN+7T==rUI]>Jc>TGBmV<!L!Msh6a1QdP(3J/2#QjZ2q!IE%1&6_\^U*UMITR[60Ab$hN:.hf9?27kIW,FPmQ.CrrP91S$U9*/rp->`rR[[%&Et3AiT:Enf71nS53;+f^A@1P0E#;XmIT65`N0%7%Msm`!)uA'>J"NX2^\/Y1\ppeEPhJHe^\C--Y.r`_U3k\hR4V_7p0Tlr++4(CQ6Z4`mnH^Yf/MT9C6qnLhh91LeQDQU<cT_+4N]!a%Ph3\KQ^:n/f:E>CJ+MEo,td[,#TeH0E;0q9#et;''E:M-f-_q'r9MpT\k.0QA^TL`YC,MOIEF5Apj9.+FJCPsXt:"T*uEVKJ(c)t%DhTo%dSeV4In>Z;lhfdb@jLOGNk,)Yq,Z5=g>BXE68,2!rN&6JBap53LV.+\LTVm7[e5RUqu?E=bn"LK2a[</B4(RN9LIZak<&;p%msO^!5Q1jPq=#c(r;"+AGk7^1roC,LE81BL7/metHX:VX>]+%#oS8%5IIlKgV\sh#T"0:@Mjru)je(@VkJJ*Brp&gArn#uXs7Ots%55OQZDnh@JHLQhOhgOO_\)4r;s569@#=#_HR\hoi88.ka)'hI3UhP:6cd;\Spa?($PFI'Ks*9MLoB2UB:PO>qDu.Atks,/6J+_.B%0\u`fpAI3N[su90qt3[O0C-!JEsapo'[ghnb9bXuf"0ot:[.T39jGl<Y%='a'QX\``S=Zk=kCi]V^\`HNJ.pUV!A;!S57m3^SLo$%C\j[fZE@nIju(BK1egX)FgnbCGki]7MVerRl'<-uVG!??3N&%;32c,FofD77-;<Ar[V7tRn*;9tBr]?[f/_,PN!])%Po=^Lo0QE+%@SA>>\AYc:4KW%;;FjEH3%\^%BpjemSf![/-)<X:"`')@SAm+F5f>fCdEr&NfW.cj3\PI_Gr^Z%`)3p9APR<8ndJ3k(ZI-#Q!BZd%SAaL3'&l=?&,7qHC;-bm`KK@0K7_\e-!t-'-.G!'!5._[?5D7J.7F%00V?84jUuXWFL"MAapQ?J?05>S+07=Q3M42?q3'/_0@LV:%+sLM43qZq,@Eg7K5<FKH'CA-m1r3.*mCWsF]i7&0@9k*VitNi;9-B')F!`$54\kfNBRf<;QFK3"SAF92Tp&7;%bNtH4be4'1]=A;%C&k<)_PHj&L^DcW"-41p$cj,_+t5r;4GAWZi'P:;X=OR,=Y;-midN*<]S(>C=t"eXLY@Cn0WEJY0/NS,1N1SW9V1E??0[X]E>T'u%U?7.fPXJHo;hU5p!?p\kd<82>BuW>7M&2>?e"#0ISq5rj9Gs0*EM(e^8=_@YWX0PD#`3U>Op,r@ek353d2s2mlDMuMd+MabPYP_q%-Ci85'N3%o#V-4]-cR_%ZB10)AQn=<egJGLF#.*fL#cbfcCaY?b'],2]nRGGNADHa+a7DsWftpZ%#+HU=(V@qXto5pC<a[3Z'(3.%^,eB-EQ0d!n-l1q&Co^f-,kTn)Y!r`"9r^LBR:PDV0N,@j/(m`=dH:Rd`T;P4Frnl!RW"#iejne4G0X!"Zg+Vpmsf7LG<j.$LnfW%(YV`T@%n\*MH)1F-cKbQGRe4CeL8@7(e;XcKm3g^N+GuJ)2pA;eqm0,nPnK]@8<c>s!uWsl]+I*1,G%<f4jWTnOt'o9e""G(3=CK%E-qar=:e8U^0Kjr)TEZ\Z^]k.Hu\bYS+ZL>B5SghmKa3Is*=;[h._=tr8O?@o),]gljfEt`ebe-q8sAj+l5513]EgHhn=;ZT]98K%5C_fl9"=g-),TGgT9#N7']V=G<]_SNj@T^%rQS,5&CEcX3TZmgoH4[tDi!aRQ^C>3P;J%L9`rH/P/&[X7/6IQP,diR9PJ)k1RNM"%6Saip-BZMI$nuk+1Di4)$-];/2i$.[hN4b3P=6sO<$`"]s,.&EV:3>RlpG/O@M!.Nc06u#6;3(E[;P8q&7kT43Hr/>"8RF'&;5(U%7)d)B,qkTI()X`/2[#h<\?:[)iQT`,Ld:NBU43/%5N3n"'-Vd/fJ<OPc_Ogh6IR.q_a2K_RQ,9p:,jDA*/buZH8q289^2d2/hQ.S%KBMTAl6WE</5=8uB*8&VLTVnpBpbFd?fYF(G8,YK+nl#$?$Fh5^61*!3HH_L<O3Ca6kBKp04_?tQSqjU*&:o8Z?1h9S]O0:BTb#)%-;p1$`WcR$TrWsq]43RAO6oUtT@ig=DDO].*,FeR\c0b)\\!-P:)fb0666a+oK)_hd`u))NL%/8Lf7n?&cVA9Bh8^2#G#/;.%VVV%XX(h?)6%amRfGi#gTEAc/<WFrF"0#Qg5(rDR*%I4@tJN@&qmMBKjupO$"Ql]b!I<(#r7Dm.rAj(]"LYa=`=@U,0'_h#"DuNQVnu8%R=8bN!l8M[Q5aDL!`t"d65*%,Rk6(`.?ZBg&>qLFB#Wi&&DJKjI&S-33iD:]OqWRDa%/#m1]@h*q(P*,PMsfq!-uEtnns8$4HTW^%<%uu@iG5`*:pu2r+q&fQ-MEDfPsB@POk,-GO09to,t+K2jQ9o*!q+&@f?cjI5STqab5Iqdh8gq=YCmHIKF/--$-*RfBW2/BS8$C/%*P7h`RES&%_Drk',FKMlXEVVn1XE)3'#t3(,-Pe@ZO$bO?LtBl+l.^KeQds8F:.7WCHGUN=Qpspef:<,3q,Pim`7Ep.p4F#.V>HD%8@Bm6*6CgR$'<eMddOK-Nnm)9@tfg-JeC2mo`E]?oUBGPqsE0hjhh]CUk<F(Q^t`S&4``K"S3LZJn.;@AS++^?Qi/Qf\X>D4Hh2S%^dKuVeIqa1#WqTdM)N;/,Wo`1<bNK4?Fdh(_.mY1R7(RS_4t*;LPlGQ@MX#7$+oFEBR<<jCeR+S=:FtmkSc7XfSnM32qN?2`%t0X%6;/!u`Ht#Zd\A&m6D5!+P9iO]1#328Otqs0d,Zm?fkJ7m#%ESC\cj2h%KTFMR[ZKm>_Ai.Kdaj'eHe>uA'D`9,$u\nGro/'*NUJW%+J`]_in#dtJ69VW2::iG/u3,K'"DM*Ym5CPl,e=;3b"sB5XISqXIjF7/#KolapUZbRJWItF;XeC,$ego#t4gI!YDuq3El4oj&u0^%AZU7anTZR6S[96@<^&].S7lD0X5AoumYl,iA&gT\Ok)[pZqGqZaiiK4">ha%nHbgf@<[g8EnSAI^4FC#FJoK!,h0O!R55[Ce9s91%_A(%S3]F2]%m),'8#FHFF73ML=d9A:2BArj3Mq331J=S3NcbQ$GgE)DFbCWfGWm#rqDnfe8n'fhnQJ9Kl9:`U4RVQk6rS`!':'2%%F?P#0n]nj7RBu?)*e3kc9R[t[Gp5Nm>S!GkHDnsNSN-pbcF5U\)2oU%"Qn1&OJ+iK6e(CE>$4>U++A1o8k<I[4cF"*Zm+0jhS[4a%m1dEt6^YdAlHZ4[!O8@MB0o"AG;QW0(iD?""/Dei/<$&E,4,eHehVt!Bbt0ljgE(IkpqnPUU;XuXkfl_1m:(7$:MjZi!!p8+k%RY%*!hDA+mU%i"RRa#^HH$]qH-!.QkACWE)6uZNsJ2VOgXjf@(pffV2nP_BFqeZYq4ID!hr;l*2ERV&`bs7"]nlL[uFlOb@YP\/1-g"%W@bXkd2tk7!sj0=i7m\^H`("W$YPnX8\l%/![5^Q'P#'DG]-u^c[j'(obMh&"d`>`'::!;`r!ndp,;A`)(EGcMgejiDUKqEGK4?X%L1l8\gK_=<$ap)^0Aoebi/+o0pH2X)5ifgml(0K[n8[hBqq[6a8^a5IVeZ=ff>@q8%V4Y^Ur/[?+.6R"[r=oV$`9apF;@Fi,\q0R%_?P!6J>#8=D)1P1+hb1?JNs?Lqlj^<K+2G&$`$GdbZP\P'uQ-UmY,$n?6l:YJPR+#&P%oQNeLiV3+P\5VRrREIXk8KOVhHRbod(Y%C;l8E7NKl-r<[9EmGET4#;[q,iCB,c!@6>h]WdV.gLBkq<jI8_!2?,9_Aab_;J8'`VWp3q72Z\-@FG>_Xb4Pq7ZgddI"GpTD\1f.%\MbnB#U[HI^=&3Lf\b)g[ApP&5R,Kaf]"h$p+o;0`84m:]J^;*E(3Mt#IVTGXt.W+'8j/bgqN;7_c`!%_&VLU?sM_^UTEuq&WZC&%GQuS-_ESecRSJL.<?!%jGmoTSV52G6Ekm7I:a77:kmWe'd"#dBSkm7_A2T?F,AJ0dUL3XQPMdSCjZ7k0,&G?:_&s\qAh.L\*0eIY%\m:AWM77IM<<s9!Cc,dH!8m4*9`p&oV@ruQPG#@apD'uhaA*jP5dGA!-:/CX>0U9s66a'[\adW`$C>(XG*jGS5rdVo0m8cR9Iut&%om#i#LgkX1e(+$f[F;IY!F2GI>Ru*HM_lB[G/M1X3'd@u#eGc$-,5oqe]k4As5qPZRP5JmTq2j-bVYcT5Ra[&l&931_f4!hGT1?N%.R7Z[U4\DJ4cZ<r<7(_B93E8lFj?B]]`tX5J6lYk\p.RJPZY$-bTuM1K<lW):kkp3+c0('L9-Cb2OgHrG)O<r/<B"[GatYq@JNpP%eFNOFPB1s-F?Mfg5opF#n$T"%dc.6AMt,<)6.qD2Mg0WN,)4<Wl)!%KoB9[d`rMh!Bfd.hE""GIp8G7Vo/d4jS>8;bjj@R,lG+m1%5)*O!DT\^Z+VE,blr);&b+f39*Y?Ae#@bMqBTA3J7'/s$"&08a^)+1lNueR@P%p%!#cOsVOG;G1Re#Zn):P#)UB^itG<3+1j__B:%i$+CUmp^I$SnEo`isOC[?E?X-"B)6Mh[>7ZoB:a&L77\sH#L'a'#$=:P$b=]%mHt%DsUO4HP!!<$PNBgUB`_M+5&XGJ7PT6Ej`bB%Q,007mh:^p9t=?E.>OK*%ZRu;-$"#HH3[q"H6-eA79bhE&!qG!=c/;N]NopSgj#]]3"=T$GNc.3/ajUp"aMW'Z/QZ=Q!H:T0jL[4%GbPG4Q>gkSnXOhH<8^)'nLP7sbl":D%-,8f#iik8(j.;EP)*UY;7l?`/<C]=jdkr%JZ3.f7f2]UA6mh3r-0>2&_F794@i7YhaO42%j*>^+]a<8NB9@Hbp0BnS"TZd8fLr]5*tMsfNe.PWO2%h9mnTh-a8#20&/Ks#HdT62(`83I(hf-k$nUDN+-1n6UFr:+jX)Y:(JE3U%W6'kKn!q3V.c1K,;N)s[(K$bQ%u87_=c>;?Q$$u#On0eF0d_D4N-,?"%4+ZflNh-nW;W#<(mFF#^(9B\O0tZ';*6CiMSZemj[tB7%>D2o-*#00QbD_XaHNb`+U=3T28lgSO:fS5R&EPT.U0!3Xb`Jrd[\+3<A[SS58-`Q1TNmF(cu`lo,!aG"9W=sX'if5<:f[b#SGb/c%0D^$\@Bj15kp+F0l8.4`i6J-sl>tND[Ou/bRZ%[WLFP)Mf9]b>`<o7@#@[>H@*C6mR2A[RlZ)^E:rRCUTrd5NCZf=<HBFCaAjD$l%0"".,9^Sm50t"2eRH,i'qo\O]6Z&NrI0G3jjV3e3$f+3P[BE^0\m#MGAa<Iq$3ZbFoG*UH,q$mWo[@m3?40V,es"gkAE?2Eg/gIt%HGuoX'c<4\<4/oL7J5>?D<@(7!eF$&nHO=I[nc<@9:$f"V!V(V=gG1_Hj*t#'_AG*p^3`i0KZbECqB*NJ?5kh[?eZQ/hmr<phET\%r<diI_P#DB"i=6bb0!ei]dYk$5nZN"j698*<5(C!8$Eh(eZ8tY@:X[aq9#bcPp!*tQ)2rLRTaN!<58"GOl]:eGj<?b'7sdb):G5P%)oRS#RAUM0JtFi2]$/nl)='&ZdCKb7F!QEZJQ*'/6'rLj`L)J-ML5Jrc["1rLo]62+R1,5Z;"gcWhlCtL+.O^V(CtBj,cX0aeBO9%ee=q-h!"6[o:79\&CR?&eZUO$i@$Ur\04iE.gp\q'G\buK`S>`94[IsiIe22l0a6$l5"BTk)2V>q6i*=->_09gm`@=77rPd`^md.%(dT2c_GI)Q,DAuJ"Cfn2l>6g#CO5c/O1$*<$?Sd"oZJh(i"+Eqg/lW*+YCdY,:nn.KuoMNT#26o!omfrm2[B)p+(5'E<=9&kE=CS%>>ZseUN3bu-DT560_'b,gIpj]&Ju]"`1jb763'\q/>FnL,^m]kMM)*nnOMULB,6%C@7RK</nMWTi=d%rdplRXp9?G#KK.2!B/JW9%`pU&/MWPL;a=OFO1s?\4A4^J-1@mJo?O=(,d6Uaf=e;7!qElsQ3B7aW0sih*b.sQh\nITjb/o+D7,cJ!W^7QrY4nt^["T1HfS=5.%CE>+90LAo0^rU7Y_Gk39eiYDN%`p+K+_ZM+=IN9"KWLWkLrLsNGfY>f9O+AGi`&QGD)mCeo:>O%!5kqE7Q(j2__CXn'9g0R*geqF%M<.FR5Tn?">1!**RCEOcHl5UYKqNT97ET,P*[KL5q;qis>PgDr6j^3"=>Y+g]Q:%.1OC?rn#'s2Jn)Pla"&_LrsiP1<lN%kNR*9^%R8'A(kKLs$.M`(O+7dQTMfZ8H6c?](-ank:;dA2,dMR&u!#CBhC4T2'bpO3,USeIh@OOlT;>^Q:3ngDY?IW!J*p20YqqV?"YXJgC%[.97>$h]\OUe3*o"s[06VLo-kU[5c1p0jkfHTrM]".og77L-)qE\p92dq>3pqAX$E0gZ*Y+]4(:HP7QH/@Z1a*6+Jo2>Wi\1lEao%dtmQCO4^MU!]pLQ9'@s#^V[rLhpKCMB.sgXEjNfq.ptOa8Zb7!dSXL'RlMdllJa,,qhh9/)2u%9f.lRck!b22jR5[EE7^h-8]P4H%*Ph@j]'8<V8O3S[[*[El:kJ6F@6p!'&2V?X+sGql8U3J@C+p90-&soL]5]/)ThAj_]V<^cSZX;U?kK*3$l=7n7$<O!0TNt[-'[dj%8=b^jN3aT#gRA1Tf>LQ5^g%gOFq&$U0&$9OLq=>5Y`%+,\cj7XeA=97M5Lpn$?KW1O[nO(/$1?pZ)B@Lce(@2&[Ii;]7<QnD*M1O%XqacT*Z]-PW8B417;-?blaYa\_I3_&$'uhc]J1(a;pZ.b68l"IHCmaMDC7)-C7LR>_Tl,?_6XCa:1uOD>%pF^$ap,UDN@9B3SWm,%a_Rts%b!7+WGJ.H!A'#0cj2o5R<CiRWA;=#hODQt\*HUZi[VuJo%#T/@hfTU4GAVIQK=-L!X%R%mFaC`/<;lHYo@KPiXEggj4?#X%dYs?jbOIL)N.GV[f*/rop8X"<:1<Lpojgi`]]iaVI+l_>`GI'F^JR3XoIsg.d+4?o8@91#EXBA?G*+aRM5N0^E?9ct4R7n\La4G*%4/4Ob)!0i,YL2g1'71E=H9(KJ&9(!.k]&Bf+:p!d@DHOgGMJ!NQ8dI"7'"Q>SY_jd]bQC>\HR,o3"^.`/O>A9JmItUhr/e#1`E5D%Ca3]nm33b(s&q1u7GB3tPLVf_b[\<;'3]j.R)XMq$>CSYktPLP&J:t#+Zjqk]n@19PP=KAgc8tDYqr\]#dS>Amds[m>fp5b+cEgX%AKKHMcWm4(Q:]%@M-lIF=:RnkMK%N`\7*nJV9FIa<&f\<[-4QHUe2np"?-I>,VGgRb#XaN&B%N.Q;+I^72na*VFqoPUOef.^O[_r%,Orm6K\'7.rfI4*[G27Y9GBh_aC3HCLWHoga=a4s'@$BrWY91m7]<'6ep\pFqs+N7@CBB-CZ\0l5qI`bVp.UTT,U9id9b#!B@<Ks%Kp/mUFU(;KS?E$C(e8(&]<dn<2PXPPT(U>u_Fu.IK@rkN\B54"&G"8Xeh<#karQ.J4N;(@;1oi<Zs^WC$\@SZTL-"ABY6(m'jUiL%psD(BX1;hZp^n"JL]ud5J>`p1]7qk6>p)D<LJX-*I^;:LZ3W"N>@';/Tl-%).BcmO0G$Df6r$r^(,lj4'?B;Q?^$RK2Y\Xe@0S58%8X$)o9rtu1hhNUQ7.9qfa>+%<aRkSQ7sH:'4[_CaURt*^F5,*`j1QjsHk;:52:o#&fb*s/&ZHKt\O@no\">pFO`uO7&ZM>$^?-/0%Yq[_d\#us)nhKEU7K_FcS>bd9's=,#KmaX(22=hS+fhXN#l"`[&8+X*Y%LlAe'F>'I'^I9@n\peX%4=<2'23](mo,o0&ZjrU_huM%T&;uUW+;1e3>^!l'fW!P`1dm5*_%JoQ53Nb#H[/C);YB\a%4h0q<R'3bUNr]S-?)oUbG-b^B&mI.GXNsAH@@Uj1"[F2?bE?RNT>c%lk"]mBRe=%2?<ARNM.oN!\au2c<,U658'6BMQGOq`r_qi=f]2(L2fUW`cd<YQk-fI(dSnhh;U1:&Bio8\K,g<[E_-q<'[(6_2Pd;%N"B4;pU,`<mijh=2LrBj^Egj>)L2XFMChRr.r2BJ3C6+OqmYNE_T5]OpQY_!2fX%r/jk?$oaj0Hmp]sNYUH!M!JIteJLo2^X"m#R%JYJb#&aPQ<R26NEXf@-V&A#A;4!]`EVu\]OMd>TmDOYETrre.2!,F*dM&(Y^MGg8XEmG<MYegm'C-`H3<"!0RmTt$)3CE2[:%.[Q%Wk,a=NAn5WT/aK*<,q0k1s?<S'?])O0efq:_q9=]=Z$aVgrjb0[jGtM=k]uL$$A=-Z>p+WY.tWER#)kNZR%;/K$Ed8,A1uIp(\TR%S4-3q+LGD$a37bKN0F=9A+n>D#2R:'69<'48LmEQN*Wh<8&bkG!eec]>Nph32PFOF=/+tB!edLK+G>UcgK6YEdjf7ul&mD`ctpgc%RTe06UHAgeN;=/A*EAatS?GVB<Sl\NV^#l'QmG6`La5"/6O_Sn^#,YZiZb%\'6<JgN2XEU0Q<u(X_;(F_2M51QQdV=_$Flgkn"%Q%g*2^YY^eG$crbi+KF-ZC=ec=_]Yk,8W((!6]%pIV`$XNH6cZ2.6M-<3^*,#n@0%EnK<p=U;fk\>ol5^Y=;]#q5%O+7gmXIW8(=e[%^#rg+O-*+*a>u%[b63cCdXWKI,ji^jUWIOba;>R4#\dr*[*g_1`]m5r*#N[JeN+AMC*m>Z#mXn/#m[5qM-9(7+G>_6Rr!W35J%in%!YL=p6:?>u8e22)VsO3l.,UH%pO[#'QS>d*I_^QU9TDZMk=dGLN:B(U0+n7._XksN]Ql)J0[@gB)W1ja8k`9)!F`iI;SW@-O1Di=%^da9]0t)pWQrMK`"u@G!0YI4gZq`^'`IG+f#[/l]>p$Lk?'P'R%T$"GG4-rfn\sT`*/%EiF.d,^?&Oro4^6Mnkp@l^4$ZdEkfQal%LnL1h9_8p,^oWt"(*dSmJC#hpF#>RZLl1n71dkU*B"pgTi3g]ch?4CbM:onjk+Kj1Pghi7HO@/nlCDKl)e$LE3M=)N4(gC;!B:,l%<t\$$7>kVf*fFce"%6MpXp29@"%Gm0Xhm=:&Qc;O#C5!t2n4>=YJnEI:LQF5fori?Y;2jMODXbB4`Ws"Qb3Y)mN0orN,KQ,VJm>@%f,#RVRl3k=0h(%*.mu2b=/c,ljm%6tpM#:b+*$IU8U9_a2\-KebWT'i[W-9%8//J7RD@$W>&7N&4-N3i-Aep4+:No3bRbum?HN.*%o:6i[Qq\/KLA3C0GXnY=bg"YV<D*[\[CWo]N5.6<Bu3df(4]g#?5;73empN0%>.>?h(J3MJI"!^["_m?k=h0QnCRh-rRV#pc>sgR%I9ceL#n#+`3K]&58K/e4U?C`;ej1,\geNRA"&1\^B8,17.TR_r3p8LY2u!fL;1;9pdmnSqOtUpEqC@;o<Fr:C'9L`33CG!3:&DR*%R\>O1R`!r33iBIk8)nCl)XJS]Ye)k%rB':j.kl)[Q7/@AKk:>#HEJNCRhLa^,+[\h^LuLL:r]r7G+PjhTtQ@ubA6TX;*qPD[:6G'%C>[nr"X;uA,E3bTjo?.LR67m#A$$8oE89un">KFe@0_<N>%B*79BpATm],Yk11?1[T"E+NC)pr`Ne9#`LPlP$)C+#=g:XN6BGU*J%XWZ<d]fT/4G5<UpH/ebaZ.fqJQ7<,t7/1YAi(=Maj(I/XB[85ROYjZII1T-(\35eWD,!.LVf2eY+``(9V0GlGj",S/@aI2sA4+fE%\=;iE"J:Q^6.t^*R5I&3,BB;oPg!9,Rl@P**H-^q#a+g[`$8g<6LmG_@co7P^2N+5X4>jqm4qpM@RPsWe4Ti=*n$ZZD\:MpTPPXn%G9=kK1`GoA/@gR@'+MgbZPLQo,=R0WhceH_bm-R'i@#q=P+Z(B*k4L:PJfmb]t_<O1asncZ,X/]UaiB?S<4GaVFu,5gt=mJWk(9#%H,2Zh$XI%]f!P_n)[=-bMTgPZ('?sXnfTsL*i=O$(u(uD6>#hA]I%a@j/BVK;BCeDQD/2ei$">-lXRlPC2YHB=Ae+]7g37)We`d>%93H88c.sIm^c75^q^]lRA#-MM7p7koH?;-SZX)2u,VuYh@cje<;4Vn^jVATB[++g]H4M$TiWNm@MOU./(nPiJU,^o$X?%BIrWpHu%M0!ok$M,^]XfR,RWfhoFA)LE3@e3%.3\TTO\d6Oe*_(f()5/^<8ra!?#@pgTK7f;/$td&MMLg8DEFBN+N(m[&HcW51B=nj-#K"F%%<Oa6-(2hj_0^uf>A>Q@[@fW0ZpYfp+6f]0A0t(Q7(`4K5RT(.,,P6CQfq?2LW%nQ!,F\7ti6'Oc%)+q.V!Vs?(i8M#?,cktHkAf&%8V+,='J`MkN61a]YF'F,-t@3.._k7Y`\I`fkdu29N.DSP","`4]BbU8WIW>E=Of_mRlmjR@URXLA?]k[iXoNCa;L]#h^T?_RCQ:"%J4de%=(?YO=H0*a&G1hs+j*o()$@A%Q.I3S)+0@]f,"%,VMp'\U(`BO9apmXUg?nT[p^lU@_Pb*E8N@\AVV0Q>Ibs#(gM`+945+0%'4hT2(rX-@@c3YhWM0ok[i/,^^^+(pYDO/6JYZ%*RC>p+"(QFqJZ*$cKFr2jX@1""a,[clE/KKfY7L;8^Z#rWLaiTO-=+K`WYiNG%Z>#Q+@K9kb6.F:&;>5[LAIRL4AO2\=#0(>)QmG6`La5"/6O^)e]\c.Q`(,b@%7]RHH<%uCA&bUE9+fjo0:K8_.Ule=2MblOn7^8;%W^HjnfrEaA0`WFO]B^XF+D+oS.a=Y(Q)Ea]<AEcc(sZ2nm>apC3=(fP@Z9`P+:8u'+nN7EOF\#+>,#b/LGeCp/0YJ?#[tjm)^"WW%)O_u\A6V4O$kG:D(:C]mR96sB]1`l0,LJdoB>VJ5B4=_q;UmKU5j%G#%[tqH3X,coG>QmG0[]M5<oZoicP[a!lV/5E)a@_-KjpW4%Ypr,\IUuMt#3[lpWE5X21kc@RkS1%Y>RVGY5V$4i>E#_S-GkS$%_X<$i+Cf^.^imsgs9>.Judl3mccA#l<19m8pu!*V_Y$jW[7V/%=ZPJf*pRrL_SA>$Q"@'I(i2Ed>K";oR<qt'%#b`VOE;(eO,ud=5";ut2]6L5`8Dk.&VCH'71>+d02<F>D4Co:`5#.tQr>J0%t$uH%-uMhRp.N)?>Z;HDrCTq8gPl9@#Y4e-H[/N&04AIuk][<<C:Wd]0OU\]dL$Bg;42:I%_=Ib%t?QOo^6HBm/@.I;j'63VKPb/Fke4P%7%u`N`^LCWk,<Y7('B5+[1ldlff^n(LkE4*&]@)Jai"rAjBc#:;pY`:E=4&bk?@qB_QM0tKMb,(46@d7SZCo?(8m'64-aX^cl:$6%VI!bU)]'&%Rd\g_'?d(&Y-"@j+V:a!V3KeF6LX^aQ7]G$HZLC"FarG!Va*2\`85BiDVNj;6$=UGcV7A"/#r1>X,CZ5rPQj'+>Mes%4Vg9RXkb'#OH#drgq*,=RuAE=A;Z(cfYrSFi&q7L^&,^E%_G$pkMC6K'rk\GKkTMJd$@UuL\`t&PnhoZgFZgrM@h(0@6-arp,ag^%r.Ze+aQ"gB;s&8R[e=m<1i]h$@W-Y5S<2),/8_cu(n0Yd6X-:C_94sXB/KMh>sIBrGqRSFhHmfo)!GIdh3@@#';g`&$SZ+-2eHO6%A3k*]hX5Bm98/##M;RFn+:2_6`7uh,HXag?,9geg<^=tn40qKIT>I%D51j.6>""/WIIi7?WB[?l6q2h_eEu,WN&mr53lF<`e0\1)%gUtM2>`@N(1gm&qdu<PPo)W!K,`(Z7kLS9`o2E]2.\`ZIP4UnDs2eLNQTWP?`1g^7k'XrKh5K)'I-)qhLD+`&@@<(NG2?Y7&XOCd%_2QINb;ZYk_ce-*FW?&M>n09E58[R<$[iui\Z/07ZkVr@#*Yd)lc5:QjuZ0cFNcHQUK>Z3N,EYI7`0KgW@,s1(gUpcf2:1`6]B;L%/8"5Q_l*pi##XaTHpo%noV:bQ9ACE@*k[G!76AU9LJ;CF"&'YZ[.:m("9BF<OI4doK6RO="LUBdW$M@GPD<@4Zm#$0Y!?6\_o7EW%H4VB-A^A%;?hN$()!P?CeAP]6g7L2)$-'WC9KM0>+kenRAN1c/>0!%edTs4"P)21nqnmb]"6.T&N7tcn_IU#%&N4c9K+k+'JsO.n%_FNj4_[=CA:b:-Od_[\sBri#h[!oZ=IWrYbDl/!2eaGq-3'QD*I?K`YM*)@ocI0AKScq\W`7ZO2^kn'GU\t9dj/q'#ip?7KH*8"2%iq[^o[@cS3[AqqVV>hP=.?C6#ZB%AnK>q%u1[2\L$MNc%>B_D>CQ=i<?B8tr8Uff!_UujOnOUO%.6kf\n[D8Yd[@2gQP,/8Ak+QU%[0&peQ:B["2WKnlQq4WPqh@B]Y@[0-Bh%)'+!chlhSYa40"[2agIk-X!ho=q8!2P2L^?Q(JP12[:G?Wm3HCG),HZ_4IHB:aKP:]=%\I2HN6jW9tUMTWaZCk9El8QP2s-8+@\ZJq2l^9!!8OeLT-9,G0;4Ap#EXmZ(;+@7jNNA8XN0BRPhF.45"nLAk6uK/9cr=O";heYJ%iJ-\S2ZP?IFel-9OV'BCOh!\1i?RJYs'Jp;B.H(QM8^O7g[0FC!>6(E?8'][Cl+Htk]Sr=ab3d*VI:.>[';<ReI9=$4o!pu07>*N%J0UK5U4:;>Tim)R]m[ol/:6a,h<.p(")0'BK.rID?b>1,>VsYc<,",im6S0k[q:)5WoEsK@A&@$0tqi=EK_#-Tih^3Z'Ht_',k?E%9X0GO0N@4YmAqa05:sg#RjjDRgkU]MPrcDW\X.FuZE"q81<o.+2_n_$PmoOtWe2d5`?%@f*G638GMj)"d99W>cuMZ!0:SHpo&E=t%j*6j<q[-5<H\\;.oemAXm&?Fs^<#A>'#0hiD<IsM.JV_QclR.fAOJd/d?[3ErgT`cL'63uLp8c(*D&<N9rOH_6>oK:Lb+/1gnLS+%m@O@jnH)\K[u+gVBTc?;@uY2DR?jD9Jj0lF.Bt,I160Xr+)bB>SZojMo=c[1Z(1O3%mTo(*c8!00mhe\MfBhUFJ"$k="o\`\?S`e%aah117uD22%r]h3GdpG:/1.Q1-4;Sa&0btW(N'Vi1n$*BkU5.@*mLFMCBYb",J%ZbF8""T)_s<IZG=a0;Tf+'Ss+-oMen&ZVibTE%+5\[t<LkGC,Y:EWfTML2FWAG>N^hf4"*(R-j-#;q8f/YiR%9Y00NO=\mWqJ:$//ph;?E3'NXsDaauTg=3>S:^f1n^)Lg>u$1eSJ+%YEl8YkHCMJmE%g&WPT&S0dH7d=#@SUqFP2$E]fjlG5%U?,2.hopS_P(H^?jd&Xft(/D\(6Pt0Lq+fdN&-&iEjoc4U_RMMSUd/mo8%6\c:!4c*-,imb+U'jZW(WKE'S=DoY2O+RiE"4$F7#X68GF(P8sV8?aG)ooprH/s7PeEDKLXbJOIlNE;8MBmHg.iqi..@N:'-27m6%n#W(6jpo!=b@-h\RS,5$%B!Pr06\eheDjn:[Rtj@SBB\q+n_),`qW0[I`X'Rmn5u%VoU`0Hmc:<`]RQ'NF_J+Ne`"B%\+qk(4^`B%TGh@tA!GrX!08nYLZr*g12p85#i/=SFUMIfTW4'oIV\a)7]g>N1O*t7R>%gGl?X>*!)d$],4$2+*p=M-56$f9O9?J>nP6l]R:lI\%G1HiJ)?N?_^rTQ!C%jCg;0e(ZW3W`h*D\`gFNEWj.ko)O8m2g9kXs+:Vsk_)r@8?Z/Kfg-2L-:%;9tFd1MKobF#TQ#or*X0mVX#E%9QJCDYS07/H44;-7j2Q5`9&$W*S]ZWo9H,r3AZeNX5RQfLpJ)VK]k?c=hkrEA5OaaLoPp4qk=(:CX)XC47".BO',@o::904gj\q;%D!%"8>\%9r6d4c(@*QkmO=\Q;4$o0Hjih"5HfM&Rr5;;o>'LpCAm%B!q+(f87&;V^f,nAHf"]rKe-J1M2nVLnV\%o>f?Q]Pg!t=D%d6]u-B#n+T&Y@elNSp"YE'u+RhlO(iRDsH:]=aIDBheCE]p?$c0-Ge\RN-&'S(uJTkuAF?!+o.LN7qBH,+:CU=tG;/MJ+n*<&Lb+%ot9(N3)dG7F_EdNP;ugl35+J4)opV;&*&+#,02b67Za$'J<>O$@8EZ;BSgP<U.)Y!O4=W(.U'Gdasmk^m#TP8f'bJ'0tsucM=n[O%HE83lWFB?<R^*F?m#Qcr]Bma0EJh(D_f$#b'\>C1<LeR;r&d$7?r`fkIl57Bcruf=:Y^gQmEB@NB#=XQ1cboSNtrt:[$cX]o?L70%VJrIgR/iSJW)d#D?Q?Idr*Q5mPQu&iT(0\*!]Q.PYlRNP5ar?$?tGtLBPYU_6n:F4(9@'a4g`?f'K)D0ot5M]Kh&/UEtO*]EM^qM%<f[nk0GlaCi-`X7'\k@`LdHI(naO$1<90m2LN&p8EJ#'?;e,5Y9\.bZ.4?k.*6+#8@h3.No')VXa#h=()tfG99&j\Q`+&B5=rjGe%al:#AaI1&Kb6\sc7LQEhSV3\k%Y;CBFXm;UP'FO#T.o-*Sa`dJCEG\`#VZcb.3o+R",#8)BR1K-"ghY)@0r._G_MUHmM"Kmaur.6%S#X,e#Cs<'@0&[/io<>CgIIX1#fZif*hu#u!ZXeMBm4k2GN'J#'U*>]@%&!'UbT,1!s9f<i%=hLobJO/290G7F20'1`dB(lS_#qi%P]>W7$1",ER`9A`Yj:-^X-"u?L3t^3[$6uT2,N=6_sHsQi!f1<aXZll#*EF?L(>'f5u67C0#e=m-gb:^n!5`f'=TOFmi/1u-q(gi%_l8uuqoOA%i_Z;8&-ZalJ`Y_:FALpQ5:3n=IV0/,X(-5=K#E&QnmT*L/^A$uaEGrtNd>H%Hp+X40n7Cs@_mCQ?I"1.*90`*07mL?%+=Jj!&:H6FE>pI9ZTUc2Od6rX)9>N=N#@J\(uiD9qW(f'M!-i?A=#^'e[87@-Ie\1]s\"N`-%;"/0iSVUHrFNS=1r->raqb->]#j%?m2]'"Yh!BiDTb%?>W<&Dj-C/$8)#^[35C7lg"!-KZ^qGl")S)Nb]lQ#%D&1/0kMK(;o7e.P_?;RS<oc``JSc`&KeI>PLA#i@>\[%p\CV#C,+G=2`$l%M:&?r9ZdZ_,/(W,@^_`0PP44bmV%7el*XmGiCuBG*@1<DPI7roBd+b/QDj(]].Xe)[T8H-\AKl7iA!\,_l8B\%L>/mQR7B_mQ)(m/?3N$F:"FVXTpU[rZBU\mmS&9KFK)#AVF%YDb<:V20)Bd)mkeL>c[OS.T^6b7P'/-P]NK8K=k0HaH4iKU;!ORL%XPZ#q+\DPG*S.S2dD8[U>3ca#+c6TT)T"N@ZT/er2qZEoY_ZGC_e=cSRTg50't[g502A$=+jNK$4Un<!OnR/fGbu2q3\'EO+!"Rn%6;5F4XW0/'k;ZY(QH!M`7\#t@3'+lP`Fp#S=fn7]r`C1R@Zg@73hC%t@\TUBH;&/*:rU@c%:pQ5fcQ."]52,S3Q8/AnscJ5k#tD\%c2#u;cQf3t7bsJgUdCH9VNr>O.dDg5'j3Dgb_0Sf34&s($S=i)Aj$YVh!J:HMQd62MT1fY.kBe5=d>mPP#g\dTVb_63\]j`D]N/l%<e(\->"c^VXS=RgA'p[3(klVRj![#Y'<U[2;&-QI3A4-dpJL5DA:uo5M\K)BrDpZLiRJc0_J?ns,J;m"A;%FNc)LK1A8\e<pNAS.%fcqS1S23)hR^^oerP$?l>F)J<+M8gU+Xc+7"D(\*K-]e@M?&M&AIIK/U)l7opa_Jr0-1es&0arjj(M,rj=tP)G`&4d$`MRX?kYKl%fMtg]5T9I*766KIpFPjcbC6?0!Qs@ElbL8q:J]V>KE?+_5uCp;,AB4KJ?aVY,ouVPX"<`#i8`IcM%O5,WK"?a<ONc4?kJmA`dYN/%jI4*X9aa-79XnmC%7_IpG*bl!K]o8&U8e:u6F:,o;04+"#W1ruN@@f$Bp.m7!Yo3`iKTkG7q/-H5WNd'E5f9A*N?).ZriP$5F\jl%[N_b\g%p>hg#Cr4+=@476XG;20Fk(i#"`>)>6O"4Nt>b9+^L#1B?J+CC7O7Z[skoLMgXn_$u`1hd3Y6Hhq;I7Q6RmlV8k%TQ"eI%%!!!a:eu;qg6IP#+`5\=C&<.&_qhV;de\g0hQu"6=AV[DS@LBm62h[;N`l9nmrlrlcQHSV@JDf]'!ir/AcnU#a05!+tkWe8"8f7bt%rO)$+D3<Q&kI)k:4D(k5i'QQ3G98BHVadm!)5`.B0QIbHJ?5FJ7U3f$Z@u@hKI@a^=?n$5B'4CP%F2KZ$5sEpXY'B/7'FD8+YaX>%O[GGQ[c0%=`PPWO)=f>,.`aJ'&^f)MZ;JR$#bZLW=U9E(iRkAfe`/49))lK[Z)#<f=*?1P</e0mkkB'iq(0cg4V1(1g9bjM.dt%7%_4r4i/'?hkQKT9ZK?NiC<c++38Ybs7$PSs]6@?#J&7i?agH=8sJDDED?"!!'AYoW1R7V/%O+`ak2?W1_F1gTmR++e^ZI^_$:<fs[%GE3"+WZ'uSehc%ifu1GQa4lJqf?MG'aU]TR4BV)JmR&.6O<:Ak'f`3m!H!Fm%_U9r7,0b\a]T1?eY<BSO`e+X_*i1>H;)mb,YEXV%/18LBH^PC]&6Z<%%3gP3>GDa9k/2ScK_s"^9[^^ZNm9a(R`N^,+fbClmY_/1XYo,hk-/X**+gXnq:&;@Z21lWo'!I$+;p`?a7--h%n3^Iik(HGB5d@k&%W)71*!IV@-nNX3G+UT8b/X2$*.gj"44Bg4mohBf6!fPbQm!oW]J$kt`e1UkGl8'bbVuj^.07$rRon#OZ,m;H%<<lrU`keV0F_7BD_lfoDQ6Cro8jggbV&sn"]Ssl"o;QhdeQF6]Y"u>0gDaR/K)^j%0e!5WQV81382cC1LX'A9I'jX8!no9I8pO&D%XXbr.Q+h5ra(R%DEAq5Z;0tG>)uI,1Yo*[='q9p(P][OLIiOF$AS3?Q;4Q_bDKCW.Gh+%>AG`DtkL#+pTtkKcIJDJbm$4fZ@K.rl%FM:#`-_#,&1<r2<mBRQTDp:D/`-)o(jM%IBefL-58cdU>YY*+BfX2>j!ICNX9T\./a!OeoPe'FF(rO-5XIQU6D4oOLBGG.2doG%0%S7SD0$mA-$Ib\Z,EYP)H4.2b/i<7Jr*d99F)iUD^Y[=[B$L^WKlo^J8d-C,YaX-'j42'fd7^dpJ7QSGs&MmH!hE0UTK@+2bG>X&<%DJ@ZQ8Hu"NLS>-u2<Nc334#&rjS0Fd?B0JUm"@H1S\]9[gOln>8tNlOZ04=5ef1caRSt%['cfWZpF#[o*6-WYej^p.(pcP(S3eC#%9>3fsZ#9[lHB.q:oP8M+4Knr;85+\FRH2$aMjRT!_82%.bVPUN*g8GpR8lZ,/n_>-_-WX@/oo'gX99)37_:MriPd7i=,_?@-=V@M%B/r"J?t^bE%#1_GB=ff0@('*sYF3;0_;R(8$,`ZqR[Vd1SX)dd.2K9o--]2*Q<T/,_$UXVhDufJk.pik&E^ii0l_gl>XZ_,7imsf%`r#GtcJE9R9XF$_SCr]QF!([N'd.*/\3;k.>k2>?ZUu&PJs+=nSV-9[b3GB5lYc$,(l-qk_YEtN/N.(2.:T%^R]6k7m#8pIh6f$n%r*e/dGg+OQn>RS3iUs5V`f"JCbc.7i<H,tRf#QYBmm_>b."EOl9IrI;0b]R$@aH6fdqCI>(n6@!Bl96sW!#I%UK@q1[;rRB@o]&l%^!0W;s/p!DUB#I#2O'l6@`&eHZ4=b<O2^<g[PLd>@[CT8bn<J:X<jrWql<6Md6S5BmAs6h1"NV]@`4!+Zma?'"te&8LdDJ;Mf?,O%@[(i_o?cLQY/Ddr9+S.>/5;D<EmC$!GfDu")Gg2'7c0WLJ>9_NGemJ^-:D:D#`GpmcX;\h@qK3BSQV$$GD[S6gDQ.m<kirg]\pij%[,!rm+Cr'F6q6\MWFEME;/aA>`;_XL5'ZlMhZ!-?rG\6Ds#Aj6WC9GA$*Q%ETNFg5\eP$3l6-c0gH0NgDcX.VWcYohk2*p*I)S0C%CGuXhS[$IJlr[mSJ%p:'B"`WhRG.t]UP6ENs79kY#\a%HFH3s94<4b<eTDR%ViCob%m:?45HH_qVUfE/?m>#pmXg<MAS3.F7?df2%/>0O1s!lmE#!fgO"iPFDHk1KDpl5$]QDK"`D!iTh'c(5.^r$WId[t*fC5>r;))\NC"Kk3U*cNh>N.\b>F'4eanXC*8=7@aO);9X\%kaTo)72t]4'7lhFciG]b`G-NMU,\*pk]G9%X\aWNUA>@M+hH+Id*TnjrB8,IY[8>;@A41En20WLEbQhgmAuAB(Ecb!4_]=#*[P4t%*P^;]Ts$QgSg5C!g&Pa%SVped"TZ&irlFbO9jd(67pt'$DbrTL*^nN)p'q\R\Yd^ULlDL74eAH\9VEd$f:0U51Wl3LA\7jJ9T!P2%6kl.0Nct/Z"lr;2;RSh:&9YK[b_Sro))o#31Ed&p13?ju7>AmXGf:E]X_nl09S\f1!m`MYk9Q(Y>oWtsZaQ3PqMG^d%6*99gWX#U%`*[O9EG_D-9#().oU2&0;qYKbD28bsb1FW\Z`&=i(?QGT#O,k@RG*"Z"$rr:ksbWGD'888'4]uQ"cI&AK'/2/b7ic@GJ:p_I+t^*%:$%Sqfj:^skCPU>Y:+7Nn#up6f+4_$ZaZCEcb=MUY`1umgYNRhN!RcoUgJ1WT+J:4_e9=YSZao;hQPq1+VeTcX4*,g$#"(Y`8_P%%<5M@<.F#<A,JIkBf5'O[4X*GpE(MB$AuO=(QjV[ZU/Oa`K`kf$OF#7O%Bmut?-k)In;1od,'pH!k(@+9:EeEm`(P,DWmGk8qb!,o%gYkZ^@$i@%:k94c[5;EDCrYR,dLTk;mQjJgd*7kEB7%Z8Lj<0i)Ug$0%"bPrg97gMIEZ!@?5nf0`B2RsKN%,=X,iD5e7"0OP0G*o%LG*O`!VIUlTP8bWJM@Ne7\_a)^<3!BQ6oI5Lk8$"ge3`3COmIn_g>*idD,'G]$:@gXDD`O9=0biB/Z.ZiE)=3%9&)TAM\H\4"bai%VR@;-gK`t+*9L^o_26ZLhB#g5-R3I=7'h/1*+,/JgqGHOAmFrN`\['+BNc(?UK4F`qA9Ql#V!<KV/5];fC=[6@@m9004Ro`DM:EL%%9(%1[?O<&\6Z.K]P'^EAa=XCHK#:JQFS+@SWBnYFurZETl"Ul4^!G^W9dS^j&qCtaFVuN"mi-1%M)Cpp\qu$Ao5b:YRjTSUttBB%a&bYK$a,S]c/"Un6f=E8G^%#rKZQt7]ZcJaQ-V^3ec:[tHs?K-VgoS7nfCe:](b&'JmqKn@shu$l]GUCCrZ/b-kaphl0p?oKu3Tp%+&*NS$Uu=fi<D+pA&O?M+I<!)S^]c`11%R:_h/*MpAAB\r!<LcPOPFdXr4I=(;6mSZEZs?:NMt=9,b^/*b=2(5XZ*FISC1m&g;0s%"n'f+>;4CjeS\d3i5c,X$\IXp9jeppaSnACLRJ*=&-gN!.+b0"qOZ;#6Q<Ga:#Qch,N6n@XTd)s0P$7=L/CVY1(j%onb1HTgOmH*%H$a$ALm0,&54RZMN$)oEVX9[OgRa8cZYZbSN.Hm]Y*J(jZJESW]L[j/ggfF:iuf8PA_`t%=d8G3Nm#i9KM,J8`NV7ae?]MWF_DU-%X^o-*;\Pg098e%!l&;r]FNKL9)RmbZ/HW@tm8*7giu!a.@_=a]o:&r<iY9>i!Y6NdJ.SqYQS&:Z/r5Ung[u2O$1JYb(.RR4&'4nc%GEdF>V;TNAd_L+P5./GLHlgA/Vj%'OZA3\_!G$G2T2WA4kOS\Ed%fO6H9?_u8P&?Y*:MnWJ4=cG?ncbV"$_r;ih$Up:-fY5a@4Bu%f@'E=8>e03dN3)e?2-^P0Y[Ae"<PVJpGGjDm^bPuf@,`.GTd0F2%8qOZCjB"TquUeiVStI,nq$PcC=9_EO's%dOKpkNtddeR1Pf>%Y$(kLP&7Jj<F>GM'i4=^JQfQfW2JQm`L#`@0!r&065Zc(g0(="m[XfW+9E\n'PW%a[;kl%G$AjfC](dX<e7to&eZYhBmANna5',*%>aPYQMSpo:8@Z@@kAe)_*Nq.$^+>Mh9L?OkZ)+Kr4q69m/Tg0MVjWCPCJMQS*Y@n*,:rIAU140Z]RTIA[=c<GXo:F9)p`ni).0N5%c"-O,ciB`R-JXo>(f+4Hc+D]$fPC1)BMre6QN"O?LJlcE9NMMap<IStoJ6;0RgE\M7jB_5WhM]>/%AM/lp*??IMPPPhplaDj'2A\%g/BZ-Ou,Hr90q3dG_PqHTrUW7h(]a_nQ5s1B4BN3/B;0W6PR_LR]r+FY8s2d\`Fs!TR"Tt8]D:CQ_qY4#U>;4EZ)Sk:*$8lUpmZh%UOYDk"ZL?5KR_>!QdYc:?sQ<dj1/K:NuI=:SE;%rcV1`-#]D("LA7=Z$#MHnf$4E'S\/5Jk.T@3!H[uH;tp5!;.e<]'&PSp2;_TS%RZNq#B/]7Fpm16Yp<gRW<9;`dR@s5hnFiW`SAZ3\fgtO6F\*0Ek`IGl*qbi,cr@CY7g<^efjQ`K_]rbB%]:1r(k+>1[=6r>PB1s-%F?)3!!VQ8%X&51n]=1i4Tn'\8k3G__*"d_%!oUdpd$c7?@K^noV5</WUN4KG_V0^llA;mb'f<9TS05&)cN(TkBeW"C(\(Kqa<N@M%7?#[SC'rsZFm.9>W#Or%QtG(TG#i2=c#FG)?<!*0IUtg7p)2i.k#0p$TK1?gWgC=;Vuc[GCaTFJ-7b,P4RWg>=gAs!ZT/q6'q_(S%jV#6HO4Q3c/B;MB>->V`G':i;O]M#BeTd5aV$0FQ`OBT9Xp%B?FcLiqC@s*[3'skWoK\kSaq$)R$K;n,e!sM[Z"O]o:0NSld:O^p%ba\8bMGFo)W#J*+UU'5HZ\f9[o"e<\oUq-@$AgDMn$V$=_4+"C+.KV@-[6GO2&WSQbZgORZNX0t900-7p.W&-:Deb+bV[>n2L6_$%5#SHON%@[9CT;*S>->V`G4&+qYHI^ga_25Q9#'1HC163YX7XcVfH<Ig!D+K@TXr)Q2HUBsp$5Ia^-pn<FTO?PZ?<d;6+8CC:fD:b%!^t:[b6Y8l,="o@6YOp:$Q;o[AKN7KGfQR%XgaJO4e0(#K88Y=Wc/#qn[S]DQLuX[Z%tJsEZ3t8f1(G[:_lBu?B?r$d#<r<!t`fo%C<B`e.&m2[Nf@k6TVFoP_G^0_:U=Z2-.LZ&eMk>k8!0-d"7^_+@QAB8qekos!e'6%[Jt(DM=L?hlD&M,j7'GolO67R1RIj.#kR:T%W't:"Fh6P*K<`WsZc_9uJ2i*l%jM2$2;rhCYk3&-XXQI8U*>fCSCd4;O9/+hQP[*#+=]FN,L&(YF43W_"c<s`"sOX8D_5h]89<nJ%#lS>)CC<RuY96q5k7!3`WCKXC89:=Sok;b5#+>jMX.7*[>A-_9ROdA3>jJZPC6<LJ%<02.#%FFF@V\oF6'`u(mCaP($q/.'/!B>!%SucL%Y!e\DfO[WIJ/Oq-m7jWf+iI^6cQimC%%*(GP0*K9WY[=JXG;,)#apnB>?[9"KltLDk7e`uG[cd!G^REP>7uN].rka?(2UDD%\L)bkG7?!D"u0K$Q'CgiP"o3oTFRN_Ge#6YgcR,/VPm%[UoGXdLs8O6_["i$j]0MG>jd<A3.hq^NG6(JB]`OSMHbr2\YB"\PV/;e%:0_'#i8mIoP!XYBA]I-U.j`^_YEY7W3Kp#C?a]Mu5gNj)=D'=:.4H'p&g&E_M0l!M+uDo;aL9hUm\2,&eDnq3Mn/R9)4@Y_8fi;@%Bi57u;])=?#8=+s-'Pa70U"%@EQ:+k+mVTS!53SiGR!3Un2b/PTL<\sg[</P`7E,'_1DRVd".8mc,VUu4ae\Vj$%(8$!!<sPY%6F%p3-[LKhi<o"Bo==D<]G<($WEJ5UD7fWid-CAj'IQb)@M#T`&OY4AOcG+\FC$Ri*paqHb\HBW8OiPU8nYBF-lD&HlZLEt%p\EhJL!%f\97*6.8Q=Cam/oWbMi+7R?Ecbh>&;ABh[Z^dGW3_!@GTge1LKq@5DV%\YmtV91]KfYS=n#P>To7^pcTCl(*).C+o7V;]rqBLG0r%Fc3(VZRojq\!^?8c%of3>lQK:"E?i]5s<nW$7l<3dlag.2BI)63!5Y8&Q\Z][\`DH2muQ$,;nK+aT^G&7&brUY-Ir!(Zc7Tih+Xm%+f-9s.?b1n1%f+PI8\UW"^04NqT7_?(:$TbejQ;1&I&?dN/YHmKP&rUS3ql+eq^`/-tt>WN2Vp`ZXeQaP:_U,d;6i2H2::5`0bfr%pShL6B:<88kjT-r@#Q@<E5U8R7[&Kt*+$".`W6[\_#fOsi-e&,BfGWO80dTXabYg^j*lK:&7`O]cYB43^5#1F+L7539><NI<uS5u%:BV7i<0))4TE3u%_ji+8>kSQ)%i]!3mg6GYb<mXt!2P;Ods^SG!i!qaSLW5XEjmWtN1MBA'uH[sXLg5Sef!LU%;D*I!ok:RhE?[*%q?JUaW=eN*d2^7&D/ikM.r]DbQ^Y=HR7U@Hms8b11IBD?gf_:RKWP'aj!ni8MY"Ba'PgZ2lGWLB@>W0U\\#FopEpM-F2MjnO6V.J%6Tg*K^M&9E^'LLGQ(_086+r_g=+EOado$)NKWJ7*;V&g=PH%\,9V-Ig0l]pW/2\OQ]M<Y/R=l>1bN?]Z*.oEh5Ah6#Ig*gdU^9\P%fG>5iDiSUH<ID*X$>OIn.aom`JdR&oToNE/\=RY%,:(ZtVsu_s(hK,&#.,#d'pNPm^CCHp>`^#,1L$]9&OHaWb=]4gXuL)FC+I`s%<.bZB4?03A^T3=N.O%r@:FW[I+X;4^>k/GaCo?)Y:`./apF#b/IP2;k`jW7OQE=TV-lsIV&8UC]8Y*]U&<[n!I<7OTpP,"5li;Nj%KLtR.H#B)o$5cEucW0O*%P<R-"X'FUk$hFiF:X:ACcDNOO]TM\ToiN;B^9L%RO^>tUq4Zc?!DlFr<fPoLbTR0#C#GSVVo>!bVUQ-%TreO3=a=f9:NN^9?&uI5Rn8fJ$,g-]N?cq?>4&8ORF'."ZND>,d%;I`p-Bs5Og"?VJCrgYCX;NRq)73Bfj+_9[uk);bN?'Qq'O7W%$>R-7?;&iU0<`)5\hj'FkCRH2Rb%i6*,1APZ7sVG0e6H.rXg!pC7f'(^bquiVqOhSnI5^GVR/;LCGq.^dc1qj+eaE%?t?=_;nk!0%/<,iJD3o."!`'ecmV4U)f*jo14)4Rh.qA7d'%GH"+NPV[I&&+^EA*(=F(?(YcaE02nENMW`WTu[p*2r.b`5MurC1:l$-D5_Y"5au%aT$L(UO<5ug?#j6lsLCWX4p@O[`eSNaPNVlRAEiC37UaP$(Y;jG"!%L5Sdm0<8.pBYF0+H0-`]=/bs!!a!'N45\T40@Vo-)`dEM3%JoGP4GAV:QM0RA"IO&:CZn(jYI1)IHV)oDsK/3t^%jT.olEV[Qog8>UG%N*"HrSmu>H9XJZ+-NSm]L?'/^9)X0]Z5s=RFX@[E(2@%6Os9sVq%mBIV'u;PBug7-HI,dpYK""0Q8/TVd:EqRE"@k5U^DE$[1$n_/nu929c=e>.1hB[K+&n2S%To+*'Zr<e/,bNF7SYrN-O6%pQXQm/B&&UNOX$XV_K68*CI](j^9EPGq'6d,4df#N0'H4[^n1-G_rK;5kL'jr=gCJ8V9^ld%j0i`j`m;8;OU9Q.W6qR5fdebkf:#%Mt,GV)o%P+'=i,D8W75!44Y9CZ'U!D*Q`Ai:Urr))Og1Q_dc>`4`l/I%P@'"MU:>c+aaWK;9&7"#FSR1&bQs\Roq=Z,ZBi(A:ol+%l4uuZWkJ:8>>\!mnX<?%=b&1l<GCpl>;!F(&pj5M7^OY*)7AK$"$cK0M`rA1;J*):gCT=2Tp&B(5MZ_9U8pg1))]HWg3b*oZ'X;j%Ke'8<!mP96[+gm+"L@gA+;WVm>;9LMj%,-8bD!PVm`en[@6F?pk&U_o%Sn&_Tf.jl;g=@pm).8Wb,CgDQ4b/Y1A5eB\RA@$P2l&)%2iP8;A/lZ_QPg\R3j&es-l7[M/p<ajLBht"F:LmmP]girI\iu,%[\gs[8mR>'fq142+#CH9n8%HZeC[dKZ;51C%cbg*\UR^Y)")6%9ZVtHc)GT$2BulKY.Y'5R8m#i'/Y=Q!SpD\38=YG\?0#Go1rKB8(on&qRHi&6SID\</"=IE[>QH!XJplQL5kTG'g3)JoCU0/HXs3%CE0@X'Q%5-WW3W=e[:?Eo7q"qe(,b:<BeZ@Ri+kK2AF^eRI-iMf$&h7Y`uV7V_*Z_[dpb\!XEn/HdAZLNl'FYN7o10BC0$"T*[=k%:TTp$T>:Z+LAR`e^"*F2JEUu3QWAqHqg;0h0Qi0*$dI]Tc-\mLNW*L\$^iRapVUea^@1[#"`dOcB_WoA%qZPo<'gKl^Pc&3:BN.n%]Xp,7rX)09k`iK4[akD8@Xd);hb4QjJV[9]S(nq0`^.shD:S.3qi\q'k+F'^Od<T7/9Qu"Z?9U-7)JmOb`M4o7<W'ZZFpHO1V&=8%+CroHWVG.Q?psgRanF_MM;&gngKV'in!F3BHbY]QO1fam$+,:,W$'sFV)D,m?9H>bWNPV`JWmu]#CCr/bKKURl:[q)FKu^ZASC!e%IqVh9:9q@'V\H-P;t!.gP.e9%ZXf64'n'ci^,CGGf4&R%f8cYj]lphFfurK!itXF!fh7!^AV)8`$ZU_G/8:d.(r=i*-tIqmg,n-&%ecZ%c#VjQ9BjS6WlI_(fpC^\7-V^j<=]B[TERQnh+tRW&m^3=imPPiFm_qjB29G`5I9^<o(Q01!7le]J3iUjl-J==K-Z5%bR>Wgh%UnsOelpmKo(ST9lh]<]@?QgA*Gi6lhp(B^KWO1>bE4rc=B<o3SqT3RB2=\4iHRljg8$Xa!jNgdQgC(sp:pj'l@_F$=d5rA&L/,#j%Ff<L7__F0n?52gabFcdXK[#%+:tnc!fo+)g"`mG'\!dT6q+=IP[<<ndP'6fl-[W[g1@_H0]`kkjM'Vs3V(1.+V1]m3XT6jDp0QF^%q\'6tm,bV,N*uLpAQc;J:I"J*<<hW"kW.*@3?"fd_`7@d)=%u+.3`/oC@bs+CNEJ+Pf^*@6=)Khgs)6soqC,ua`07P80J+fRj[0N%p3BPJWi$t?@cTNhrLg9E=If48&`t<kbT<f-*ep(_2(Z@3q0;0BLkN:`g+2mLGTn`g&ict<%:[$;Y<)F.BF*,*fW`h"7&gL*'Mgr,%H<C-=Bkep*fbm:ER/OF"d6+./%)Zb=T46I'GWUZAi@]tQFB9"MTd1CRStu)LTa0P*$d7C.NHYAVa>6Vc7=8ZL2#F8J(7X,l\ZI[%%8G&:j*,Q>@@bD*sD8cSaLrFc_Vf%)EW??'",p(V8$L)AKnKB-SQ$q>Rn,kp[rJ>TAg-1D&e!_Ua\7r6PKK3C_UQHkT.rNpB1C[=^%Mgi-I/`Hc=Kh-67RF7Dp@Y/<W_Wi#%Km$f;!2Jc&e_`(Y@A[JC9WuD(W?I#TF[OJj#NkINRG-1ISNjJ'()9>9VjZnld,TQc)'f"d%P56ONFh:[@&n02,`,(e-`<(V&@ZtW\`/H'f(0rYoK3X=PCBWo3pI`^!88VtE[sRb\&#(`c*aFR_Ce@,l"0iE#ErA&qlDt0'BA2),%2[ddT""KJ4Z+k`qBj.fYa_>sR,@WgZd<D$tTcfuIah;FDpMJ#C$+7L4c*L*3XQ\L.`%ARj0A&N5M8*m]+TgY<1_09#S=PTd/uXhT%Uc8Q?2BH(S[Xs>+l[FC3GmJ'_1^5l0]_SGK"_o5hUU\iWLZGO*X6[bPOs8iIhI@dI]EUesS(ZS1*!t$bfPHO2=Ec,&hu,"JVhA5Q%!#VDg2"(SP%t+^<C#'`A0g^!+'A6OfH.h)[C,psS%c"RKn^4T_&fYU<mr-E?YWZJ$h[U7I!2f*PGIk1TJLD$*Mi<]^XOEcc?j5e(%`ZtO/FPp6W3@;[S[72)^%ec*+aT7J<H2t$:X%N4O%tPkrEuREVdH9?0!0o>@<GuFaZ0M%G"W9j7dX']]?*c$#<M*t:<O/BsZ=[+L%/XM']_-pPGb0j`f!+_#K7nZPP*Db!Vlh4M;1P9f\^M`+5`.7$96LW!%*OYr7QK;o5EY40p4cEom3tm$AHHitfP.`'+Kc[6F>Q(>.%(4F3kS[D*.@A[joN/&5rQ+(YpUTscM3t$<2]l/(7[Ln>Fg)'5Me[tmkS!6L)><(AV'+h^@^9o!.*2sNe**B*q%)8:iImnY#c:h36%40>FI2fKT5O@$77&8eQ'Eu2!VXB9kJ@1$nac5]f@c>4VC`9T[#79X@bA2/,NqhPrWhF*;qVRP5LEPj?!C6T-N9tu#>6pXpNYGO3L%7@bLrQpJCF&?b*_jP2e[f2X'ZHh&epb4aTIdI/6RYN<bs#(jcgc<HE*kd*NRA.&.R=7-7@NNH:4+INdSs'3#/(p#ThR_(d4@M*fC%/qt3f#t$su7=uGGDG.:Z(4udi8.\q^,ldFY)Zp@eVj@<DkM<;=[9gr@9"hY3C*<6[,2W>r&-,[=)g@7A6K$-O?]&7.&u(O>FP,?,%&U.a[H?n,CWII?BV92[M]*P]FQZ0mh/Oo?S]nb#5(=\6MRU6`-=Sag&T=l:qp`7h&&3=!Aok^2:*1:9!PH*-#>Kk<6Lebpg?I7V\%h"/297hD%I'ti?[dfJYC^?C4g&9sP;k@^P!pj`F"X&$0/.XP8C(@rU"Vk6qn$,f&bM/Ggr&$_iWU^fgS(*g+Lr%moQSW.O3KlN^J%rdmEp7jjJZ>O8=B7MR[,+,idc9+]%"0L2`'AtJ/;X(%5%An,lpaiH%6`>gK5419CN<PMFXq]'Z^2%MZE@8Ri;br:s3E35rY[';1f%fk.b[)lHfIWf=+Q,qr`$Bn,bZ0:4_M01W/qHehC'QJ?jeesAXtj.3RN%>*a@o`,nc0P-%joB)\h!SS`=TF6R5)O%QldsGk&Q@P?2%6KHRQencfDR(WJU[`IAfOiZB?1,AoB;2^FB`WN%&oCdQkK5_[]@M\Jt!md,_pEKoJ\52ZBS?UY^UhG>/I]";.@q<M[HLE:H^sJ(?%d4Dc/_+hE;eMj$4iU'Who#ah%LS*[$5.ZOM>ZO]P)jf2q?l;OX9qH31GmB0>44g^M.J&YS?M$*3(a*AH:i09B<O`&iFjB^_k.G_>%`G-t<RWK6>[/cnH%&e2K+:<_A1j6XoVNOMf*-7NI>QY/(*q`+\$RSn&Tt_3,,*'4?4_$4&@I:'m:Vt7U]bFc.fS5Ij_%GPiP*a1*%P,OWjq/mcHD@6ThZ>]HbV4QII0'uLE.2ddM_DlanX"rR`;<FMH9%DOlbtR=\%St7ClTs!S_\UT5WVjnAmnr%AZuU:n2kO-#?XQ!i%rQ!WDaj0<TeVQmPL]5]]/dEVIRlQ9.k1S1QXDJq39q6mAM1$=UG[@^`]e)YEr_RPYL^XN_UYi`;/=@*TpFgA:A>-M_I"8AZPL7pa%X.L/R*hT)-U>W#RINRb('\tQtaJaTN-?it+$-b=#pS>3,%"s"I_TKK+;Y0=0A0%s3&T)?W@e"P\]@q2/1D,\BNR8ao5TKSK\\1NX%fPkuokNJ-f2+G7CCN.M[Fc/CC@<5i+0iPo4+B1(]MVhWkblTjAPtS>;dJ4'[*hC``,gg<<93.TeZ(#6e3-LL&&dR<N3,Z.#SSYkC%#h<9NV4<(OoqcAP6J*WfYbHBTlET(8(U*YEXZG2FRY,R&:h+#gcd"mj"79i>9$u'TVBmfoF^jt=!VH*3c-Y8F\b/BaG`DcbZH)sa%?cM[LW8O\X&N/Fck3gcFh1NNJF)NdeUFej?h2HFriJc7Ai@gha:#Ud"Th4J1p7P.Rep8?(o>KZFnVBOs+_4#lB=JrW`#(HF7)A9<%p*[dhW224dnt[,8-l\3TrD/B/&_WRtf?^?K),F"if@F/V!J<Q`bI$[Ij=(MoW1V2-&%s2'0PJ3b+!0E%%-^j!D"e-qKYcJ.EiI40%>NDBme.kc^Xn28W,[hg:S!SNa=1j\XDq4W1r?.k'$B^,r'RpHgnTagsej0s?^n=AT%'I:'l7'rIpsSnK6SjID_f("nH4EkM:,Y(+%KNVLOjg&/14G@eMC/$+g+B,ct".g&kPe]%pF,kjqkN=Pb"n)_`[@+?sN59:n[C'shDpCQj-Gj6:lX"0$U_pHpfHQ&Gnp:jEgHRE)%KsfI+aH%8*"GVO`lZNnhg7?'Q.;D7KV3fat+m,>F]j'dl%fQF-bPuY6AO\?4Rd/k.3NDQO#'&#M$1HrT_@mc,9J:+S>tk3[OeW7Z%@H`Z4Dc??K'ojb+KpcrB\EDS"147;!-uBmNRR[=J!(?Zc?.5AN1qN,Y,d6^%N_=T!l8sX?kcGKL+dHqFh\jZ<WlP->O8lD`8%>'V%V+]9EBN_Z),I=qqoN,<9"H0h"(c\uj^9D%c3eMFlqX!?g2dbA<C2!M#H_YN2S)>-u7_\?;:O2]drUP08@[n:ORBJ_]XPo]`W,jb@%p0FSEqK2UU155]oL/PS\k9D?;D4sF[KK2PZ\\Is^#pMEd,,b>PRb_=aG5lAQh@hq_mPQXO%.J<6(5*%l7r`lkl8R]Rk2+!,QQ]`S%(h:QHK5noBNfgNeVOZcFg@uHi[\`s9'NUWc9PPLT&7o[@$A8\s!tk8A;JZX"G%/d]hVQX>grfP>*Xbq4Bj0Bi3s%.$.cL,sof:,q%o/h6tjF4T7##6p5Lc@;OEoqmFprdP[Gq5k-,:uD?oI,N(*k0]@RMOT9c.Ntg^c4bHH/X,S?'U^V-HP>aSI'30%d@SL4Vb(Yq[5E0%p8Cm"O%-nZ'g9]##dZSs@s6MK`:/RcO2G[d.Y_:>AIZsm4#u&RHC-KD<pdV?L>jBM5f_eh[Dlk'@*l->Af^a./bb3d>Xb#@[V]IL%%E6#>5^c[__S&fZ,t'0K`[N-#c_O%$3cr_Z%%4D"CU0-C<t4PW;F=hF\!RfW:X<#`mTB1=63l[(#jVj%&b-RpE=n@0UL%q*[703.%Z`0RBnT9!;-E':uA0?UV(Y[&cMNuu?Gj0GSJaV=:1:OQ,m'`R'+(l;Ap^.AN;_MYBfh1[$qb6iYcce46*_Iq#;9$eo9tJPY73F9o%p)Seq@lD8.%Pb/YLd63?`."PWKaF/Z]dU`k(5P$<+=!bW*"'U-C9lWVQR#)9b'j^d543YSWIT;J]J](s&<:Q]R&[]6^'):HOaG+X%F@C0M;6AY0=BV"l[(Yl*BY+Nh0+e0sN[J00fbpqaB!e5gHca4c#o86Y$>/YRm!JtT%LjF(0TdbP!VtAUf;?_@06c-B5Hg?m$!`[5%lu;%OVaSJGFZ[&t8?81M^L@t"G:FWO.^Q0m*+bU8W9QMa,Qfc^:I8W1+h]hHbe0NhLpA@&KT^(l6hspLop/;dO*r?W0k4gp?X1_.%1jc16@*pkj2`$85G/g[imRQPE<5FBQ-nM>p#9.sm1(_XS^O;J!hoT?OB^`4O(lMIG+SUp6ASi=Xle:UkKEg1()4H2"f_@$33j0q?%?"]F@&r+-:\;%^e=[V'jXr.#F;_1WMCZs*F3n;gT2@sZ@gQBchS>!)qPaT:Znsn32M]jpB:(@TPZ.s5>d2EgM)e)UHdG3*sRui2*%5i"M/3J5^(D=-qG<9H-\1QOO2bBO)0mpNe2O_EWJ)ih``bUh;R44Y:.@R,^/f+H:f>^7h/lK];TEma?>/5%)Nnb[88o/Hc4"(,"l%?E\PUJAla7^n?VdE"J'H!',_Ud'>KR!WX=5V6VpJcG>n.m>Q/lj,A+$o-l%5`5djpVj54N/,ft>hSUb)ju=Nd1Mn"b;[@"U'M7^u%Xd]J@CdB1E3>7odnrr4mJfSVJMEAF9,0c++#CH/'4C]$00]_fu\,m6-fPM&h*SqqFCiP<$%;aT8*e!$fZ?un3IDjOf@_7W,r786+%%3H1Hbl$t!1;aL$eF(*@3(9-H)Y8dtUp*4%\i-nj,Qscu+<P@P0",WWB[#?,K"%8oj\U7j8r3I+g)=(O4<a37G<:8O=ZUAdk$*^e%>^12\7heS'IO"<bi"G@(!],\HZ!W@1pk>n6;?VeH\uiGM$Wbs:0i&0YKRMM5b#@FMe[FVHSSEF,TQ,!QiOQbEh62"oSM?KW4j/#[%Nr!6DiBYAYf7ifakq>BfO'o2N+8\k)Ep9&liTO.Ik2osmK8O.>%%]uVNP'0M_COZ6[r4C6NeP_o6C<j\%oqdCL)lQD$\TqE#9o1g%jW08n0KfBaQsfQ:3*rK\N[X.(&9r"YZ(lqK#IGtQ!kOs%_)/W-TKH3l/XatlIX`<5%jU+<3_$B.&.cW%dP5&F#9q>.kpg&HBp(ef%_IWI&o'E4rVY3&T1JR(tm5O'.=stb"l,n1,LRV1uV>WM7<!+>eQoLNpdnEpgp3_3m9AZ5dUs7uoXWLfoMo.Drch]@5fD<lCC].@g%A,RC=J[C+**oX&mnM&6Z.h'c1I,m(?"pf?.Pp;ktrBEK6`Y*.T4@U%*`MtZBLBCE734KtcEY';3)8BVm2Y>p8O;:g%Pr"86JU<X;%Y"-OQmqs[V\mu[jX!t*Eq0%7(:&pZ(H]4F3aaRg?ZWULo0mGM5-BEdcF4Ptm<TCJF9,2pF8Q]GjZ5-mCa'd+DS!dARdHg>t9iK#O%Xer2]r+kJ.b6b[LTtVT=N0:Of[#2cDAJdAJ!,UdmUSCbG<RHouGUWnu88.H6[KJ6;dqE0u3i1fL5DOj\OEg)i*$'^AP6RdKKm"e(%gh>="aD+'W*W!.-e_sHiUmW>VT4fJYg5G(Cq[*DE@Qe<M<<jQ2HFU<((g59T.7W!*_HMU;#W9V<ZCZm2'=/U4gC-dbcPjA5^;"u?%mS9:V.j9fc\(oCipVg.d#3.1MNNu12,-HSMeg_cbE?'>r&Ts>bQn/_:]BtuB#U#a)=N>kBg>UVCrFutWg9G"-&DD-jM3*M5Q9<3:%74k.QiFp7QSKl.p>Wg&UD,$7l]o(?"p?SF];rcN*6j`\8IYZ-im+5782mm-kL]l8ZRrC?9K87g6]n\TfHd$SVEmaaV.-d'8<pSA@%Mmh3D?]V>:dR/?A[(Rr+C&RlCh(m!PZ!XIkk+_g#*3[1W[SAuqF`5#k=6%f6n17FPfBOFtV]M`?;2j@ceTL./`]Ec0M<7Pagto<F%IQcgSUg1$+O4B9HYroK:1_YY]\Fl0U>&%RA[(EH:p:BI`Zh]Jj7d\a0X2p#W:-HOe$=kQ_Scp@?_:kNd1et`:0M]<>&Vh#*nZ%01%l@DJmZ<4<%f/'4?N).3k.Y_VaHF.o07^_:*UDXeLinJ#Ga/=^&''5Y'Vl0Kq1>?_qHH:Zt*dDjUHK(a5h\kg\)JP%8<KMDPPiuV)%HK(Gfg$_Tr[XeL)L4P$1\ki"jGsB$9Z5&.9l>PZCkrq/Kk\e#@R\&T;`9_]n?lkU&_g7P>1^UpK1/3$89VTX<S6=rF#Hc9Z9ENHV%lO67"Ps`UX#\T[/]p:GkPOQ2u&*GX-Z^r7=74_2i_759]9!,@&NVkFL(&Gs#j^\^+8\`EB;2)gS8Qr!kS.LKJ-\>;p,-K89R1<ah%o.=2k8fN?6StRW<NI`L=F:b;\b/K079kPe&r8Xm!'TG.Q;5L1FXt!90m#;<q!@-&Dp+)&!p3%JbmTaTPr^X&%Ol]%B9u*+eg,hqQ%O0/u0m#JoL4Z5)NHt([eE1<PYiE8NN_tVd.c5,ibWhe@X-*Rm!Pe[?aFIB3YJS"]B_Ga=1M3ZBmC\6dcDk.MC@'W?YN[:npLaNjq%S&+aGF&gKm0U(-<q\:q<)0.=?!g\nA?EgG[`IV'X9N;*$7$cA8Wn7u@TuX-2s2q*mn;oCm!K`hPb?qNAURnS8\Q&AT0Ejn3Xd<2^%X@;`[\T3]$IU\hT+Msp$U<6j1!O6!7d)0P$+8'0\N2D8/QG3JF-`bEtkp-p:L8Q7iq5].PElDLfk-S-beQ)DqY=;TEW:F#eM9';p%qH#j?URX&9;b*pVfIJJ=0c=^jJtBVBF%R*l"_&B['TS)Jk%n<+kpR02\NDA8l6&deeREWj#7+2*C?f02*d$?j>6c@Mrfp:;*nJ`H%YH3e/!UMi(/CWg5EeHDtKrp=<`7(='<u0o3l/Gd1dAF-J(;I/NQP<;*$e?)'s#:ZB\?;1d:?\iu$DW+qLu;bcq]+#PhAh]ZXUM)L%.YUnP-1d+i8fJfWH)HT41:7bim5I'JH#D$L:h<C\r84_.,o8$=n0;f^TM3C1%m[oDD[.fLEm<@4#?Qhnj1;`l`-puRAecr9Cr\H/%5X[b1gu%[<_,C+[ZfY+,"^#U$+[b_&EIV4]6s+@ZmHrL`MS`m=qSbQbVO%j*SB%^G0LF@Q-EhX[\Hkm]?Heqo7q;b6[E1J2>*(m=%E[7O.Y&,*c9L>)?NS1i"HcAT6(\!$UaS\f5QlYS&`Xi.&?Imp;o^EJ/.@2F@i^6jhl]+5t]Y2Y?1>+tL-4)u)dl@[GmVh,6$snf1%P#P\@-q_k5aE&UjC)OjIrA?,1#ZJK<A4]](D)B3c3.F7'&u(<q*:ajP9rJY`;\j@q_L?'^mskI:1#"USR5n;[[XjNW'DY1Z@:[!?%WX=(!$lM*PmVQ]YRYkMNBpBGXL=$hp1.Jd;5l?H2rJcr-^^qS"LZQ&g#,IT/fiEADl-*PWK%nY;GLR(]['C/N*Ee)u%H<;aa/!4@%Fpf%Z#tT=Ze:%R>f8fY2c&n+^RUo4DX6.LSWgJfdmqN,][.$Bi@$;S0]g0IXJpa)oNFO[%),-XDIdrIfVL%\6#anX;@A$qm`0t>$%*$^CNU'2A66OQX).ANrfqFf6^C'0"Zf?!aj&L%!tjqO4`,`Ek\jiF+OF9DZ!Yu;*19+aJ8,.sLnMjnlNA-"9X5,]6$K?n_\7*utm%0G<>RAs5?'#^"(aEVb=UgF:VhRI7mbUk2JK#6#eeEcjHa>NbV>&Ln`kR2BQPM)G6%6op,FHRBO']6C^U(N`^afHMMhMPG;6iGPcV%EJ].O7$/W\LTEs&7NK.3_4A5V52Mha1%id50"Em;i`N8Td(quYN402K'``O<^r,BQ%?9=[[(,Z70dX>n1IbSace*o82I,8lY>@Oi%a\l^hGAKeY">80bm9L&(O^u@k2N5L`2Teq=CG24,'2^.!=cG0s0oVt99O"'SOEB$"BQlrkmS7`<QDd*kXM!m.DB@gTmFoW,-%s,l%ISeI-f(\SKV1lb33Y+4q);$Oq2XAbj\8+76Up;Bu`LS>uD'\%rP[V0EKOkFI#te6+-K8nkh?uSR@dD@clOil3@<[Z(eMq"QQb_"F%IFJCmX?9V6U2sI`Il-01fk6;T5J[`j0[2sS&kH!#4!(]H=:[F:.Qh*$j><o`D;ue;C,N@61k[<<>F_]C9em2q.]VFVEJk,JD\h!/%A/S3$?82JT*_(Lq3jtcr@`1[1"f/h@&#$[GMpYicU,14!QX2DK7Cf/D.n4\\pg)T(:AJoI,tp)]'dqPcg[g<-^S3L,nVRu0%VWh.%G=LU-'*?E%VnLKZnVW1RAa&"@M@#KCrM%!b["s(@`[A40CQDRBZp0L0m-:KJl[@,X(K!BYpqpgsWa@iLWN#rKnRRjO46$%Q.;RmV%^64cT2#]1R;)jr'5E%"`8:fLf,aI.>%P]_DK'+/0fO,\S(aI-.Rs'TB>G37#6_&6g,0(i2j[;#L35hK(M#SDqf']5SLf9Ql90$@Y%2O#=eP/Oup=mZb>Q8B(++_5;BEJQ3`3lE(/3lFir15;_J@`TLfA$&*lCL5#VM"-7!<Ila^%k$0ramk,m,Er.f6_&6+)WMAJN\h5#%+dB<C*Fe(hUj8mZ@[nMP\2"Q!79G>t_aoP"=_+M$ZpWWL2ar*t42b0(CPN`rJ]Qq&LGfmtbK.33k&fi@<7QWB\AUt*@QQ1s%bFP4%@2r`l_eFo$WjR(q_P6+<nD%klX=SP]:5cB#-XgQ',@bq01pS/%_UtD^=(jU;B22'S)&"iBCVq!MKTLDc*>9,mX^nZdHj($%Ntnb9%#"=Fm4cZs:dG@BsH*flb:Kd+[[R!'0[QuK7gRpRJU/l,`U1()2/6a&-NJOCTX_^i%X!A<Gg'1!@0M)aiK49J09"-]lcK`Q@YsHd<%BR_S@HC:1+FK!mHTP-b>rEa>nU?`QjN0'=T'Ul9n4bU72/Ois=))#eUj$BXB>a3BP/5_p7OZG:a>=NVE#\7WgP5@e1&T#K#jb?_Y%-?$U2e?+./M%W-E9H6\^#B'p48_6Mf1Jc`E[C3!L34:1=&uc1IHP-DQBd&3(3iTMMYtDi?NpTE*i>!Ig)$>2C@%4D>mB0UH'-6k$%Z"Cb6FLFk!@C@Mc[QP'5)V^GeX%3a>gX@@JmHJ&Tm>76%P>Br)gl[U4[.ghKCelm/PS%kOI,[tZ9UIOudEGJ9`#>7E=g#^M4X?6<%g>Xr:BIqFkWPV6IiZsK*gDGiieL:`5E>jL?EB4qNETYA4J#(%T#ZZ^h/P`@9[De!.C_;Dbjs#-:al3bHE1/"_^EA`,`o+dl&tY)j%2o3KXY\G^aCV=G?o;\@+GJ]YVMmEsp7FF_^<Za(DMDAr\`!&K_I0W*q+*J3R]%lIW<ah0n+`)-@7(rd0;*G9(=LZr'OdK,q:@3X7%F`X24I2Z%q5`E\II2K*GAN7-^2Gufe`qO+TCI8A/9Hu5$Z+Y+PlrTpedI=Y%YsN1`ARL0B(4tfjmo8373uP>t1_RX'6gQ\g\*YaV%8J`5sZ8hq/OK@`V+<!SPMM"H0/RtE2_2K,bN"DHe#D`:&og_%D0GSK:fhKk">C[;cY_4]:Kac\om6mLqeg[ecY,'#RJa8KsA88;W%O\41l+Kh1L[++DcbrlJ0Y1^'RQ)(S*To<fp9,XGp*j`MgkcRGKp)pAOgpMF4ncg-Hj7UKbJffE%U0Ha[,O2*gi^:cIrW4JmUr6;a%eo3n*S86>3A!D+M"tJ1;((4T)eETG)W:7@4Z.$>##ST^tD"l^d@M(2\oQM3C\Oq0+Q#&9k9^*:c$\l$!/F=oH:*^W,m:oNsh2\;C%B4J@oORF>L='",h*uH.GJ.QQGHP,@Z)'0&8<qIj4eg$q65R:)>dk$jgF;o-/lYo<@XUanmZ`9J0U_YIGkR=.#:/s4n[pOtQ>Z"M?%/g99bE@3i.f;XJ9!gt[D]2sFdBY+ad'LrU-?0u<soe&DUJllS?K6B/I<eacJUP"YV$!bEqPK!E)=plrLg]oSTLOf1"48[`<9lf"2%?dSi3IPG44a`Y:r9%nY2A!;TI"'ITAf"b`,%'FrI=kl)KN5t8Fh_,Kd<J`j)WCdR-i9od88hUlM;+K[q^/7oT@)h\03$Ta_Ta7tT%Jli11hBB1=,_."]BRH'G"J(H`qecM'c(A_5EW6&J$")a'M4BO.ci]UA#Z(Jo2CrPN%\Q\UN2W.&:5VL;c4G>oC3kbDBW_!X]^:8W%4iT#f@Eqp1o57p?<"=urV3P";6e18;M]iTQ#jZ"V9`t(>mEHX"1m6%9&tC9GF#6'R":.%]";l?K31Q6:_Dm>o/.\PU@/Y=,7JYtF%e/='R9[c`N)'DUl1ce5K/h[8J-"u`2&<MN(RQjDTVXID5FFucH8:2oTeUZ72DjiE)Akqia$OGekOb*bPDfbXS:L+g\I39l)VLgQU%0n]k,LDkPB3lWj]+He'4ST^?8T>`jN[O^&p5+cE9KM@WSh$=R(0_OXO35=0Pr4K(;4^BK[E"j:e%h2o5R_Z^@AN>;*AkG74.O(]9%2b&T?@qF3,B8fEV!X.>_Ri@b,0gn=^B0=,.0$sc\iD#NHp?)\]7Rs_4AtqM(pWi%Krj;_'M)<r*Ru:<d/";N_OmsV\T_gWZNS*Sc%glLe8_JPl/_:Au2X-:3h8j3J<n!qoWs(MGg7Ddn'@4k_>S6hV@e1TH06R^W5aAAoa7r0co,gZRQD6<L4m^EI2Y'!5b@MdS(D#N"o%CQQ*G^iY;D[Q)R6a6?jh[S2(;e$T`\(>!(WhsUrI+;\)H>767^f*0.Qlqe)\NE5G2&cGNMcIuEM2eke45t_8:?&6*Jq3uYIc[L%R%-'Td[5%u$uXT,RaGH?7+4_-@Wr`@=0qW5btXk8$OR('cqgX.YV,=FSqbPq2U_FW"brhq2%lA>-7F[d>#,8uVZ!"m5](@Z$N`mfh'%IGVnWDTfaN*Xu^^3]EtdaQ!rN`8]D3rZV@.EujQ3GPp!&2#C2h00h7$=g35%RB*,Wnq!f:gY#OGncO(Mc,r!K^4X+KHJ$^K_KUar%7:Y#4R&qj\eqD^;ob1fS`I@If+tT?;M+h<hV%c>;eQ](gc[l9f!AWTtG9R\Qr/Z7hg&jTf-b5>kFGR1D%V"n\Qb8r.7+QOAGnqjm%;)/Pn)n(:tD#,s3M2ZqUVj=m;,O4QNZKT?o2/5S2As^md8%Y3*"K$=la)3KK+W<l;dPRMNA(sfsG8YSUAe$-n%\86ORqoS"&*>o#%X,'o<--e*\1$(FgI3OJY<81,Mi/T;]QeiBj?`iLXW^t<N)]YcnL0Hu4(=up;cupHK$%q;rUAQj5@LF:&_b!K5Q@>l#S]fu>W>F?q%kM'MGY*=[FF>]O3Bd0kMR[c;Qgk=*/RHfSsG)pZ-$%OZQWdF&Je+t(a!jC8\p\lL9'Zu`r709oiagQsY@8f,MYR/*.HGXNDMpJit%0So'MM^DSq)9(.0LlTPhg\;>,qrC;c!4hsX3ZO7%7?Uj=E(8=d-?DBU]7O(lZ1e5,g/.mV]>bY0dT+\8HKaY3;6J2&:q^D\jrXmr%r_HT^Fm`fF2j)1a0,!u(QbOFG3CGBu8_J/,:(]'0HgWk#:;D:?M/>gQG:4=H:-,/uRXmj2S6ND=*D^Ih2(UoXW(5c-i%KqF.H4;?%JjulDWSQ^^I?C@u4`mHTm5c!5"V_JbQ\@C[\H3UN]"FYm.2^AX-W,"+H8%a5-NAO5Y8STQhFe;K["qfe&X0_qiYNe.$;c\C?+URV%8d(PT2i;rt`&ZdZ<10-1Q?P)PLj.NOAnb/)&2BTuj0jaIoPR[A2,K@VKdJcL:77K_/=LAAlAhDP^Nj2j72N$uo-Bb.PKqBVNFl.*%HDFm,IF_F1S1Vpqes]'I5E^jLK;0dU8`O^5adc:XGd):4Z/bO(T*ImUDg0le<Ja`q3-WbJm3h&joI$,<i.>Qm=GKUT^GCeWR&^`r%>KQ"c'4qm'/[le]"@E)n?1[33MMc9>Y1CgQAd"0,+`q1G7V2cjNg%%K*?h$n_oZ1;jlVsQLgZh=:bZb8GcHhM#kJ"+g6Tl2\3F[M%_3I3jKU3j1WL65AC>+a/ggmIW8[d5LHUSM=RPkcWF`)R0mh)NuQB@1fJI!D<Z,Jts<*Fn5UtO$H&Z[u]]X]2`K1:,[!)tkp.[#-r%#doBKmNI-i-C^c8KIkcuANk1BkYAccU.p8s*pmt,[a/J5p\q&<)bf'TV4G0Fq7(uLC&pK3YCFoVdR.gn_=_>+&sD\6+/+kPnD:MC%BA,^UnUR(K;]Ako7&ne^OMt@D-QQWbV>`*L"UX8imEH%E?9UfnYmnqe#0;9]iZ`MUi0K8"4**_b2Z=FG/Q%'^E$Ufb*@ZY,aLX4Q%;dE,/f-:ET@t7]j(;uJ#YL?`P%`AigmH3Xq4,H2Oo+!Xe=HncCM4SBUBB>ZHG#XRpms$p-Ai84g5J;^,*piGR/#K7uA+J7+Nd:Am%(n5T=fQfa7LQ&Q6XUTrYJ^+$li?VgFl$!p?#0af14XNr?T5@oJ&E,u>+i[bAE'Nna-On,UY99PWZ"0\E<c)TXBPe.Zh`2[/_*Qp.%`4gks%iq*#rjo#ccMBKId?%pDfml.Ygu4[e2"_Ht049<M@M&1MM,H#K'$"B\S59GHlS\r#NrcmVfR`LP0].93ncLp[T)Ef7&!uE_%3a[R0_@U-l'K4jsq=4VK+(H:]NsG%9I/*f60Ak4Rnh$Cc5G7UZd.o<>.CX:ik0":VI/*f20Ahrgnh$7_6?k7mLbWGSHq3>B&'0.o%QHY\6aaEmbR4mH\q=6,*01'oP;2?r;^3iT9b7D[Ad<I410Ahrgni`Bohidf0agXC;Hr&nJ&'0.oQHY\6aaEmbR4gcIo9BPk^2cm/%/%9''npnqc*g$3?/X`ftP5-;TQca>Ajt!oO^@Hfu(QHIuq8t:WYM>?;at9$bglhKU"#=5goj>4g>:O!*5ijN*<5.qP<5.pRb#]W\%q8t:S01&d<8Ve4^I*qE6;[<tib#]W\q*L%6njP?DWI3e.Q*8t@q8t:SY<8KKQ!5_F\Y\k^>:L^+k.tKU`XS2o&PRs.2cRM39B@Z7%W-m]mb#`J[HpEW#-;u)Y"!V*d-1^/%,%$"r;oC8M0AdB;ni`+r8)oGRq3K*g*t\8=/Wl+WSdk`2Lj]#aaHph%I/*f*0AdE<nf<iG%59TN^#=Q<(JB4(*!EimYj]`p9^*E41>9[Fg-1XJ1:ZT^n7)"%=jNG##^3iT7$PAE?(Ldf80AdE<6A-ZU71`,QbI9l'Ite5bI/0)L%QZ%_.F;g-^nL]kVh\#Yi&Epi4+s6Qs'D_2$,%&&1o&X("?[b9$]8_BT5JhfC2%*9RI+l2Udki"aaqCJO/=-mdS4pPd!8V%5(omo#%G>kUZ^V_E^pAI\&/q&mP>:n2\rJJ+B_i5Tha3sF]Mmfq[QUAH[Wl0$]'DsD1=M)g?qA0RUISW&P1S2"UG_c2oD]j2X(e.h#+M*2X%X<o-l>>".%P#-X5AgVX5c(&V:WYUJ6m3LcL>h5Jilhsc/)jEqr:$/D>d19l6W?189EBNjVe,/#=Z-or4Rnq#H+c&M*\f]0iiC-2$%@8Y&3)R=e0#R8RFigH?/TNSXpiFSqRS[QH<l4EV=jbber(e'6#Q$T^C"n=N'brN"5'Ho*-plLaBntu(RkK/f[&-7nrgKL>NpU^?Z%Ts`gL^Waha=!oK9*3X;tL;P0+d/d<bl`QQ)?(<f?NBr]`JH]-P/$^t.]KK(?WSaKeD.QIs*.o("K4@KL6lhqLAH<aP$49-#OS)BE%jQAtf=A;,EGVIn3dS#G`FW*efA\0^MeW,GA+kH07CJ+r$kPa%%C/<tpM"(k/Hde+q&d\X-H2HR![:9?>@9+=)EDhXNA"r%)Y8>!;%/T1'`fK^):&#A@U`0W?sBJ!&u^uh0p/tgC?7Ct]EQ8\%;fZZ!_*:oZO<ouoMl*Ne%hCnD%;+fGW/gI93gT%G[Id*B@88V9e:AqqW%U:u]q)9+rHaS\NYbPl6N+&+lN:0PBI!g=1W*@F,s:OpC2+mO9A:^=,TI=Wq5WT?R"+lU\R@HWGf[d@_s/D-cX!FEa_hkSGV_F65s%Xf9i(?mn,X@HLipgtK'mZhdj6J%)Q.=1>14`V),TnPKm+J5/J1LW6^DMT@OoV'STd2K%m&H=T@rS<Ld/6lOl)R\@'"+_\i_QCoJJ%5fmtG:e`Tl4.A6,K4XMKV+6Kc<$JsE\lX'[>*f44]COa!?S^C^$KM1HOfD0EF!F40aV>,0je)7Vh]@%(jq1?kU_AJ5/UMh*H&Eb!%+rP\Z&E7TMfjo$V8*%)m%D)7kOFfOaB7tA*`+=D`"W&lS3fI+Ni%EbuR?&7a.\Hj#VTM'L'^1/?aS%1+a=!mP4SK\s6e(Rh+bh)H%ZG')rEJ8M1D"8BhX8)dH@=A<`Jp#YI[bHe\g&pnEANu&o[o>ks[US\^J<6%#;NHo.#eXXaT6Whl"CEDJcs5'6q:!nmb0TU&<`$=F%0>2dHo&Nd?O//&B2Fo3&jEN:)b8pqOJE?!<"3Zn(+&dCGVTgG\CYs,q0>/I1n+B^rHkJ,MNn7Qu5#M;uFCpt3eBd3d;cER;Cb)!M%^[lF0$sX,!m,#Q[?qSI@8m&l#oKqh]OG[7>&g]u^?lnLu8:$it;(7'U2d,WF7hf$=O"L!pNd.H"fp1hEBh,nlhTrR\5,ho#W&Bl?%7gcJK],8\V'NA+'[e,A:Zc>>cMH`Z^bHCB=equ"\]+M#X][FtKn]PJBYJW,5%3;'EG-j4lCQ!d2PRo<-lNUg!N\bA)7/#hOBaAeO%<:tqNB4XiGa$-$tU6DI"2D:8G#=X@W&-,=$KRNMUiW/:P=^(LVg&saF;]cku!fcg]*=.6pjU;S=f$q*uAU)Do'e`r1IAYS6K^I(5%Os\Ud0/Xr0mCMRskqY\*7;qfB[D7Sdn*Okq^BQWG/81\X@`97.':lOqSj0RV+p*'l?oc>jf(I1(fHQG5Z"JKlZ>#$Z\XK[IK-lbA%mF>[CV4*dc>)]ER[$*&d#eb'XrkMc+I3#TNOk-n;1EI_Zb69AViSdK/N):mW</tlU$D-aW)'BmKCEFWU+mL87S56^J_N:Kres7#S%#B#PIa+KSENf0DCnQr4+ElQWkdp'&SHr_=WUb$_-0HmH72Ph1Opd-L0]eM^=e!lrp`JXe.HLdKt%m<&aNP"*_\B<Ac[?2O>aq13,%AG_!8O_$7jQ$<rd`!3E#4s+,-B08Wt:C@SYkrUdk*$RX.:Y1:hL_0ZReSF$@,/hu,rFM*83n<0TM+?KsFrX^>9-XhS>d&D<CC'1i%'niR3Wd(j[W0s/14L1(1>h>PMOLuCEEAj1qo;oE7<n"Ud#Ii68cJq:D;B<`JVmBRc10f=.>r*fBQ@+(7fBi!0W*"M8ILZlgMA#`\%[2uIU!b%WWohZ"[,8`c#X]`8U1qcuW)i=61\-8jX:LnZd._)o23s=4ggD.JL/gk9h5W$K?]n)kX:jbAk$+Jq=pOkYCB@s7bg?`<Q%mgqo8!u^q-I-9p>EB_"NgpN'$ge>7<nQ3["UT/Z<+Sg=,lnBn=e!8mYSKO3=1fDWh4uh(Oj[Tht43C]d%W^=_BY!ATUC1@g/#9l9%FfG0UBK*N3A67:@=M$rFG^N=ZX*p&SGf3LHUDZ=bgSIm4V<tGWRH2X?;N7/khA@3Zr?=Z7L/tcYRuVBQCd7D7D+-:!5;OCDB#@i@%e?e-mQU$;:ek>Gbb%)S;AKRdQm0d2NN#^K9XkoJc5(.k`,=keO>2Lst%NO/*GR_?F%tW]QQj:1YeZ.Lue*,0:)9X0r>i!?0O11go%_b5Dc17"Gg&5EoA`-Q=m]q'4\5>XO]mr/3k=-@iMV=4.W-e3<'HG?'J[+#n'E(,"TC$4;ghm`J'5.nCn?@FF)r=@9as7^)N9eV![%5Q0QMT>]$b-l@h2m)MO,qY7F8lOE"Te#ts/r:qNed0S9<e5A=m>>2L)'"'Q^BUkm1ZZLAnSXj,36auR(!^7<.M_]P$ME5k!m^,Rs%VtC//dR0+ShTG/qpr^oH=#:IHVtW)PWFs.QR4S:sBE6+3M)fci4g[t7Lo8[#K#+hb5QfVlVdrMF^c\_IV..4"(WRciS])2h\<Y#L%\#5h!Y52ul*]`MS_[t.OVc1sd1;YUQ!GHn\)^HXbQpB)58m#Eu['Ip5m@:Xdh_II.i;/6&BK%g,4@VhY(j(?`(MQ.edbGc[*UF,&%^:b!_1cADn"$c8:+b;1pH"t,#>!i?2=uZ89<Ob5KXGt%F*lXR1Rulg-'fS5m@6C/1eMjejK$EBgFVF5@X;&&DAMK._G@U1)IY5Hf%fb#>)N%DKF&r0c*U`*R;).eKQH6,?;9"cA#TWnXZAZ(/,eB]L8q;#A&Ha',;,Q5tSn&K38V<&Rk2kCJca2A1N>@I[T[:G9f1?56+%B"CKg%QBNu_8Vc0p6bR[K,]p2/IjImX,HZW1YFfg'k<0jqKK82=:*H#ZND(Cr,]RE^7P6'iHL25g4:'*,F8fE/#VdZjnTl.#lF>@%,Oh7-WbJJlN[8F/dshf0;7oCW(/YWd`-^G`K=!2XgNdSd8\=$^!HFJ^#.kj(c72#!M%FbG#V`l=At_@BeJ=:T@3km;GYFeKA5a<e%Hf7'.4Zh"a#QsT01Mb0)$,RB.eeL#@)3:_:@%Tc*.uUFTH"eEWc+#Gu(BF0rOeu[1iqoAD?a(9=YGYF*<&&F1DNgrTF*9a*-8[NY%F[j6]Tk_4e@2[qPeaGKADOKhZ<@sU4@7Xm=<V1++BLo-X(2q'GV;F_sTq2XCmR;6()tGQnDiBaRJZoQ.9n5%HiH504CX)15/^P[+%#.&as\$EP*c^H+iGh`W/Se9:_mAZ7fH#9-Fkr,q0]m'>i5hOMbJhRLf!^s9/#X\h)l:KS$mosN-pg?3eX&,?Z]dY9i/#03WVU][a%K>hhd[_%JFk#UD,Mmh:0dSeX2CH$b\gcYMI%'bR;Bnk.("u<eO;1#Q$kL`JNCshP*RF:h"QuC1\RQV3:Reu=D7AjaYi?KO?n+\)n%&":P?V3B6'gX3!'0][o@,B$55EON^i(a3*/1;Fn'r@mtVG;[]l4P5R%)puJ>B#sV1Ap/Ae[X!9`,!%])/,kdS4n310BKZ:4b-U)'%]em'Si:S6%XYTR&,_a5Oa;`A29<FghQMeAnoB!<blqR)k4utcP%%e>sQ%KnHe9NU2)bF]*_dt%NK.f@,0ei\RU1GUo@:'naDJ8=M%ScLE*5C9FKSY%e0l1!,kkEOaPhIGoJd<UeD1im'#DU=e-(^us?BhIU]968735QQ0>XY9@#A;%r9LmaeHQ;g)H/F@Y.-9=M@b^]<p%?&mM]KdZ'[971(6s,'Uof>"V(A!B45OgfSh)bW!?qLR&u/R:?]ZH'U67_Yu85u6\D?,'t9GG])_Z.0DlR.l!q;r_jer+`j@^pn^V%:GCb3ML1oe#da=SLVYf3_$&Z,a#Msk=`)hc9^"MeKo]$j_@f>a-o/eI;GC=dbH'fr0`_=k([$iS`+g?n8SKCSB!7jCQd29=I2[LA%&g6C4?%=s%8X+N&#/rbQKq\#b\](1Qh5of\Z0eYX*#+_tS(<?+m>PM%3,U$&+-(^-:J9)[P1*l&/%E>58-h>_*Y>E5LX6[GD?OG.%"qq?5S!$$Ih6[AqJ%'\ua,6"[c04enb?2c?&7K\A,E!,jZd.sDgNX_MmX_IZVVmgoX]PX:a$mKJSQ(eu*.JhY=*jp$An@W2<8Q3q%esAEiR]=K!,u%8oaA&(cG/d?mY^[Xem8N&gF"7Vr6]U15i_mhaG`[,Z%,19R9V=M>O#3W",t+s_%MPq?lU`3#DEOU8\QK6WdEQJM%dWZYjmD7pF]r.J.)FT>)+)Q:Yqr9DH$%L#+FcAJ_#9(c-pK?eo,$9*,OT+o="&e(l1^FKj"V&PC:sa_d'"Pr3@ABSL\)NIhg_51Y%NlL+?l9$Tr\5+p(#[SUmpf7#N@7g"LM<)q-8g(NZAcp/igHT$R)FV$Y+)k?ppd6ee'7\Ml<0B8DZW?\<IFa>k&;ZX70O@E,TE2$;%$5s&eJq=2;E[YTdArHC#)a?CAZLK^uA@?mbO<%IfIoL((kE#LVq$7Q\5_fXsTBf'Vq:p3]b;W0f+K96R")5O)1I9CGb@^3Gclap\%CHD&:"gJ.;#X\m3%>lEM)a>?>OG0tXLk:-Y@A8:h>*C;*l,KH*JRD0q3Q*J;?qp=RQQce&i\O>M7,\G!)OH?t4Mu!VIW-TR%O(r"%0Yt6d1#MJk%ZNZF:dd+X(h>`C=#IJ]"9C[F&S?%YQN@L_>$RpPU/38t3+'\Q[@R:LRP,]K9k?S_!6282M*Ra?`!6)X(EuZe+s9\b%XZ-@c&:Afuj#)CNJ3]6iEc'1R;'2GCL>B1*LtsD&$O@H^N;9H0568SW8N;PkJLtinB7.Xi!+m+4M@k=>LriuM48o@+!rbU7MW7J\%iju9=qLni33oL*f68uRdUrd+3T@!,2m/^cg(hs0b-:S`s-^*?+&$$Aj-\1/#k!bohob5G0he<[N6<2?satohh!&K0bF>W\Qd3gW>%1+IMYDgFf:T*SV?6ig2M6oWIqP7b:ErZQ[k(rK`,iWD*YHI^JI@g$X%_?>u^f+T?1d!2K!8MD[FC""u,J3X,8pqs)<BB[2&3(-$)%#[23N$:TnS_\+BeZQ]3"JV&[:-kr["8!D,.;@k)SGG[3i:^!.)$3gFJ4M(&[1rNl`)WI;?NeXXAa^c7m6f9Qn'86a&W:_2M#lp7E%1H^m.0SdnCb8l.*0ru<4%<gda7M#r)4Z7JLVKJlanqYQd`USa,'G@e4&,jui+$#-Hj5UY4-`a^!IU3o.X2>d``7,B^&fM7<)GLO]%X.NFYq7E3hjZ!Nl.*>si2-jc1#OrXkKA`Bs=;2d(9R]KhK<2C:S/_dM?7>2THCYm>"H,g<_l@.s%?\+T<Y=8PGafSh6.@!=%9LTU%#36*aXeH9e4Z#4+Z\N-&rR;:6)[(eekQ=Nc75/CM)%e8]_YEf#SreoXGQKV+;o4^_kEMhADU1^j&<HY5`^/$mV4s$f+QMp1'Z@Gq%5nMq*Mh*#6cZmd,[UC'd!.f(:P<(t:)8LS%E,W;QaW8pUE\H\S%-'S5_]pVpG3h_,jF"9SEKji6:J;oG3GH,Ij#QL$""_D2.[0Tr%O^?C>Br,We0X"Z6@[%KkXQQ:YHG'U"QpYn7$#G/HcR<=Eh"uWtE9GMG.g_ceg\MqS@K[O[1BatPZV;q#7q]b(fop.K%Ugn+*^)6O%U4%L(dXXW#Bkg?S`d21L'li?)B_/[EPI+`A`n'f##V1e:Q547P,fM".*7uB'eB2T&aau3<^ia^d91ed+ES+l)0GPEt\jsb!UE2-?%""OBP3HN?-ZucpAZ0i2OA!V[d?$Fnf@irGrT&Qc&=eULqc:f@`)QbJ[Ru<I9ic8_`5-;g9!J>UZHQ>n-#pt+@YqV&dH:/L3,E&f!%U;0&F,`\-Z1PfPLaiK&&0rR)oQQ&SFAHUVmQ#+a)H];,9o1"PXb!c2g`UG5!-A7NHK;6VEcLh=mULR;,36(NZD-9%N-'RC0LrISR%nhIWLYaN4Un<^,+0kJC*Kpi*,<_!@XC\d'\eZeS9Z,62u5='W)1LHtd1WQNV*a":J*Fh)>fSjWOWLl)1Dg)uhT&^*h14Cr%\TnUI%gn6Mo3Fn;B#Sfdk4NS%akJ(LP*^[3d=;)j`NI;!V2_<M?HY[sP$\`UW>737mj%7@Q3$>cr;Z(Wa/Ko>/q2Sf(NsJ9o5qAPS`BE`G%X_9hg?,j3[$#7;pH9e\q*^WNd]>7t9#87E5T+VoB5HQL1GFRd=,WDq,,Ea#!#U6gq.b_p>T&d>l6Db@:D4g_X7.n-OnO7$fb@%jj%Q%O(up^89>ed>8=]c*Z>-ApFPkn5B#>\""b`utM9>L88*EcFl;+cHWc3Ft;pSsMoF8q::u#X`Ck42OYZ`tA]?T+Mi+5H??XG8h_M%[s?1BEa)qu..0VfRmNI;*@Ln+knkL3APM8RZ)m<u&M-%Q8FQDHOQr_5"9sBgL!0hI/=@\cT>7*sk`K*>iCiTqO+Bd\nW?eB'd&C2%R:QN)%qGMe;boq^BKUjYdB'S%qO(p:^Y:t[%dF6VN<53;#UkL#b(N*TJP*5q<75LqN[;rkLgV),j-6q<"Y"^8Lpn$S(M%8o507("%raMWm_+-D0-@3cLcNc_WiqXE@><F!_-&Y9D5k,G@/=u;9><G-9aPrWP?jZMta\mSs=/'*j(X:dR?uD8Dkd"FoO=6df0l^$V>N3G9%eC%'12r=d_o3H;o57$%._V><=o1a0_hZe;rKA^X]%IWB5i,3uTgs*=Eh0^0sbn#E<q)5aPDhG[`6#a<g#'\7-E47q8mM5qL(RaTT%0q*a,V1rPc;YVgLmWq88gl5LB_;0,Ngas%g]B(r\>OI*Tj[!jpg]ViED/cu>#'\7Ci,6(7mZuVcY"(mr?#GA7nM[m]*X$]1D/cu>%#'W]LmM^*;(uD&H\=7Dh]D4a32r=g`o5/G*57$]>gYct`%IW?`_;0JTgs*=Eh0^$obs&Y\"K:=_Sg1tSa$b;bYPTLrnIpk;65jQo%&`4EB,IYNLL<,?s=./4UK^:W8<uD&H2X6Nb<>s(@('M5"OuR7Yj4GS#`\Fs^)98/n)L9>BcHJ$4N8o;PO:?fRO(ot+m"TBl&WT^_%GcZJAN8pEfjchX!H*`nl,/u>e]T*ssAfTtVk%>RP*YC,e\J<FMc<BAqEiPLJ%"q?db+)tD2JX@bHHn5VQAji!`$iEJ<EkM$a)G#`%P8t6qF7P8*9/qZ03GOtG0O5Utff=Q#2b#rEkuc-VSHHS\&4<$@Ii2^ENgRiShg7\l;3&lBbt0-dV`,0,N&)c+oB]kL!$;TOLBtYg%#XSYfl3QL]U>`?@iu)iaW*i6hCD5;RJ"HO#iYVJ-4M)G"h"]6^?0lEU^b4bHG^?V;2Z&ZU>K*+XnaA#A6n`/r*PJsFLdue#7paAU%4M!Y28!htTFM<`)k6LP@HlJ-l\+/\[+<I(lj3dZ\*pjP:4ITLEO]Ut-O5EFenPN\c'd$#ER:X<hGVlNXon4TE`Y6E4bmI+GT37KX%]D_?_GdK\i7Ib%PW_j25gr?,4>s,^R`hW-B4??Y8_Ydq,3o@rPrGdJP,2^D8ad(laocP=#%[dX=;E$"YlUO9M@%%K2-2Yep^k6kg%XXeOIA:ql7LmOYBQ;Bf</EM)&-&P3>b]s*_f+s[D:pX.10hSV,"LPqf09cAo^&6ii:Wpr=?N.E]s5j8S07ReXl\*K'U2%,?kk.AL%(3*F!g.E)pgcEcbo2nkX0^f#H)Kma8r(DIi9Ab&I$,6'4o9W7fs&<<Rrem+-r%ArO5KeP+&s#;4Y=$ot\B)MP\da@A<@l1UqhQqq%aBdJ3XcT\*Du'&@h4K$*7o*4<@7>V\cgo/*iRDj*WN_:]^.Y;h^fC^?>(%-sP$R]VD;:@W%8C?!QK'ipNZq(cosDZ!CG#CRQ?dA5%h$JX.+IFb:kk203<jWqD;0lb<4'K(.!EW7e6TNCtl<0,>ol^sT_/i6E8rN?l_IeToXXJZc*1o/[^Pf:ZQi>F;I`5_2)cg1N,2D9S%.`-pMOg7D#KK>l;.qR7sW<En"2agQ0H!C.lb[O2cX]jSa)dmLc`>%IJ*Ll>_9sZf_\Q0VJ`%F5T-!dmCa"q9E9/#N99NnkWrOO4A%3m(Rh&su^`[19X<P*G_QS]m4of;hfH<X"t3ldTZ(l2I4bhItH.C.Z\WJU[F_f$\`=")k^tOb]8!&r:R5Nh[ead?Xn@3A&Ig2Rnc,%^`5831_:u6--'9'_TH(dg'nTKfSjCaJXGWl/6R\&G&B?E_,0>->bR[%+u$3YLgBHA-%QW<'h)AMKW[%sLhD]"6I_!+cRmoZT%imP%KkpQ\\]VW:@bn5_DUj#6V)*L1F15aD)UVj1,<Se$G:7RHU:So*\gc/R[#-P@#2^R4/uM*_V.S!0[4c"EAZ8ij5%&!@CjY,$m4E48%C)QG,f-ec$UgEsl7m,AX!oad+ZT8Pt0?G\9@+)K"@T;&Q*HR9.cuZ6n$A;*"bLYBjWEVZDW-e$dLFUh?/#^+Ig5.`N80YAJKaYa3%4q&b.d,M.kFG'e%[?u@756N,Wrk'n"f-uB7Y)2!Kqf6!U7@:`ZCK'$a"1q[:7l=E9)mZ_ZCUF5a5bPE#lA(gCZ&W/H:h(/j_)fdY%MeI:[`:9OB9OW6)>P=jRTmH+3%i7#U>:*CBS]uUb3D'"X<NF@cMFfDYIZ7]s4:3:-po4NjZnEih3>@]W*P7c_f%:pS<Q_/<C)_lU%&pHM/Z)UrH+3-F4!FiH`WIDiq:j.4mQIPWEWoZBTP&&a+Kj>#o-gfp7[!c1(Q\35?R2/L>T/b*t.nGpNAn^TUIe`9m]Ci`_%R^nh%d_f[MLisQCP4]0nQ.rEsZd`Fd*3EF+k9ugjH:4iO.b#E)F1:d<C,rIrC8E$)K0r4iXk/bB?g`?][g2mX>]q^.]U_KLQg,9X=SUaQ%3e&PIS?>!K$VHZsnIjt*R0Gt^=Duu]lCOBKht,pTA?/DXhX.D14r6m.i>$WE>2X;+2o.7\EWhXZ5IW\p5a\Sq+>-0sq-jPZmmu?]%1iVi4kupBHDJ:E))]G";ENa6PC0X4eG=QAP,RSoh95KNYW23+!`QVhWl5:d1USr+[o[ZYBI\3RQ3alE-9nj8P<IPR3hf;ZfpCM^d%)(O?h!<]g0q8mbW7%NboAgc#_B.++24&\1MlM%>O\g!$aJi2'kWbm%0(":jgeHKF-="97r*,!V=Z>A["CJT_ai`>!Re2#c)C'D#1%Y![X)akB[lb--gqj-8l!DO`l3S2=T+FYjY?;8aU?k"BOl!ab:p5c9+P@;(KF/\lW9L`Sh`.>TZY$3UAcS+h(MALX">A"dt@*Z/<7%5iLA=SR`VbU9W_Nkq-GIP/R#sA5\GR(b_$Qe5<V4)UqC=9mk'uKP(PLhQ<mk7486dgc\VX%qG[.K;>DL5<Z4ZGXNeZK]*)@;/,d;%H@?"5@906LF[Q*KI-D4I[ta)1XWk^@kpM?g&c3Ede&psN_SgXprZLl51-i@]bgfaFDek;`DWu7p:`;=f'7;Ct.n]QKdgcf'K]4C(%(<7:^@']ok*V8%hXW6b#"rTCbAPVWI]>mE]`+UM^Xja?dZ%op0'M?_%e*Y`d'P^R?ldk454n&jWjd)EqA/b1s`f(U_?.\E(Q5kR*%4N:f[R-Z]U@e3lBi"J[Pk5H/8UlYasQEr&bKO]c=fYG9\oqL-nMW$ClRm)LJ(a+0#%R0HKEk)g9aXCLt9nI!)77VMU6Z]5EWh,8@%#?-D!>c6T(\!>G:ak5)l0tIj-3KoAC<mHsiBW[*(Sd/gK>n.]'N^q075TVW,+)YY5NZe!_&;D2@$ti_]Mj)+>$,n_I?k8'rW9(ak%4d]8>nDXu`.m..PF&,>!BK1REdA2lBd_q<uhsR%aYn\CPReb;O+T`igXO10B'k-/]I-XOM5hPg3gnS`6Epn@?m=)b`rO&21VX\D:%N6%u4PAd7CJPcJ:[$$(S01<P'\1cSEpB1Mgm:[mA[aoUa&FL<J>)uT9c(l?UmP),%CYK4mXH/kTqi'NQfW?>Y\Y"q8<hM=ofq*Kk%f!DGH,C@\_E'X%:_S82ZTW/LGT3th?&a2K@TdBCQ+Xs,$"L:Kq64ur?b#3_uGMXD-YMbu1L*V'A7AUAdhh'L_f^]dcLm5^6feK9n%%e$A"l:?;fj\0*06qV<?cT8c(,=&U`#t$b"G;12jo.lh]&gsrq"/2u]Ij:Q0l#I"E#8[$5dM>t;^H.ME/+0^"=oeliU+m]T:N4cD%\-(,t5XCgW)%\1"EX?GTOI^5PDp]fa`s>ul_N=/[Srf>dDusIC8R[bS'?aj7[s9U\7nC(:d\Fps-Qk"F:>Vjp9nLRVOiA4%,EPp6%l]Fu9eQ)f.VTN_UI^iI<KSWZl0O@=L:Irm^Gh?-FUl`QhM.PF3qi#A6OrT+phatpU/#"pShXV:^@?e)\6O_pmO>0#??J=:+rW#KS%F33OBG>3Wa6&7c6H49[0^*i7lq;F`5QCelbfDNRmot/sAD\%"nZ[UYDU=pMh*cIB/(r7qY<DKi8&Hd"mB:/?5"0t?2F]dp5Vg&-g%/HSR.[ocO>72#_=4ZsL]>L`rR!Kb=1m5Sk%$@l,;37!Sa8f*;%qN5k_fPAO*lg14N's-lZG%*n!$s6B`\=XONWTO^[]EOM]1"!p[%/;QO0&/;N7Et$=sg"'[e8bJ+Q7FPu[7hG!/&W<fL[bKQMJ"=#"Yi"\M4oC=5jsd8;;"*TE9gnKG>Q"<uMhsi8p&"%]-4jkeee="s%?@gK'(D,JG[aqnSmbZ[T1jfECQA.!M%PM,^N=R-tN&ec-(pb>C3%s[=pk:[U5_u<*&$0N)3>_5)g9hHWIG9-[cpsM5c/+1qI!EPl%b=n2mNeX=Q)r6EK.gT.F`FOja12i(W1A;Te@?c&,29GR-9(l-E%:P,M2X)I1k1:`eCk(VZKtL*"C0FM`[.OE^GH562h,eKDpCV!4%2.'&DC.LW"g%SO)#r?:K%>`;^=kcpE\6(dK?rq7`%7d6Ik;5<6X'o7QchG_N!Q$u-o<qa(CVBk^95'5PKPgMtD?ZWZq+Sid;/X!H%1)\qS0!A+Ei^^)LIflb`_>!`1S('\XLfb*jk$E,A4jYf](&dh>fWW`XKX=.:CldUF`)JG&."4.ZH/=cI3[p!Z%psaA1PuSqAP"8/%2WB[A9Z.h)[1GegWAkLAo*Hc=ecSUi)9%-Lp,\$T3n8Q[A>p,W-_#P?)E58`745`6CKr=.]LS>hn$>%gVbpI\[DjFb]ujD#@XE9!%MS#%"Jk>Y7[.0,rpoR&Rbs$5s&*E?fL?J%4k.2qVXiebJ5lOB<[55)-#Q;<ni6[=molA>aI)d):qCc&fmgP=gH)ur*K]lC_+fufQ%-Cu21<.Jq5d!!ihPF+g!3E;Qu1hJLX&WHFX)&I3I1fC`&2=6<H1qE#MHGLt$16lab$%_Q$'p)qkS3$1q>M8QA9r'bXquB!H;baE@%nTHX"dEbCk>GLDhX#iZfekDP8DbBK[`$6_*K$Gfd2j#5aM)o"i'Tfr?po-2r%YKPA1,b]-o+'W*BsSf8TX/lm,bAIfWS;ChPNjLn%krRVo=Y4*4)RZ]IT/92RNqNTNkM<XMJe6fo2eT)=eMDbGO*D$bH+B3j=^2A;An:@3G8n]Ei?Eb8Zi:2,Z>fO(ja%`!<b@uTooP0]%=e]\faKO@oTVbSH#ug?i3VV4YhTk,]cHDWj=nGr0:9(*@c:cgqVrg]4Y^I%nMlDfGg<Lns;dCn6GEr#HG$jToE\*2DNbmBo4&bRX%GNi5fj2s$]7'64m0'Gld4BLBkBHId6gBCd(00Bb4_*\89OAaCE2,.3k7+3PHq/P-[aT;?3?&=Z97c(BhjR?E#[7r3nEn!3>YUU_0%,#cnG]rj4UEB[N+o!<IiG&T0I%$eq7pX:nEC[*U.(X[@\jkoN*57D9JCse6%9A;uA")5DCep(b[72*Wc41.P:),^-,Og3Fmb`\]$%E+Cu8M/6$b<_$fsX3uY4*:^FV@s(]?)*lL$b(A!Z;$2#bq-&3$3j5UU[GB!<h(RX^'8X2Y!?Y'K=/I3L)>Hnhj$T5Ng#QB,(a(@9%!NKPg=+c-;8I.#hi]a13D]4haOq:%CLcaKSaK)aYq#flc*;L.SdNI'.36X!)7)%,!=P=FX+VAWa`Fh3"r`@[A@8!Gsh:I*kf8,V;%]R`1_L9Ui@T\1bje[%s&dadj"3pr>)<)2IsV,,a<<lAsKDU=OJk@;MQK]OUFZ%s<OEA?r'/Lke;N()m#2"41^,i.^ipR4WogTP],%!?dkB$h\P)+?gE^/$eXBrW?lDYSh`n@r-n&,!Vfoae]G-oE=2&<:;kl)+5u8$<1SjJesp#?@VRD.q#]BVRg_Z4QWNUM%=1ARj6:t%2]3:&!Fal6O]S5ZVtu?1+3==+fY[;!`nn>e)?KY$e7)56VK4V$J,s(&opCGYma2/b@s/PELp@:p]BNXe7X@mSnW=\0,1,TJlC`3r%*QFq3d%91(E[pIRN`@"gon^c3VoP,U`P/<.6YA`[IPE2:pf1t`^15(Vm(/coFnP)1]17PO`aM1g'jjXp3`QW<6'Qfn!`]=#V.NLG%IcU2XXj.:eFL4^g;lf3Bl72pGXp9+q=kR@r[#ggc2;Y[ie.m%4\7a%k,;QOs*5ZOk+kAP%GgM=rBF+(T7-*O"4mbiRj83#H):>F,%_Pt56F37eqnS=Ef"'G[t21]mJn-6%!qaT/G`DA&CqM\P,mGTbon=Ej;W\3mZhlsm&Q*j7:2:r;+=et+pn*8VW/Zf)n1ebS3'jAO_%)o\aV#EdiMXKCb2&E6WF`Z$\^>&P9N$,MP1B2&e^DMX-$6pn)LI-[3DY9L-iW6Hm0'C3;_RZhrCa&K$&o9I4eY43^"\>8irODP/>%N1Vd^Da/)sqBb*PJ6H]k,5!L_3I4GLDW@`Wb^s#ZN=SmGc*BA<q$;UpL>pa-2toK3ecQ?+M.>Z!&@;8Gf%IZa?E7l4R-U,:*NgP"%?&=9IfUa!`CgPDTS8W7lbQ:pL<GSrabkMT88W`)2R7Fmn;s,m_oEKaHIk/=YhTp9\&?tN'$j$LRdH]I:j(G[L-g:#Ep2@;]6oO-_%pf7j!L_;quB=[Slo+9si+pO!FP#/-*()'6gX>O%t=m]"Q+(89gq--WKDT@ICi4js@7bJ<o-?qcA"5](='CB'c4]D0R3t/i'c?rUQ%9,MZ"EhcB2lA/"^M,iGD($]9m--%#Ymi6MR/Gi=;:H8fA%FJS$N3`V>MkGC2&(Ls)PH;]bjuODK-)I%,aIngX2iI=h^^7'4^m(NM%^5.SS\R9`Crn)**l1d8G%g_G<'NE(q$I9;.qfE=,#o4C96cBr/roGq0TOkVt:G@$(g"B(75Y#:I:_=!!-7/Cq"m][SUu8n<*&$H2%&Y4---cX`tnOJiJH(O+Zir?GJH$nIO%dQ[hXm@Yl"+%SLGtTYha`>X(np,/Xj2^ntrpUb<%@=L!?E_")conD&ehT]GeW#i>:-FZj%LE^Q/$&Y&U6Ip?aHg"*Ck)flQ/knf;\>H1&D/;Yd?B)kL3B:\h@0OXul9HUk(=&BVEnseB>nQOS)dGU[GZ3$#\VI>Q_n2:R<ko^.%&Njf<Xtf8n'fLLWcZj@ZRX1=0MTF(+%@;*2`[==!j]5qX7bZoEYjQ<V$OQOrB%Qqm-IO@2;bnMldcfb\dkp4l=YE@G90?NJlFb7W%Wa8X^ok%qale7.t.@m9p6LJ]=LO9$SfCl`DW%p+O+AlJKn%fT'&0Q0R4V\r'R^=9P;pWi&[c1g=&Q(9rHRmJOKRJdG&T>8X-7HD?%bG^fgg]lM+YWnDI+WfUV2D+:hpgS<L]\R=RpBQN5%X1!>!i=g!2o>?Zg25DsR;A>3d>frIJ4-lWg[*clcu&45&+b>WYUt7PYQ<9k%[>CdU*Yt93,`A.<[b]l5DSuHYH\a,\b>[EOBqYAm/sp(ARp47BRUgo9]-/Vf$u7lh+1]SMD0J't/p"L-01=rtjjT8CEuDl^\bmb'%REM/oQao_C)dep8\%,lR%89!tbMA9VFm_]U\%qPB!j'S:=>f^m6q/rqTZ_W*5cqOm%:/(5F)W]%+u2/N2''ol_UUO2<A#Nk.[Mmh%.Mk71NRj\-'Y_`/E5mZ-mO!.QnnJ(M(Y`hTqajs,oYNHZe&`Nnl:o_HMN9dj8t"1$ZAAhb7BT1TI0]!iEZseXpmSt=-&(N#F)SJK%H)8,eoopB>lHY$odKO0k6SS8F>I)GnpUO[m)U^Cuk@-rL(RsJ#Jf8rHkDntOZ$(lq('J_<+"cYV(.X,@Sh*JnC,R6Lc\3d-HBR`<%@;06_c(/?;pUMtZ=fg(u;E<r)pMT*LT0UVKY$QH@-d#oB>Ls-E)Z:7VP(1!G+i6-E$+um=!frMYoa#'0:kdR"4EQ:39(^,U_A-6X%h1MBY8=<KtN9;EsK'!X]IN-GW>%K;ll\Yln+jK^\:!h#sn<ls,D_$,Y]ZtpMq+r(7X#MSEg22_dD9JB3EN#1H\9CB#aOVj#4+o&W%n\o'V[k]Vl'=%pn36ir!KTK'(8L8d[9+tD2>$u6e$]-r:OJ(!(K]J?B1F2!?&tOr4q7>D;Vd2iWUDs"4r.m&Lm^_=<3r^u28&%1:%;KKb1f/205.#D+@H]c[O^L?*">Cu+S@`9uo@7Z<'>S@YlA:CH)o7ZcRTl"@h76W#;LDu).Ha;<EG2[[^WBrNeUrd:B$,J]]1!%^c%^(d]D@]MDU6=2hb\+/a*fu\amV=W2CVoqg`bjE40TLH-#f;5qalW`kQ_0teS((A.).*i+>3DJ\mDL$T5URF(>rMQ:dlS$$LiQ(ut%mG!]ZIfJ6U5Q&RFJ!7X!-htmBIfB3Bjl^"L]"It;j3QW_nDh]q^AmMCJ,IL5Dnl8"^]!qcQbO3hSA,L0c0'"?eF[>)YJ1&,a6u5B%E1`IM"+U(DT.B3iikFXVIe!!PJ,/ViDnl1ubKk\2X0:C:rqc0>msk6Rj/BbCOT/(Ir@bq^ofW9Bo=t;R"-i6Odgr'8s8KVpIP3tb%e(5\6J,S1F5Q?*/o=t4ur=AqUs"&T8^\d<.+2@dNrS+OUJe.k:VgnIU:Yj@9.#8?aqkN$41C$XCrPq]\lfi>:p$$*rrAsoC5CW@I%hgGAET7?Y5^]3r4TDd*>s7H,25CEFsqr]%brTPtBs1cl5?[qejgACe\q;p^65CEHgo_J+%?iKHi^Ys+lT60kSIeJj&r(isa5BkTf[f~>%AI9_PrivateDataEnd